{
  "info": {
    "_postman_id": "44a7a83d-d0e0-411b-bef6-0d7db8376e40",
    "name": "ACA Control Room !",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Endpoints",
      "item": [
        {
          "name": "Navigation",
          "item": [
            {
              "name": "get",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "25e541e0-509d-487a-9dc0-ac26a68025ff"
                  }
                }
              ],
              "id": "702258f9-9fc5-42c5-bbc4-522e8153661e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/navigation/"
              },
              "response": []
            }
          ],
          "id": "0bdd220a-08ab-481b-b20d-f2adc70b37a2"
        },
        {
          "name": "Identity",
          "item": [
            {
              "name": "get roles",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "09c8ae08-d73a-4a26-8331-0ad8031e78b9"
                  }
                }
              ],
              "id": "dc887249-b14e-4a8e-9ad8-c2d6ecaf6bb7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/roles"
              },
              "response": []
            },
            {
              "name": "get user roles",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "bed0afce-15cf-43a8-a838-faecd147e3ad"
                  }
                }
              ],
              "id": "9cc81eac-7da4-40c7-9c08-2f6f840623ba",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/user-roles"
              },
              "response": []
            },
            {
              "name": "set user roles",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 204\", function () {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "1886d153-4fde-4120-8aed-3d5acf2c435a"
                  }
                }
              ],
              "id": "5c891181-bf7e-4334-98c7-8f291632534c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/user-roles"
              },
              "response": []
            }
          ],
          "id": "23d515b6-15a8-468c-90b4-08644aab1e2a"
        },
        {
          "name": "Deals",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "f0a92574-ae39-41cd-b93c-cff7c081cb99"
                  }
                }
              ],
              "id": "60deb003-5499-45d1-9bbe-19598574dcba",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deals?$expand=Companies($expand=ContactsUnderTent)",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deals"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "Companies($expand=ContactsUnderTent)"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "3a2b5182-2605-4420-873e-36f8ff9aa2d6"
                  }
                }
              ],
              "id": "21840986-aea5-4c21-b07c-eef9233ce793",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deals/:dealId?$expand=Category($select=Name)",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deals",
                    ":dealId"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "Category($select=Name)"
                    }
                  ],
                  "variable": [
                    {
                      "id": "1260d5ea-8c77-40c6-9b6d-e6a0df96b13a",
                      "key": "dealId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "27c778f7-51fd-4bc5-b546-de4ae8ae5e83"
                  }
                }
              ],
              "id": "85fb226d-2545-4c8b-977a-23a221fd1883",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deals/:dealId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deals",
                    ":dealId"
                  ],
                  "variable": [
                    {
                      "id": "f2f0d919-eaba-4895-899a-c9389711d651",
                      "key": "dealId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "e5e38c2b-a6ac-4647-b7c5-542cf035f82d"
                  }
                }
              ],
              "id": "77bf01d7-7ac3-4d72-875b-0a63fd993c6f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Deal\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"9C71B573-0165-4CB7-9EFC-85499FD17BA4\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2021-01-01T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n    \"companies\": [],\r\n    \"dealMembers\": []\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/deals"
              },
              "response": []
            },
            {
              "name": "create full",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "56acb599-d996-44c3-bbaa-14cc1ded758a"
                  }
                }
              ],
              "id": "d1e9528f-255b-4c91-9fd7-1b0cf9c21121",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Deal\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n    \"companies\": [\r\n        {\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"endDate\": null,\r\n            \"employeeRestriction\": \"InternalDealAssociates\"\r\n        }\r\n    ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/deals"
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "28457a57-c142-474d-93c3-c9b2dfdc4c40"
                  }
                }
              ],
              "id": "ee1eba30-4f5e-4c27-8313-3e66a85b76fe",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Deal PATCH\",\r\n    \"description\": \"The deal of a lifetime\",\r\n    \"categoryId\": \"9C71B573-0165-4CB7-9EFC-85499FD17BA4\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deals/:dealId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deals",
                    ":dealId"
                  ],
                  "variable": [
                    {
                      "id": "c2f18a93-65e7-429c-91d8-ce271cf6fb38",
                      "key": "dealId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "put full",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "cd315ece-e621-46da-91b1-eacea8978c43"
                  }
                }
              ],
              "id": "9bf4e006-b330-4484-909e-0a3f26ae9217",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"4193 ControlRoom Deal PUT\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n    \"isDraft\": false,\r\n    \"companies\": [\r\n        {\r\n            \"id\": \"3B96CB2F-8EFE-4016-D735-08D951959E56\",\r\n            \"name\": \"4193 ControlRoom Company PUT\",\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Active\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\",\r\n            \"contactsUnderTent\": [\r\n                {\r\n                    \"id\": \"6C08ACC6-9F94-4ADA-E5AF-08D95110C3F2\",\r\n                    \"name\": \"ControlRoom CUT\",\r\n                    \"title\": \"title 2\",\r\n                    \"clientId\": 3396,\r\n                    \"companyId\": \"46499bfa-9b96-45ed-b048-08d950d32316\",\r\n                    \"addedDate\": \"2021-07-27T07:50:00.8080144+00:00\",\r\n                    \"lastModifiedByUserId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n                    \"lastModifiedTimestamp\": \"2021-07-28T07:50:00.8080144+00:00\",\r\n                    \"createdByUserId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n                    \"createdTimestamp\": \"2021-07-27T07:50:00.8080144+00:00\"\r\n                },\r\n                {\r\n                    \"name\": \"ControlRoom CUT NEW NEW\",\r\n                    \"title\": \"title 2\",\r\n                    \"clientId\": 3396,\r\n                    \"companyId\": \"46499bfa-9b96-45ed-b048-08d950d32316\",\r\n                    \"addedDate\": \"2021-07-27T07:50:00.8080144+00:00\",\r\n                    \"lastModifiedByUserId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n                    \"lastModifiedTimestamp\": \"2021-07-28T07:50:00.8080144+00:00\",\r\n                    \"createdByUserId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n                    \"createdTimestamp\": \"2021-07-27T07:50:00.8080144+00:00\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"4193 ControlRoom Company NEW\",\r\n            \"dataDestructionCompletedDate\": \"2024-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2024-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Active\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\",\r\n            \"contactsUnderTent\": [\r\n                {\r\n                    \"clientId\": 3396,\r\n                    \"name\": \"ControlRoom ContactUnderTent NEW NEW\",\r\n                    \"title\": \"title\",\r\n                    \"companyId\": \"46499bfa-9b96-45ed-b048-08d950d32316\",\r\n                    \"addedDate\": \"2021-07-27T07:50:00.8080144+00:00\",\r\n                    \"lastModifiedByUserId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n                    \"lastModifiedTimestamp\": \"2021-07-28T07:50:00.8080144+00:00\",\r\n                    \"createdByUserId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n                    \"createdTimestamp\": \"2021-07-27T07:50:00.8080144+00:00\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"id\": \"4DBCFC0A-701A-4CC4-F94B-08D950FD8269\",\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"AssociatedComplianceTeamUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"id\": \"A77E1574-617D-4019-0301-08D950FE4B1F\",\r\n            \"name\": \"4193 ControlRoom Restriction PUT\",\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"endDate\": null,\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\":[\r\n                {\r\n                    \"company\": {\r\n                        \"name\": \"4193 ControlRoom Company NEW\"\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"4193 ControlRoom Restriction PUT NEW\",\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"endDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"AssociatedComplianceTeam\"\r\n        }\r\n    ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deals/:dealId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deals",
                    ":dealId"
                  ],
                  "variable": [
                    {
                      "id": "e53eeda4-90a8-40a7-86da-246380fa6b45",
                      "key": "dealId",
                      "value": "80fcb264-7a5b-4668-d7a4-08d950d32303"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "4ee84f96-5b6c-46bb-a3d9-5d92fabaf8ee"
        },
        {
          "name": "Deal Categories",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "a24109a1-fa9d-4eca-b3d6-8d828ab30c54"
                  }
                }
              ],
              "id": "be4dc755-073d-4dec-9f7e-94d9e4327668",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-categories?$expand=Deals",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-categories"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "Deals"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "179d33f5-d21b-4672-99e9-7085884c1406"
                  }
                }
              ],
              "id": "534cbc03-86d8-40ea-aff5-16952536c475",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-categories/:id",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-categories",
                    ":id"
                  ],
                  "variable": [
                    {
                      "id": "d1a733dc-2af9-4dfb-8e8d-e544170a0ca5",
                      "key": "id",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "37b8edb4-7a55-49af-a6be-7d58ed5d5087"
                  }
                }
              ],
              "id": "5fa30da9-c906-4442-8470-d63533172fae",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-categories/:id",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-categories",
                    ":id"
                  ],
                  "variable": [
                    {
                      "id": "b69c54f1-cddc-4b3a-bd10-db1363e8fc2f",
                      "key": "id",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "df485ad2-0146-4329-8645-98644d62af08"
                  }
                }
              ],
              "id": "a1f62989-7ab5-4456-bd64-6e8515065c35",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": " {\r\n    \"name\": \"ControlRoom DealCategory\"\r\n }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/deal-categories"
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "8120e91c-a551-4b80-881b-f08da7ff9a90"
                  }
                }
              ],
              "id": "6de5fede-f063-4761-92d6-e6a0400e4176",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Category\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-categories/:id",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-categories",
                    ":id"
                  ],
                  "variable": [
                    {
                      "id": "c76f24bf-6012-4bd8-8bef-0ea320f49c73",
                      "key": "id",
                      "value": "9C71B573-0165-4CB7-9EFC-85499FD17BA4"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "823a25ee-92c2-4649-b54c-f5620e57614b"
        },
        {
          "name": "Deal Restrictions",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "6c928c1c-a0f5-4b49-a144-90ccad43a789"
                  }
                }
              ],
              "id": "69e1d930-371f-4f4c-bbdc-d1787952e173",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/deal-restrictions"
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "56726805-e73f-4885-bfb7-3bba07f25cac"
                  }
                }
              ],
              "id": "bc3f84c8-28aa-4a48-84ab-bf501a331be7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-restrictions/:deaRestrictionlId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-restrictions",
                    ":deaRestrictionlId"
                  ],
                  "variable": [
                    {
                      "id": "3c776075-4dfd-4f05-b341-964c075c3039",
                      "key": "deaRestrictionlId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "2bc1dfc5-dee2-4c69-9dcf-f5d7ad2f4c64"
                  }
                }
              ],
              "id": "e77ec905-75c1-4462-97bb-a3ce5807d341",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-restrictions/:deaRestrictionlId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-restrictions",
                    ":deaRestrictionlId"
                  ],
                  "variable": [
                    {
                      "id": "fea63e0a-c6c7-49dd-aead-155f5572a11f",
                      "key": "deaRestrictionlId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "8a4ad158-f024-4471-aa25-da218699dc77"
                  }
                }
              ],
              "id": "2cea0c87-f733-4a97-8266-58b65dbd62af",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Restriction\",\r\n    \"dealId\": \"4FA02957-7CC6-4767-BEC5-08D92C2971D8\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"endDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"employeeRestriction\": \"InternalInsiders\",\r\n    \"companyRestrictions\": []\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/deal-restrictions"
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "5dfa6432-7813-41af-bb8e-549919cb3b12"
                  }
                }
              ],
              "id": "4fb178f2-c318-4f2c-8f5f-4ac217cb4b9a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Restriction\",\r\n    \"dealId\": \"4FA02957-7CC6-4767-BEC5-08D92C2971D8\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"endDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"employeeRestriction\": \"InternalInsiders\",\r\n    \"companyRestrictions\": []\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-restrictions/:deaRestrictionlId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-restrictions",
                    ":deaRestrictionlId"
                  ],
                  "variable": [
                    {
                      "id": "aef7ff50-b805-4160-a9c9-2edeb8a2db3e",
                      "key": "deaRestrictionlId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "put",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "2129e0f4-4c53-42c5-ba7f-cb3287a32410"
                  }
                }
              ],
              "id": "e63d321d-514e-495f-ae9a-5ec4b8b6a99b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Restriction PUT\",\r\n    \"dealId\": \"4FA02957-7CC6-4767-BEC5-08D92C2971D8\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"endDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"employeeRestriction\": [],\r\n    \"companyRestrictions\": []\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-restrictions/:deaRestrictionlId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-restrictions",
                    ":deaRestrictionlId"
                  ],
                  "variable": [
                    {
                      "id": "f401543b-3ca9-48f0-be9f-694c58de80a8",
                      "key": "deaRestrictionlId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "9a4de2ab-62d0-4a69-a9d5-31c06f49e625"
        },
        {
          "name": "Deal Members",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "62865b91-299d-4393-9391-b32bb12be14b"
                  }
                }
              ],
              "id": "13163506-417e-4bae-b500-4914c30787d1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/deal-members"
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "84e50de3-caa3-4654-8867-b0788c66e09e"
                  }
                }
              ],
              "id": "7d78fe13-255c-41f1-913e-15726968f5ee",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-members/:id",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-members",
                    ":id"
                  ],
                  "variable": [
                    {
                      "id": "3aa20f51-e896-43bd-9a96-53c1568735b2",
                      "key": "id",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "3bffed61-f590-4601-a399-63aea4ba8327"
                  }
                }
              ],
              "id": "9e58e6cf-13f5-433c-aaf7-e94c7206e38f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-members/:id",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-members",
                    ":id"
                  ],
                  "variable": [
                    {
                      "id": "2aaaa2e3-7207-4cde-a7d6-90eb359414a4",
                      "key": "id",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "345ec702-8585-4129-8618-6f8d67482191"
                  }
                }
              ],
              "id": "cffb4980-0ce9-4fe5-bc18-abd97106295d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"dealId\": \"4FA02957-7CC6-4767-BEC5-08D92C2971D8\",\r\n    \"memberId\": \"EE3034BA-ECCC-44F5-BDB4-93EAF6679944\",\r\n    \"memberType\": \"InternalDealLeadUser\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/deal-members"
              },
              "response": []
            },
            {
              "name": "put",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "a966cd56-93c6-45b7-b920-ec049210d916"
                  }
                }
              ],
              "id": "f0cc9355-da64-43f5-a061-b703a43413d0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"MSN Deal\",\r\n    \"description\": \"MSN The deal of a lifetime\",\r\n    \"categoryId\": \"9C71B573-0165-4CB7-9EFC-85499FD17BA4\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2022-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2022-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n    \"companies\": [],\r\n    \"dealMembers\": []\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-members/:id",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-members",
                    ":id"
                  ],
                  "variable": [
                    {
                      "id": "b087855a-97f2-48ec-ab87-fed15b4b6172",
                      "key": "id",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "dbecd4ba-ff49-4e74-9021-676fca7f5405"
                  }
                }
              ],
              "id": "9acf7ae7-e651-4a45-839a-ec9f05a159e3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"memberType\": \"InternalDealAssociateUser\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-members/:id",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-members",
                    ":id"
                  ],
                  "variable": [
                    {
                      "id": "aa5398af-f206-49c9-a2d2-347b5fc279ca",
                      "key": "id",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "fb54ae0c-297f-4efc-9d77-e143fa2d9df5"
        },
        {
          "name": "Document Types",
          "item": [
            {
              "name": "getAll",
              "id": "ca7d0160-528e-46fc-bd09-d6300bbceeab",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/document-types"
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "f4403e39-3d50-4f75-802d-be5a5e00f1a5"
                  }
                }
              ],
              "id": "e09548a4-b2e0-458b-897f-28c8e80a56fa",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/document-types/:documentTypeId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "document-types",
                    ":documentTypeId"
                  ],
                  "variable": [
                    {
                      "id": "5a9d28af-ea46-45dc-83da-5ea7c6a83955",
                      "key": "documentTypeId",
                      "value": "373B58DE-E888-47B2-4E47-08D94DF4A02D"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "f307b20c-d47c-4c18-89af-dc1ffd19e49e"
                  }
                }
              ],
              "id": "64e76b18-2270-4d84-99c3-1c7ad0cabee1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/document-types"
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "613231d0-019e-4699-ba60-bc168639c04a"
                  }
                }
              ],
              "id": "ef1b4402-8527-4926-bddf-11f454376163",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/document-types/:documentTypeId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "document-types",
                    ":documentTypeId"
                  ],
                  "variable": [
                    {
                      "id": "d26002d1-def6-4709-85d5-0ff1be65776f",
                      "key": "documentTypeId",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "78f743c0-544f-4be8-8cd0-ad0821c492f1"
                  }
                }
              ],
              "id": "4c25551f-0cd6-462e-98f6-44391418ed87",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/document-types/:documentTypeId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "document-types",
                    ":documentTypeId"
                  ],
                  "variable": [
                    {
                      "id": "bcbb5ad5-6576-4d50-94a3-8e45636744c6",
                      "key": "documentTypeId",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "put",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "8dd5c2d5-0d6d-4650-a7a4-77ff5b574c87"
                  }
                }
              ],
              "id": "176ef63d-6618-4a20-b4a0-c72b11e00bb0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/document-types/:documentTypeId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "document-types",
                    ":documentTypeId"
                  ],
                  "variable": [
                    {
                      "id": "b7925768-6b84-4df9-a562-4441702da7e3",
                      "key": "documentTypeId",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "dc92af85-5819-4318-8ff4-7cffde7f1454"
        },
        {
          "name": "Companies",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "351f7e6d-aede-4c84-b831-c7ddbf4f238a"
                  }
                }
              ],
              "id": "aa4b8f67-7ef4-4c82-b452-d559ca5c8a02",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/companies"
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "7328b243-0635-4abb-9e7a-c48e6a81ba61"
                  }
                }
              ],
              "id": "4747c269-80fe-4156-a190-1da35ea782f3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/companies/:companyId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "companies",
                    ":companyId"
                  ],
                  "variable": [
                    {
                      "id": "a5165937-6764-4edb-9abd-c4056042db1b",
                      "key": "companyId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "a36a66c1-a8da-4deb-be70-d2b5300dcc46"
                  }
                }
              ],
              "id": "cba081bc-9709-44df-8fba-75688a597da6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Company\",\r\n    \"dealId\": \"4FA02957-7CC6-4767-BEC5-08D92C2971D8\",\r\n    \"typeId\": \"4FA02957-7CC6-4767-BEC5-08D92C2971D8\",\r\n    \"type\": {},\r\n    \"status\": \"Active\",\r\n    \"ndaStatus\": \"NotAvailable\",\r\n    \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"dataDestructionStatus\": \"NotAvailable\",\r\n    \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"contactsUnderTent\": [],\r\n    \"companyAdvisors\": []\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/companies"
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "fb613770-7423-44a4-8ddb-815ed3e06717"
                  }
                }
              ],
              "id": "84a99da8-e3ce-4f1d-899b-af2a3fa646ee",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/companies/:companyId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "companies",
                    ":companyId"
                  ],
                  "variable": [
                    {
                      "id": "ead4d4c6-6ed5-4ce5-84d7-aa385609c2c4",
                      "key": "companyId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "e5eb4b83-8f68-468d-847e-f214064697f7"
                  }
                }
              ],
              "id": "9ddf2244-b94a-4489-a5c9-89970a1af971",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Company\",\r\n    \"dealId\": \"4FA02957-7CC6-4767-BEC5-08D92C2971D8\",\r\n    \"typeId\": \"4FA02957-7CC6-4767-BEC5-08D92C2971D8\",\r\n    \"type\": {},\r\n    \"status\": \"Active\",\r\n    \"ndaStatus\": \"NotAvailable\",\r\n    \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"dataDestructionStatus\": \"NotAvailable\",\r\n    \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"contactsUnderTent\": [],\r\n    \"companyAdvisors\": []\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/companies/:companyId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "companies",
                    ":companyId"
                  ],
                  "variable": [
                    {
                      "id": "59c38bee-4e1b-4a1b-8bc1-aad37ae43440",
                      "key": "companyId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "put",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "16e39f94-7bd8-40eb-b2ab-b368c65b49dc"
                  }
                }
              ],
              "id": "f2d876c0-5200-4020-868e-4b8a60ab9ad7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Company\",\r\n    \"dealId\": \"4FA02957-7CC6-4767-BEC5-08D92C2971D8\",\r\n    \"typeId\": \"4FA02957-7CC6-4767-BEC5-08D92C2971D8\",\r\n    \"type\": {},\r\n    \"status\": \"Active\",\r\n    \"ndaStatus\": \"NotAvailable\",\r\n    \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"dataDestructionStatus\": \"NotAvailable\",\r\n    \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"contactsUnderTent\": [],\r\n    \"companyAdvisors\": []\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/companies/:companyId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "companies",
                    ":companyId"
                  ],
                  "variable": [
                    {
                      "id": "264894f6-1229-49ab-96ac-0c9cc98a55b8",
                      "key": "companyId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "d7173f2f-5f35-40f5-8661-aaa9e06728d4"
        },
        {
          "name": "Company Types",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "fdee2681-7437-4101-8673-638875b8e115"
                  }
                }
              ],
              "id": "5201eb98-832b-4b2f-812b-76b30285ebf7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/company-types"
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "cc3b5e2b-f81f-4816-987c-37b67a446390"
                  }
                }
              ],
              "id": "9677e601-ee20-4d88-b8b6-2137c321bb3a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/company-types/:companyTypeId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "company-types",
                    ":companyTypeId"
                  ],
                  "variable": [
                    {
                      "id": "346e6874-a6fc-453c-bae1-0e9c6c187701",
                      "key": "companyTypeId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "26100d89-2e83-4920-a1e4-0f02d8de483e"
                  }
                }
              ],
              "id": "60c1a8a1-2383-4b66-9af5-0c506c91d7d3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/company-types"
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "2ab98269-eaf6-4706-8adc-b34f585ddd22"
                  }
                }
              ],
              "id": "b3ef6174-bba9-4141-9d36-6ae1bcdb4ff8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/company-types/:companyTypeId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "company-types",
                    ":companyTypeId"
                  ],
                  "variable": [
                    {
                      "id": "195fa8fa-4edb-4baa-86e3-a431bd6d3a79",
                      "key": "companyTypeId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "aa614426-0626-423d-9ff0-9f462e09603b"
                  }
                }
              ],
              "id": "70de0ac5-9f91-4f33-86a0-444d2f38a2f6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/company-types/:companyTypeId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "company-types",
                    ":companyTypeId"
                  ],
                  "variable": [
                    {
                      "id": "a9e6edf7-05f5-4c65-b7ac-1b1520f97788",
                      "key": "companyTypeId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "put",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "0416c0c2-6655-43b8-a579-34994c2c4fb2"
                  }
                }
              ],
              "id": "3bfa8c86-1ddb-41d7-af58-a7ecb477b9d2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/company-types/:companyTypeId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "company-types",
                    ":companyTypeId"
                  ],
                  "variable": [
                    {
                      "id": "4b5ecc93-34f5-477f-8340-3194dac17034",
                      "key": "companyTypeId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "365645b1-d63b-476e-85ae-2c22f620d36d"
        },
        {
          "name": "ContactsUnderTent",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "88fd3a49-f76f-48b5-89df-7f5990e59e3e"
                  }
                }
              ],
              "id": "0b3472f6-1dc3-4d8e-bcb9-31d417bf02be",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/contacts-under-tent"
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "252d8f76-80d2-4875-9da6-ca3b94f7b497"
                  }
                }
              ],
              "id": "166df813-ec3c-4dfe-a923-c718905f3994",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/contacts-under-tent/:contactUnderTentId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "contacts-under-tent",
                    ":contactUnderTentId"
                  ],
                  "variable": [
                    {
                      "id": "dc15d7c8-be37-48f8-ad07-1e9f5a730f39",
                      "key": "contactUnderTentId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "95f05871-b580-4a37-ae1b-8b768bbe6584"
                  }
                }
              ],
              "id": "58b86d4f-5420-42a1-a400-f44d83cc8dcc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom ContactUnderTent\",\r\n    \"companyId\": \"63D8B0F9-C293-4ED1-294E-08D93C6D0CB3\",\r\n    \"addedDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"userId\": 7603\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/contacts-under-tent"
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "d3ba61ba-7c8b-4ce5-9695-0aefdb0512c6"
                  }
                }
              ],
              "id": "46b45a37-4bad-4834-99ba-6166ede16297",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/contacts-under-tent/:contactUnderTentId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "contacts-under-tent",
                    ":contactUnderTentId"
                  ],
                  "variable": [
                    {
                      "id": "587e51a3-e9e5-44c2-9c1c-079b44c57b93",
                      "key": "contactUnderTentId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "271a4551-0d06-4b51-a32e-ec6bc25dbaf3"
                  }
                }
              ],
              "id": "fa54741e-1f6b-4bae-8594-5f676a95c487",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom ContactUnderTent\",\r\n    \"userId\": 7603,\r\n    \"companyId\": \"63D8B0F9-C293-4ED1-294E-08D93C6D0CB3\",\r\n    \"addedDate\": \"2023-01-01T00:00:00+00:00\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/contacts-under-tent/:contactUnderTentId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "contacts-under-tent",
                    ":contactUnderTentId"
                  ],
                  "variable": [
                    {
                      "id": "5fcdf2ea-363b-4e31-9ec9-83eb6b0afa76",
                      "key": "contactUnderTentId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "put",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "d0e8a947-e2e5-41d2-9b59-9f528d171f01"
                  }
                }
              ],
              "id": "a3fea99f-42f1-43d4-91e1-1684cf4df32d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom ContactUnderTent\",\r\n    \"userId\": 7603,\r\n    \"companyId\": \"63D8B0F9-C293-4ED1-294E-08D93C6D0CB3\",\r\n    \"addedDate\": \"2023-01-01T00:00:00+00:00\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/contacts-under-tent/:contactUnderTentId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "contacts-under-tent",
                    ":contactUnderTentId"
                  ],
                  "variable": [
                    {
                      "id": "77086581-5c10-4360-8122-443a88cba95b",
                      "key": "contactUnderTentId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "af5ee795-4843-408e-a7e7-0a5d95265230"
        },
        {
          "name": "Comments",
          "item": [
            {
              "name": "getAll",
              "id": "b95d6177-6e83-42f8-81ee-3e00e9e5ae9b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/comments"
              },
              "response": []
            },
            {
              "name": "getById",
              "id": "e895f1a1-0302-497a-b0ff-80615a4a9770",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/comments/:id",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "comments",
                    ":id"
                  ],
                  "variable": [
                    {
                      "id": "bfd2b3de-94f0-4a30-9f73-3bcafc23ed24",
                      "key": "id",
                      "value": "706711FB-3814-43F1-10EB-08D95D93B0C3"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "delete",
              "id": "907746fb-31b7-4558-b0aa-ceae7bfe8e84",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/comments/:id",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "comments",
                    ":id"
                  ],
                  "variable": [
                    {
                      "id": "8ccb9198-f18b-489a-8f6a-d3019e50752a",
                      "key": "id",
                      "value": "37D61502-BFFC-4DD2-F353-08D95D956015"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "id": "ba30b0f0-04fb-49a2-a397-50c7ee188330",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"Public\",\r\n  \"entityId\": \"F934E964-47AD-477F-9365-82D2B7E9112F\",\r\n  \"text\" : \"Comment Text\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/comments"
              },
              "response": []
            },
            {
              "name": "patch",
              "id": "22b59577-a3a5-4c86-b1f9-f1b8ccccbcff",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"visibility\": \"Private\",\r\n  \"text\" : \"PATCH Comment Text\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/comments/{{commentId}}"
              },
              "response": []
            }
          ],
          "id": "8a89bb24-164c-4ae0-a66e-720137be526e"
        },
        {
          "name": "Documents",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "71da2ea9-c1bd-4bf4-ac30-e7137515b32a",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.value[0].documentTypeId);",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1be0d157-0a1b-4217-9a71-35d539bfca85",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/documents"
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b8218d6-006e-45f5-9b69-88babcae0d80",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"documentId\", jsonData.id);",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "5e2c8f98-9700-4f96-b101-61baa6d1f692",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": "sample.pdf"
                    },
                    {
                      "key": "entityId",
                      "value": "{{entityId}}",
                      "type": "text"
                    },
                    {
                      "key": "documentTypeId",
                      "value": "{{documentTypeId}}",
                      "type": "text"
                    },
                    {
                      "key": "entityType",
                      "value": "{{entityType}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{ApiBaseUrl}}/v1/documents/"
              },
              "response": []
            },
            {
              "name": "patch",
              "id": "a9cc99a5-0323-418c-957e-ceb6276aee34",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"documentTypeId\": \"bdfaec4d-d493-4ae1-89a5-e8caaac793a8\"\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/documents/{{documentId}}"
              },
              "response": []
            },
            {
              "name": "download",
              "id": "9ff421b3-8e10-4c08-b1b7-19630876d892",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/documents/{{documentId}}/download"
              },
              "response": []
            },
            {
              "name": "delete",
              "id": "ba970ad4-62de-4379-9710-c9ce1de327e7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/documents/{{documentId}}"
              },
              "response": []
            }
          ],
          "id": "db50e977-34c1-417a-8adf-d681261a6213"
        },
        {
          "name": "Security Master",
          "item": [
            {
              "name": "look up",
              "id": "6e29d68b-2df2-4543-b176-34ff09762fa8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/security-master/lookup?lookUpType=SecMasterSecurityId&lookUpValue=031df699-5502-eb11-8140-000c29887906",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "security-master",
                    "lookup"
                  ],
                  "query": [
                    {
                      "key": "lookUpType",
                      "value": "SecMasterSecurityId"
                    },
                    {
                      "key": "lookUpValue",
                      "value": "031df699-5502-eb11-8140-000c29887906"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "search",
              "id": "ef916d3a-50b3-43f5-923c-296736587a0e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/security-master/search?term=googl&top=25&isFullSearch=true&supplementalFields=cusip,isin,tickerSymbol,country,sector,exchangeMic",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "security-master",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "term",
                      "value": "googl"
                    },
                    {
                      "key": "top",
                      "value": "25"
                    },
                    {
                      "key": "isFullSearch",
                      "value": "true"
                    },
                    {
                      "key": "supplementalFields",
                      "value": "cusip,isin,tickerSymbol,country,sector,exchangeMic"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "dafeb964-39e8-423a-ab88-0ae2891fcac2"
        },
        {
          "name": "Webhook Integration",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "dbde8c39-e1c5-4aa7-8b9a-d4b8bb8c6e30"
                  }
                }
              ],
              "id": "1dc93d8f-9ac2-4426-943b-da0b04242243",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/webhook-integration?$expand=webhooks,IntegrationRestrictionLists",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "webhook-integration"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "webhooks,IntegrationRestrictionLists"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "98f39b03-1ef1-4252-ab1a-5f692438b277"
                  }
                }
              ],
              "id": "b8de9a0d-274d-4743-96eb-aa3d40d193ce",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"name\": \"Test WebHook 12\",\r\n    \"webhookUrl\": \"http://test.com\",\r\n    \"status\": \"Active\",\r\n    \"webhooks\": [\r\n        {\r\n           \"webhookDefinitionId\":\"1DE65E60-B740-EC11-907E-683E266BB4DE\"\r\n        }\r\n    ],\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"Test integrationRestrictionLists 11\",\r\n            \"notes\": \"\"\r\n        }\r\n    ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/webhook-integration"
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "4aec1e72-9ea3-4e6e-8f8d-c0b7597b8b05"
                  }
                }
              ],
              "id": "9fa3d118-3222-4483-8ef9-cbc2708130ce",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/webhook-integration/:webhookId?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "webhook-integration",
                    ":webhookId"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                    }
                  ],
                  "variable": [
                    {
                      "id": "e3d98377-c0a3-480d-9a36-24be4ecbcfcd",
                      "key": "webhookId",
                      "value": "1186a3c9-6399-4b86-1b7a-08d9a4330f90"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "ef2e2d6e-aa68-4877-8c87-63ebbd18ae89"
                  }
                }
              ],
              "id": "afd0e373-f13e-4f10-a102-e7b1c90c58f9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"id\": \"de51243f-53c2-4f98-a0f2-08d9a380432d\",\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"name\": \"Test WebHook 3 - Update\",\r\n    \"webhookUrl\": \"https://test.com\",\r\n    \"status\": \"Active\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"id\": \"0a3d2247-7ee5-41bd-f6d9-08d9a38084d6\",\r\n            \"name\": \"Test integrationRestrictionLists 5\",\r\n            \"notes\": \"Test integrationRestrictionLists 5 Notes\",\r\n            \"webhookIntegrationId\": \"de51243f-53c2-4f98-a0f2-08d9a380432d\"\r\n        }\r\n    ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/webhook-integration/:webhookId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "webhook-integration",
                    ":webhookId"
                  ],
                  "variable": [
                    {
                      "id": "ed69341d-b2f6-4e2e-8d07-740928f27126",
                      "key": "webhookId",
                      "value": "2616ec81-e477-4232-e266-08d9a064a358"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "put",
              "id": "399dfb9b-ac03-4237-bb02-43a4bac3b2a4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"responseTimeOutMinutes\": 60,\r\n            \"id\": \"de51243f-53c2-4f98-a0f2-08d9a380432d\",\r\n            \"name\": \"Test WebHook 3\",\r\n            \"clientId\": 3396,\r\n            \"webhookUrl\": \"https://test.com\",\r\n            \"isActive\": true,\r\n            \"status\": \"Active\",\r\n            \"subscriptionType\": 1,\r\n            \"lastModifiedByUserId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"lastModifiedTimestamp\": \"2021-11-09T14:51:30.4051725Z\",\r\n            \"createdByUserId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"createdTimestamp\": \"2021-11-09T12:57:42.9468997Z\",\r\n            \"webhooks\": [\r\n                {\r\n                    \"webhookDefinitionId\": \"74198fdb-b640-ec11-907e-683e266bb4de\",\r\n                    \"webhookSubscriptionId\": \"de51243f-53c2-4f98-a0f2-08d9a380432d\",\r\n                    \"lastModifiedByUserId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n                    \"lastModifiedTimestamp\": \"2021-11-09T12:57:42.9468997Z\",\r\n                    \"createdByUserId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n                    \"createdTimestamp\": \"2021-11-09T12:57:42.9468997Z\"\r\n                }\r\n            ],\r\n            \"integrationRestrictionLists\": [\r\n                {\r\n                    \"id\": \"adf51d08-0969-41aa-05c9-08d9a390636d\",\r\n                    \"clientId\": 3396,\r\n                    \"name\": \"Test integrationRestrictionLists 6 - Update \",\r\n                    \"notes\": \"Test integrationRestrictionLists 6 Notes Update\",\r\n                    \"webhookIntegrationId\": \"de51243f-53c2-4f98-a0f2-08d9a380432d\",\r\n                    \"lastModifiedByUserId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n                    \"lastModifiedTimestamp\": \"2021-11-09T14:51:30.4051725Z\",\r\n                    \"createdByUserId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n                    \"createdTimestamp\": \"2021-11-09T14:51:30.4051725Z\"\r\n                },\r\n                 {\r\n                    \"name\": \"Test integrationRestrictionLists 8 \",\r\n                    \"notes\": \"Test integrationRestrictionLists 8\",\r\n                    \"webhookIntegrationId\": \"de51243f-53c2-4f98-a0f2-08d9a380432d\"\r\n                }\r\n            ]\r\n }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/webhook-integration/:webhookId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "webhook-integration",
                    ":webhookId"
                  ],
                  "variable": [
                    {
                      "id": "49e81373-3983-49fe-a468-e463a09e0800",
                      "key": "webhookId",
                      "value": "de51243f-53c2-4f98-a0f2-08d9a380432d"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "0ded26d2-2bab-4457-9d93-520f3d07d328"
                  }
                }
              ],
              "id": "efe1dbeb-a73a-4e27-8f81-748ca6f312a8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/webhook-integration/:webhookId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "webhook-integration",
                    ":webhookId"
                  ],
                  "variable": [
                    {
                      "id": "e9a4fd4e-ee6e-4bf7-8092-d7350c7ca3fa",
                      "key": "webhookId",
                      "value": "1186a3c9-6399-4b86-1b7a-08d9a4330f90"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "12ad5864-fa74-4d6a-b6d2-5f2ff6070420"
        },
        {
          "name": "Integration Restriction List",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "32ca811c-8425-4d00-969b-d76fbd30f4dc"
                  }
                }
              ],
              "id": "3c68ce0e-7b64-4e30-904c-2dadc966b11c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/integration-restriction-list?$expand=employeeLevelRestrictions",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "integration-restriction-list"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "employeeLevelRestrictions"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "f65ca475-611b-4cf3-80fc-a17ca568f946"
                  }
                }
              ],
              "id": "02e936b9-2bdb-44fa-ba06-5b2ec40bdd2f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"Test Restriction List 5\",\r\n    \"notes\": \"Test Restriction List Notes 5\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/integration-restriction-list"
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "b4660046-5028-406e-9a84-261539a601dc"
                  }
                }
              ],
              "id": "b9fbbd48-7498-4823-a66e-aead597e8284",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/integration-restriction-list/:restrictionId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "integration-restriction-list",
                    ":restrictionId"
                  ],
                  "variable": [
                    {
                      "id": "81fca2ca-b1a8-41c8-bd7d-df728940e3ac",
                      "key": "restrictionId",
                      "value": "051539d8-ab42-4c21-2f28-08d9a064a360"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "032e702e-5790-4ec4-9ce2-48b1cbcf7cdd"
                  }
                }
              ],
              "id": "284f90e2-c5e1-461a-a88e-b0fc2f13cff9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"Test Restriction List 5 - Updated\",\r\n    \"notes\": \"Test Restriction List Notes 5 - Updated\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/integration-restriction-list/:restrictionListId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "integration-restriction-list",
                    ":restrictionListId"
                  ],
                  "variable": [
                    {
                      "id": "e5176c5a-2831-46e2-9809-dd9d3ea5d3a9",
                      "key": "restrictionListId",
                      "value": "b667a5eb-c59d-41d6-c1b9-08d99ecca688"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "e3df6a0f-e76e-4478-a20c-1e08cb71508c"
                  }
                }
              ],
              "id": "99fa1556-1b2a-4b29-9a02-61ef4fb1430d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/integration-restriction-list/:restrictionListId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "integration-restriction-list",
                    ":restrictionListId"
                  ],
                  "variable": [
                    {
                      "id": "1bee0113-c020-4956-b1be-e4f688c69bc1",
                      "key": "restrictionListId",
                      "value": "6f3c8b53-a6ef-4d42-24c5-08d99dd7a86b"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "662927ab-be10-4df8-85f1-449f50c0f2cf"
        },
        {
          "name": "Restriction List",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "4918e9c8-916b-47e9-ae36-fa18c77a1823"
                  }
                }
              ],
              "id": "61ecf910-6069-441c-b52f-0b84d6f181f4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/restriction-list?$expand=employeeLevelRestrictions",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "restriction-list"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "employeeLevelRestrictions"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "6c0b7593-cb0b-4d08-9a8c-8398dca8528b"
                  }
                }
              ],
              "id": "54682379-9585-44f6-abc0-337e948b4963",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"Test Restriction List 5\",\r\n    \"notes\": \"Test Restriction List Notes 5\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/restriction-list"
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "55188ad3-a0ac-4332-aece-e151679efc2c"
                  }
                }
              ],
              "id": "7eaefec6-d624-48f5-b0b8-6453ea15b71a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/restriction-list/:restrictionId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "restriction-list",
                    ":restrictionId"
                  ],
                  "variable": [
                    {
                      "id": "112e7201-a747-46fd-9cea-cf6fe859fc19",
                      "key": "restrictionId",
                      "value": null
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "04f6ed4e-0281-44e3-b4d8-73937b2e7ef8"
                  }
                }
              ],
              "id": "c9ceedc2-80cc-4096-a5bb-d61382afb40b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"Test Restriction List 5 - Updated\",\r\n    \"notes\": \"Test Restriction List Notes 5 - Updated\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/restriction-list/:restrictionListId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "restriction-list",
                    ":restrictionListId"
                  ],
                  "variable": [
                    {
                      "id": "c2421353-e4ac-4ef2-9b00-50cc41173abb",
                      "key": "restrictionListId",
                      "value": "4d995e98-3be9-4c07-24c8-08d99dd7a86b"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "1dc4e024-d184-4d04-b8da-a29e58ecfabf"
                  }
                }
              ],
              "id": "1f532ae9-f800-4ce6-a466-c109ee7f1640",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/restriction-list/:restrictionListId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "restriction-list",
                    ":restrictionListId"
                  ],
                  "variable": [
                    {
                      "id": "8e66b042-f04c-45f5-977e-0e92b67e74c5",
                      "key": "restrictionListId",
                      "value": "6f3c8b53-a6ef-4d42-24c5-08d99dd7a86b"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "6b835969-6e49-4e48-a10b-ba89ba7078f2"
        }
      ],
      "id": "577e59e2-1279-44ea-82ec-faae6b95961a"
    },
    {
      "name": "Common functions",
      "item": [
        {
          "name": "create deal",
          "item": [
            {
              "name": "create a deal with all steps",
              "item": [
                {
                  "name": "expand all",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309bd4bd-8512-447f-a996-7a0e478240a3",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var responseJson = JSON.parse(responseBody);\r",
                          "var a=[];\r",
                          "var list = (responseJson.value).length;\r",
                          "for (var i = 0; i < list; i++) \r",
                          "                  {\r",
                          "                   var counter = responseJson.value[i];\r",
                          "                    if (counter.isin !== null){\r",
                          "                        a.push(counter)\r",
                          "                    }\r",
                          "                    \r",
                          "                   }\r",
                          "\r",
                          " for(var i =0;  i < a.length; i++){\r",
                          "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                          "if (companyWithIsin && companyWithIsin.name) {\r",
                          "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                          "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                          "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                          "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                          "return;\r",
                          "}\r",
                          "     console.log(companyWithIsin)\r",
                          "         \r",
                          "         \r",
                          "        \r",
                          "         console.log(a[i])\r",
                          "    }\r",
                          "  \r",
                          "\r",
                          "\r",
                          "function getRandomInt(max) {\r",
                          "  return Math.floor(Math.random() * max);\r",
                          "}\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "var valueSize = Object.keys(jsonData.value).length\r",
                          "var valueId = getRandomInt(valueSize-1);\r",
                          "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                          "var companyId = getRandomInt(companySize);\r",
                          "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                          "var statusId = getRandomInt(statusSize-1);\r",
                          "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                          "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                          "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                          "var restrictionId = getRandomInt(restrictionSize);\r",
                          "var bool = [true, false];\r",
                          "var isUrgent = bool[getRandomInt(2)];\r",
                          "var isDraft = bool[getRandomInt(2)];\r",
                          "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                          "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                          "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                          "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                          "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                          "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                          "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                          "\r",
                          "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                          "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                          "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                          "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                          "postman.setEnvironmentVariable(\"typeId\",\r",
                          "     jsonData.value[valueId].companies[companyId]\r",
                          "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                          "     : null);\r",
                          "\r",
                          "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                          "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                          "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                          "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                          "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                          "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                          "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                          "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                          "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                          "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                          "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                          "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                          "\r",
                          "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                          "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                          "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                          "//      : null);\r",
                          "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                          "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                          "//      : null)\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "e8352086-8662-4bad-b21f-b588c9ccaa84",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "restrictions,dealMembers,companies"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create a new deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2a55e51a-5d7f-4f6b-91df-655713308206",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.test(\"The deal status is active\", function(){\r",
                          "pm.expect(jsonData.isDraft).to.eq(true);\r",
                          "});\r",
                          "\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "8c9e1c80-145a-4bc6-9775-152c226d183c",
                        "exec": [
                          "",
                          "",
                          "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                          "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                          "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                          "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                          "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                          "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                          "",
                          "",
                          "",
                          "const uuid = Math.random().toString(36).substring(2, 15) +",
                          "        Math.random().toString(36).substring(2, 15);",
                          "const randomEmail =  uuid + \"@emaill.com\";",
                          "pm.environment.set(\"randomEmail\", randomEmail)",
                          "",
                          "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                          "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                          "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                          "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                          "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                          "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                          "",
                          "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                          "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                          "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                          "",
                          "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                          "//         pm.expect(err).to.not.be.ok;",
                          "//         pm.expect(res).to.have.property('code', 200);",
                          "//         pm.expect(res).to.have.property('status', 'OK');",
                          "//     });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "086faab7-a7fb-491c-8d8b-75487fc76940",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n             \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                }
              ],
              "id": "8e65d3ac-83a9-473d-b477-fdf19225b680"
            }
          ],
          "id": "fbf208c5-3848-4ee3-8d02-898e30c1b9a1"
        }
      ],
      "id": "c96dc0ad-5951-4426-9a0b-10169dd5c0d5"
    },
    {
      "name": "Use cases",
      "item": [
        {
          "name": "Deals",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "extend by companies, deal members and restrictions",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "79e77df2-b6a4-4fdd-bd24-dce2d1128e99",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[0].restrictions[restrictionId].employeeRestriction);\r",
                              "//postman.setEnvironmentVariable(\"businessUserIdQA\", \"e39b693c-6808-432b-806d-45c09d2cbbc0\");"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e99453d4-7959-4843-8134-76825f7eb87a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "2181d1cd-1566-45e8-a8db-489daf17bf33"
                },
                {
                  "name": "deals-by-employee",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d80b8c90-23eb-4912-ae00-6179764a9a73",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c3868d17-856c-45ff-9334-458f4a90983a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/deals-by-employee/?$filter=(id%20eq%20{{dealId}})",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "deals-by-employee",
                            ""
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "(id%20eq%20{{dealId}})"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "64920857-854e-4bf4-b03e-a828716eaf84",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4fa2baf7-3d63-48ae-9494-e7edd7eebef0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deals/deals-by-employee"
                      },
                      "response": []
                    }
                  ],
                  "id": "1bf01c12-04ca-4c25-b5c1-57d7571092ca"
                },
                {
                  "name": "deals-by-company",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "888ec8b0-0d78-4027-b630-f76958a14d6b",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "19ea0efe-3012-4dd9-a6ab-bcb56c6f8887",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/deals-by-company/?$filter=(id%20eq%204A0FE6A5-C977-4213-7031-08D950031B25)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "deals-by-company",
                            ""
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "(id%20eq%204A0FE6A5-C977-4213-7031-08D950031B25)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "afc6bf61-531d-41fb-ac57-f40a692edf48",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e0131010-aac9-4985-92fe-2081fcb6882b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deals/deals-by-company"
                      },
                      "response": []
                    }
                  ],
                  "id": "13d723fe-c84b-4829-a3bd-580c1cb6bcaa"
                },
                {
                  "name": "get MNPIs",
                  "item": [
                    {
                      "name": "getAll",
                      "id": "6a657b07-e254-4054-8f27-10cd26f35d4f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$filter=recordType eq 'MNPI'",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "recordType eq 'MNPI'"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "97ca8b54-611b-4fb6-9950-fd706d385e4c"
                },
                {
                  "name": "get deals",
                  "item": [
                    {
                      "name": "getAll",
                      "id": "0818e8fb-8cbf-4ca2-91c5-7afdd862a4e6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$filter=recordType eq 'Deal'",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "recordType eq 'Deal'"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "3e5fee25-0618-4dab-bdf7-2a549d616ebe"
                },
                {
                  "name": "audit",
                  "item": [
                    {
                      "name": "getAll",
                      "item": [],
                      "id": "2419baee-68e8-4b0d-89e9-80d9f76e1605"
                    },
                    {
                      "name": "List all deals",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c9e7dc99-dfcb-495c-b8ed-ece2749eb1cb",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "37467d30-af97-411d-8db8-b436eddb8035",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deals{{dealId}}/audit"
                      },
                      "response": []
                    }
                  ],
                  "id": "494d2ad3-6ae7-4af5-9f07-155895850460"
                }
              ],
              "id": "be61563e-f9e0-4752-b178-2ff8e49dd542"
            },
            {
              "name": "getById",
              "item": [
                {
                  "name": "list existing deal",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "489b5b2b-8301-4b47-adf8-0ec5ba146b1d",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "//Test 2\r",
                              "pm.test(\"Response property matches environment variable\", function () {\r",
                              "  pm.expect(pm.response.json().value[0].companies[0].dataDestructionStatus).to.eql(pm.environment.get(\"dataDestructionStatus\"));\r",
                              "\r",
                              "});\r",
                              " \r",
                              "//Test 3\r",
                              "pm.test(\"Response property matches environment variable\", function () {\r",
                              "  pm.expect(pm.response.json().value[0].companies[0].ndaStatus).to.eql(pm.environment.get(\"ndaStatus\"));\r",
                              "});\r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[0].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"screeningListIdQA\", \"c82b663c-1bc6-4e54-6129-08d9ed688ab0\");\r",
                              "postman.setEnvironmentVariable(\"screeningListIdQA2\", \"34d75cf9-79f4-4b1c-44b9-08d9ed31d53e\");\r",
                              "\r",
                              "//postman.setEnvironmentVariable(\"businessUserIdQA\", \"e39b693c-6808-432b-806d-45c09d2cbbc0\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c9260404-fae0-442e-9efc-6981decfb97e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies($expand=screeningLists)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies($expand=screeningLists)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0c3d0a32-172a-4e29-9d75-9e228dc107d2",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Active');\r",
                              "});\r",
                              "\r",
                              "pm.test(\"The compliance status is Needs Review\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.complianceStatus).to.eq('NeedsReview');\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "fff9e19c-5560-4741-b4ab-84d986bacab2",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "168456d9-3425-47d6-b6a0-752a86528c79",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"recordType\": \"Deal\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"Reviewed\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"acceptanceStatus\": \"Yes\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "list the newly created deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "89b79a0c-823a-498c-a142-c8c57825febd",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "//Test 2\r",
                              "pm.test(\"Response property matches environment variable\", function () {\r",
                              "  pm.expect(pm.response.json().id).to.eql(pm.environment.get(\"dealId\"));\r",
                              "\r",
                              "});\r",
                              " \r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "042ade29-cb2f-4341-b5f6-2a87161bbcb9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals({{dealId}})?$expand=restrictions,dealMembers,companies($expand=screeningLists)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals({{dealId}})"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies($expand=screeningLists)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "40a4782e-4623-4541-932a-60b9e1ae2dbd"
                },
                {
                  "name": "deals-by-company",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "58e466a6-793c-4143-9623-9734a63c50a1",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0f3d296d-8ac5-462a-aea6-35227c48a8a6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/deals-by-company/?$filter=(id%20eq%20{{dealId}})",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "deals-by-company",
                            ""
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "(id%20eq%20{{dealId}})"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "f538d1ff-c6b4-4254-9ed1-3770bc82fba8"
                },
                {
                  "name": "deals-by-employee",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7848d0eb-425b-4ccb-b193-40d8a3107c36",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "392a33a5-d6c8-4c9c-968c-f2dc0dc92890",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/deals-by-employee/?$filter=(id%20eq%20{{dealId}})",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "deals-by-employee",
                            ""
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "(id%20eq%20{{dealId}})"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "4f9b2d5e-58d7-4648-bbad-2bf85ea2ceee"
                },
                {
                  "name": "list non existing deal",
                  "item": [
                    {
                      "name": "list the newly created deal Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "03ff73de-4f96-46b0-a6c7-507c72fbb204",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 404\", function () {\r",
                              "    pm.response.to.have.status(404);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "20fae8a5-431e-49f7-8a8b-5d0c521fecb4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deals/(123456789)"
                      },
                      "response": []
                    }
                  ],
                  "id": "b7697e68-957f-4d71-b0e0-e298e76e27c4"
                },
                {
                  "name": "audit",
                  "item": [
                    {
                      "name": "get history to an existing deal",
                      "item": [
                        {
                          "name": "expand all",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "id": "b9847965-5e95-4e12-86e4-147fd1f90d63",
                                "exec": [
                                  "// Test 1\r",
                                  "pm.test(\"Status code is 200\", function () {\r",
                                  "    pm.response.to.have.status(200);\r",
                                  "});\r",
                                  "\r",
                                  "var jsonData = JSON.parse(responseBody);\r",
                                  "postman.setEnvironmentVariable(\"dealId\", jsonData.value[0].id);\r",
                                  "postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[0].restrictions[0].employeeRestriction);\r",
                                  "var jsonData = JSON.parse(responseBody);\r",
                                  "postman.setEnvironmentVariable(\"typeId\", jsonData.value[0].companies[0].typeId);\r",
                                  "\r",
                                  "var jsonData = JSON.parse(responseBody);\r",
                                  "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[0].categoryId);\r",
                                  "\r",
                                  "var jsonData = JSON.parse(responseBody);\r",
                                  "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[0].dealMembers[0].memberId);\r",
                                  "\r",
                                  "var jsonData = JSON.parse(responseBody);\r",
                                  "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", jsonData.value[0].dealMembers[0].memberType);\r",
                                  "\r",
                                  "var jsonData = JSON.parse(responseBody);\r",
                                  "postman.setEnvironmentVariable(\"memberId\", jsonData.value[0].dealMembers[1].memberId);\r",
                                  "\r",
                                  "var jsonData = JSON.parse(responseBody);\r",
                                  "postman.setEnvironmentVariable(\"memberType\", jsonData.value[0].dealMembers[1].memberType);"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "id": "782e58f2-5ead-47a3-bd96-3ae0f2df6aa3",
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          },
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                              "host": [
                                "{{ApiBaseUrl}}"
                              ],
                              "path": [
                                "v1",
                                "deals"
                              ],
                              "query": [
                                {
                                  "key": "$expand",
                                  "value": "restrictions,dealMembers,companies"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Create a new deal",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "id": "3f059934-f649-4fa7-8705-f8656f596fb5",
                                "exec": [
                                  "// Test 1\r",
                                  "pm.test(\"Status code is 201\", function () {\r",
                                  "    pm.response.to.have.status(201);\r",
                                  "});\r",
                                  "\r",
                                  "\r",
                                  "var jsonData = JSON.parse(responseBody);\r",
                                  "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                                  "\r",
                                  "    var jsonData =pm.response.json();\r",
                                  "pm.test(\"The deal status is active\", function(){\r",
                                  "pm.expect(jsonData.isDraft).to.eq(true);\r",
                                  "});\r",
                                  "\r",
                                  "\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            },
                            {
                              "listen": "prerequest",
                              "script": {
                                "id": "cd4451f2-ec6d-4ab9-a226-71fcabf36f3b",
                                "exec": [
                                  "",
                                  "",
                                  "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                                  "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                                  "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                                  "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                                  "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                                  "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                                  "",
                                  "",
                                  "",
                                  "const uuid = Math.random().toString(36).substring(2, 15) +",
                                  "        Math.random().toString(36).substring(2, 15);",
                                  "const randomEmail =  uuid + \"@emaill.com\";",
                                  "pm.environment.set(\"randomEmail\", randomEmail)",
                                  "",
                                  "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                                  "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                                  "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                                  "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                                  "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                                  "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                                  "",
                                  "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                                  "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                                  "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                                  "",
                                  "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                                  "//         pm.expect(err).to.not.be.ok;",
                                  "//         pm.expect(res).to.have.property('code', 200);",
                                  "//         pm.expect(res).to.have.property('status', 'OK');",
                                  "//     });"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "id": "c97433f9-f6c1-4c59-9a33-76f986d224eb",
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          },
                          "request": {
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"recordType\": \"Deal\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"Reviewed\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"acceptanceStatus\": \"Yes\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": "{{ApiBaseUrl}}/v1/deals"
                          },
                          "response": []
                        },
                        {
                          "name": "audit",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "id": "bd4329a3-2715-4578-ad6c-6d2223ea86e4",
                                "exec": [
                                  "// Test 1\r",
                                  "pm.test(\"Status code is 200\", function () {\r",
                                  "    pm.response.to.have.status(200);\r",
                                  "});\r",
                                  "\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "id": "64ac6ca0-f498-4d66-9dde-c500b65961f7",
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          },
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}/audit"
                          },
                          "response": []
                        }
                      ],
                      "id": "a4ca0b75-7123-4e16-b881-83086bc22971"
                    },
                    {
                      "name": "get history to a non existing deal",
                      "item": [
                        {
                          "name": "audit",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "id": "0381285a-9106-4bfc-90ba-edab02da769c",
                                "exec": [
                                  "// Test 1\r",
                                  "pm.test(\"Status code is 404\", function () {\r",
                                  "    pm.response.to.have.status(404);\r",
                                  "});\r",
                                  "\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "id": "93837330-2ecd-481d-8b87-0bf23c6e981e",
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          },
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": "{{ApiBaseUrl}}/v1/deals/(123456)/audit"
                          },
                          "response": []
                        }
                      ],
                      "id": "4d1fa3c2-64a1-4ee0-af07-5ab1a11812e3"
                    }
                  ],
                  "id": "b1122549-7832-4337-b628-a1bfddf63893"
                }
              ],
              "id": "880f585c-7c18-4964-8dc0-65a85780c41d"
            },
            {
              "name": "create",
              "item": [
                {
                  "name": "create a draft deal with all steps",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3dd7ad0d-b89a-463d-9474-d25ab69ed533",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"screeningListIdQA\", \"c82b663c-1bc6-4e54-6129-08d9ed688ab0\");\r",
                              "postman.setEnvironmentVariable(\"screeningListIdQA2\", \"34d75cf9-79f4-4b1c-44b9-08d9ed31d53e\");\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8fc180b6-3318-4f53-8aa2-3a8b1798e141",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "62ec6798-faec-4bc5-89fc-8756ed97fc6f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "07739045-7cc1-450b-ad01-eac659756187",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "cc9e76cd-f1c6-4aeb-aa6b-a1fcd576ebe2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": true,\r\n     \"companies\": [{\r\n             \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"screeningLists\": [\r\n        {\r\n          \"screeningListId\": \"{{screeningListIdQA}}\"\r\n        },\r\n        {\r\n          \"screeningListId\": \"{{screeningListIdQA2}}\"\r\n        }]\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "f579c0fd-3697-47c2-b6b8-7bd05d6529c4"
                },
                {
                  "name": "create a draft deal without companies",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7e36faac-4beb-449b-a083-630548571ca9",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "cebe1355-a168-4f3f-bc91-06414054f142",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "629e7fe2-840f-4662-98cd-26beae1085c5",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "e60989ba-46f7-42e4-8083-d9d475813255",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d9f2cadd-278b-4ed5-938f-6331a871fc44",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": true,\r\n     \"companies\": [],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        \r\n           \r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "38db013f-a728-4e79-926f-3c7373ae1df6"
                },
                {
                  "name": "create a draft deal without deal members",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b36b93ea-1c6c-4586-acfd-0dc5ebe98751",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "29fa39a7-9d38-40dd-972f-29ee30badb2c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5cb1f56f-6279-464a-b676-8d9c27a00f40",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "bbfed6ee-ffb9-43b7-9aa0-21ccbd9b05f1",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "b7fa2614-df86-4c12-bc3e-28b95c694ccd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": true,\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }\r\n        ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                \r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "f1b52d79-dc1a-4ad3-841b-d629d03fe46f"
                },
                {
                  "name": "create a draft deal without all required fields on step 1",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f9a9d068-c4cc-41e3-b719-7c97fdab2380",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8eaae4c8-4be5-48ed-9871-90988b1e44be",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ce8a6c48-a6d3-494f-8ffb-fa945c5e1628",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "2bd2798b-469d-4f3c-b497-49afca525d80",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "809b61ea-b43e-449b-aaf3-8b7e8cbc8882",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": true,\r\n     \"companies\": [],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        \r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "822427da-a33c-40b1-9ca6-71a1581bdfb3"
                },
                {
                  "name": "create a deal with empty visibilty field",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a4705936-938c-47c7-bb25-32876e12d328",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5b0e7066-50ca-496f-b1fd-fd6641d18afd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e204d8b5-4cb2-4659-ad40-67f0860ed0e2",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "8048300a-143e-4a0c-a92d-ad1150a0ee35",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0d6f1932-0b51-42f5-9719-214e9475bb06",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        \r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "85ce3ab9-ae92-4f07-8b08-df7d0d43cc42"
                },
                {
                  "name": "create a deal without a name",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "461d963c-e0d0-44a9-b0a1-dba386f375a8",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5f56bf9b-4cab-478f-9319-7ddd2cb3b495",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "35d3641f-1606-46ae-8fb9-c410b7802e3f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "3cd6b3b9-bdef-4b13-bdd6-9c495d57e07b",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "35ceec41-e0c5-4ce1-8f4f-a2f09e3a3889",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        },\r\n         {\r\n            \"name\": \"{{randomCompanyName2}}\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "87da8945-d0f2-4710-a30d-2fefbe3b5151"
                },
                {
                  "name": "create a deal without description",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bb13fa0f-a661-4a86-a3a4-f3056b2016f9",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "434b85c0-d01b-4ba1-a75d-b59240affbae",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0b8eef5f-3adb-4584-8f0a-647c55a848ef",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "562342f6-eb8a-4a7f-a03a-f0c20968bb8d",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ccfab03e-5997-4060-9292-87793c7ddf43",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "1f56045c-48c8-4992-b547-21347dff18d2"
                },
                {
                  "name": "create a deal without category",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "52e4cf86-69b0-4db7-8866-3d3d4d55c359",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "67cded86-c2d3-413a-bffc-a788b763e908",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bfba10d5-eb74-442a-8e2d-588a27b5fdcc",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "7ccb34a1-1a7f-44fd-890e-097d2de95006",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "12b8299e-fec3-415e-8a75-9a3eecce8685",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"\",\r\n    \"status\": \"{{dealStatus}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        \r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "a1e00df0-21b8-4329-8bf0-79029aa2f3ee"
                },
                {
                  "name": "create a deal without deal status",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fd51f10a-ed3a-4d42-abea-83eaeb456cf9",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "72deb89e-1763-4d25-b6f7-cbcaf77cbb68",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "84687760-8c46-4fa3-bbc1-1c2e1ab3c45a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "a4992618-6d69-4fbc-beb8-7af28d0e6715",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c1165efa-0d75-4089-a037-bf4eeea795ec",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "51807620-4526-451e-8c62-7e0fd23a756c"
                },
                {
                  "name": "create a deal without deal start date",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fd98f62d-c341-4f52-92a2-63f6c53c2573",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9f46b583-3532-4811-b751-ad09eb0f21e7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e3c3cadb-f17e-4c84-a1a9-6be81b06d703",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "de992645-0694-48ab-86d6-903187bd727b",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "700a6463-da3a-41c0-8c61-86c3f86ae4ff",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "8e45f350-fda1-4f90-b97d-9038856bacf3"
                },
                {
                  "name": "create a deal without internal deal lead",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "67c1b002-045c-4f4c-90d2-6d17fed5dc39",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2eedf74d-83fb-4c4c-aeb2-d792596ba554",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1228787d-a061-446f-b622-67d84ea42e76",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "a4388295-3386-411f-8b3e-6ecba115d0d3",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "aab81960-8863-46dc-baf4-e2f74887b608",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "62b503dd-c690-4498-bbe9-f5567c0e09e8"
                },
                {
                  "name": "create a deal without company",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6e7ec154-2bd0-4251-a2ea-33660889705a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d1a3a11e-c419-4850-9b1e-4258fd5e2615",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "74a16f11-7c2a-431d-827e-bde679219910",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "b858bcd9-1791-4816-87f2-2e85174a1dee",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d50679ac-9dd3-47d0-9829-c6753570b4e2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName2}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "c4c523d3-fa73-4610-9a55-1786842a3554"
                },
                {
                  "name": "create a deal with all four steps filled",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2a5d9038-7075-400c-84e1-20b32de17d67",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              "     postman.setEnvironmentVariable(\"screeningListIdQA\", \"c82b663c-1bc6-4e54-6129-08d9ed688ab0\");\r",
                              "postman.setEnvironmentVariable(\"screeningListIdQA2\", \"34d75cf9-79f4-4b1c-44b9-08d9ed31d53e\");\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9af8f086-9e9b-425e-9cdb-ba02a8c9358d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "415edc66-6490-40cd-8d58-888a8ca4840d",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "3d2cb987-d748-40a4-8081-980d04dafd47",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "be5f0ad0-8e43-4a14-8d44-cd3ded72bae9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"recordType\": \"Deal\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"Reviewed\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"acceptanceStatus\": \"Yes\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"screeningLists\": [\r\n        {\r\n          \"screeningListId\": \"{{screeningListIdQA}}\"\r\n        },\r\n        {\r\n          \"screeningListId\": \"{{screeningListIdQA2}}\"\r\n        }],\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "14e20aa5-718c-429e-aaea-82191a2054a5",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "aefaff6b-a7ac-4b13-ab3c-6451d800c37f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "4cf1c6e4-09ea-430c-af7c-a7006dc5de90"
                },
                {
                  "name": "GROUPID QA create a deal with all four steps filled",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "151200ba-7f46-40b5-b9c5-2e5f6f829eb4",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9f7bf34e-a641-4b7d-b1fe-421f25511851",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e2e97f25-bdf7-488a-8a3e-03ec6904826b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "2ee9e829-e5f6-4235-bedc-3a5feb07c81e",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a8c3332a-d113-4898-961e-068ffca5ea2b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"recordType\": \"Deal\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"Reviewed\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"acceptanceStatus\": \"Yes\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"groupId\": \"F160B780-C14A-4EFF-8864-9BB32A7B4632\",\r\n                    \"targetMemberType\": \"AssociatedComplianceTeamGroup\",\r\n                    \"userId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6770f2ed-af9b-4155-87ec-891eaefdd16d",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d4321e45-9bf1-40f5-acc0-f4b57823edbf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions($expand=user,group)),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions($expand=user,group)),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "14845a77-fb29-476c-b1be-40dabf01c27e"
                },
                {
                  "name": "Business user flow - create a deal with all 3 steps",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "eed06944-1718-4e7d-896b-a864f7875c55",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7a934d9f-ddf3-4449-be6b-b04a8d6faabb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{businessUserToken}}"
                          }
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal (QA BU id as recordvisibilty user)",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5242ac49-7ad0-47cb-886f-b754240ab144",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "5a40feb9-c9a7-432c-94ce-d6b6f91293b0",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "df23dfc4-87ad-43ef-8483-5fed5bfa9538",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"acceptanceStatus\": \"No\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": true,\r\n     \"companies\": [{\r\n            \"name\": \"{{randomCompanyName1}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ]\r\n    \r\n    \r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d7b77e9d-e730-4dbb-8bad-7d85157460a7",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "443ba8ac-1a4e-41dd-8dd0-293eca94a0cf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "6b93a422-997c-46c9-8a4c-8cc4d0c12c9d",
                  "auth": {
                    "type": "bearer",
                    "bearer": {
                      "token": "{{businessUserToken}}"
                    }
                  },
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "7ec4b657-7912-465c-a7f6-9b34c3a969e3",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5c3b161-688b-4fc7-bc74-dfe020e38147",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                {
                  "name": "Business user flow - create a deal with aRestricitons",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5ab3c323-44ce-4b7e-ae46-8f1e8067b5a0",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "38405fca-9925-4886-a888-5f59656f12fe",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2663c8c6-679b-4a75-a6ed-f25a465d6aee",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 403\", function () {\r",
                              "    pm.response.to.have.status(403);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "f4383542-84cb-4fca-b4a3-2177dd98f6bc",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e031b104-2f7d-4490-8a29-3c871d26c2c2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    }
                  ],
                  "id": "856ff2bc-16df-43d6-b407-10bb3619cdf5",
                  "auth": {
                    "type": "bearer",
                    "bearer": {
                      "token": "{{businessUserToken}}"
                    }
                  },
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "a4adb426-1f43-429b-9414-c9b8ad334b50",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "e49f7d23-a9bb-447f-a5c4-06067709177e",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                {
                  "name": "create  draft MNPI record with step 1 only",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "70100d60-af38-429e-b336-2be89ff3c02c",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\");\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "309f33c3-835c-4978-adde-c6c349338e40",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set MNPI props",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "caf62edb-7e2a-405c-a45b-c11030e0f0a6",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "//postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\"); //QA\r",
                              "//postman.setEnvironmentVariable(\"categoryIdMNPI\", \"e5994f98-9d25-ec11-8408-0e84430236e3\"); //UAT\r",
                              "//postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");// QA\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"e5994f98-9d25-ec11-8408-0e84430236e3\"); \r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"1f92195e-40c1-4ca4-baa0-66599b567983\");// UAT\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3749f190-1a68-4c6e-9a0c-0e2632f24dcd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f6b64a96-6cd2-46b7-a43d-77e4994022d3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "df6f2969-f324-4af8-bee7-fff4c3784756",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "aed9cbda-4374-4b11-8441-03f42218e9cd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryIdMNPI}}\",\r\n    \"status\": \"Inactive\",\r\n     \"recordType\": \"{{recordTypeMNPI}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"acceptanceStatus\": \"Yes\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": true,\r\n     \"companies\": [],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        \r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "db487755-94ce-40e4-8cb1-afec710f18be",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.recordType).to.contain(\"MNPI\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "889ecf53-e26a-432d-93c4-fd236e1939c8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "19a6c145-ff54-479f-b486-ac7f9bb46a9d"
                },
                {
                  "name": "create  draft MNPI record without categoryId on step 1",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "980c72b7-3b35-41aa-bc2e-58c82a64705b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\");\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "775b165d-3409-4ad1-8a2a-05ca99fde33c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set MNPI props",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "26e3df7b-d2d8-47a6-a5f1-df42ce5028c6",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "//postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\"); //QA\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"e5994f98-9d25-ec11-8408-0e84430236e3\"); //UAT\r",
                              "//postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");// QA\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"1f92195e-40c1-4ca4-baa0-66599b567983\");// UAT\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0f197d6b-1999-4875-a0c9-bdf632aba7de",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f6ff3ba0-0c43-4ebd-9bd9-f6aeb97849bd",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "80faf0ca-c69c-481f-b2f5-a63091b4e0de",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4d074cfe-87ec-42d8-9886-e97497a877ae",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"status\": \"Inactive\",\r\n     \"recordType\": \"{{recordTypeMNPI}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": true,\r\n     \"companies\": [],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        \r\n        }\r\n        \r\n    ],\r\n    \"restrictions\": [\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7f7a8415-f9c5-4fa7-b80b-35c06bcaed4c",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.recordType).to.contain(\"MNPI\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "53225a5c-7054-4de2-99d0-10b901e6fb7d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "7aa69054-2e54-4aab-847f-c296fba2cad8"
                },
                {
                  "name": "create MNPI record",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "822a8fb8-4417-491f-8d76-1c943d4e69e8",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\");\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"screeningListIdQA\", \"c82b663c-1bc6-4e54-6129-08d9ed688ab0\");\r",
                              "postman.setEnvironmentVariable(\"screeningListIdQA2\", \"34d75cf9-79f4-4b1c-44b9-08d9ed31d53e\");"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3b7f9b19-cf72-4115-8b04-24f9046fbf24",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set MNPI props",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "caf2924b-49e4-4499-a4c1-1db7391c1c9d",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "//postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\"); //QA\r",
                              "//postman.setEnvironmentVariable(\"categoryIdMNPI\", \"e5994f98-9d25-ec11-8408-0e84430236e3\"); //UAT\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");// QA\r",
                              "//postman.setEnvironmentVariable(\"typeIdMNPI\", \"1f92195e-40c1-4ca4-baa0-66599b567983\");// UAT\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"e5994f98-9d25-ec11-8408-0e84430236e3\");"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1a50421c-36a2-43d6-8f93-fc8dd5802055",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0b368c31-5e1d-4cd6-a85d-e466fcbb706f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "4517d14c-08db-46e4-a591-2f2a47ecdf45",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "467eabad-4d56-4665-a015-acd09bb381bf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\",\r\n    \"status\": \"Inactive\",\r\n     \"recordType\": \"MNPI\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeIdMNPI}}\",\r\n            \"screeningLists\": [\r\n        {\r\n          \"screeningListId\": \"{{screeningListIdQA}}\"\r\n        },\r\n        {\r\n          \"screeningListId\": \"{{screeningListIdQA2}}\"\r\n        }]\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{EmployeesInvolved}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"EmployeesInvolved\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "46ac8255-cff0-4178-8a14-33f8b4b8212d",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.recordType).to.contain(\"MNPI\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d623a510-41fe-42ea-8c2d-c820e58ce3e3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "ae8250fb-e317-4243-a998-847603ea0b15"
                },
                {
                  "name": "CU create MNPI record",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4f999984-a731-4ec2-9655-5003e0eeb436",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\");\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3e09abb1-4ca3-44c5-bda7-ed0e6bdada30",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set MNPI props",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4fc70937-1736-404c-bff8-4fbd5d3daa98",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\"); //QA\r",
                              "//postman.setEnvironmentVariable(\"categoryIdMNPI\", \"e5994f98-9d25-ec11-8408-0e84430236e3\"); //UAT\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");// QA\r",
                              "//postman.setEnvironmentVariable(\"typeIdMNPI\", \"1f92195e-40c1-4ca4-baa0-66599b567983\");// UAT\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "80cf73bb-a6ba-463f-8ee3-6d1a8e55e32d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "323802c0-a512-487d-a6ef-0bae8eb66dba",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "56b50d61-8d3b-4807-9163-3192e94fc330",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7611bc36-49a6-4235-9037-22adbbe2fc0f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\",\r\n    \"status\": \"Inactive\",\r\n     \"recordType\": \"MNPI\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"acceptanceStatus\": \"Yes\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeIdMNPI}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{EmployeesInvolved}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"EmployeesInvolved\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c8afc3f0-c334-4ff9-92f0-27df74f7d254",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.recordType).to.contain(\"MNPI\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "231e6014-4cd2-4e96-b4ea-c3f731e2bb33",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "464840ec-5a5f-446d-92c5-b70e870dfd23",
                  "auth": {
                    "type": "bearer",
                    "bearer": {
                      "token": "{{complianceUserToken}}"
                    }
                  },
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "52066e38-8e96-46d9-a7e9-b6c6492e1c80",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "20596b49-aa34-4903-8b46-b605f3edfa86",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                {
                  "name": "BU create MNPI record",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7056da15-a67a-46ec-87e1-0efebbe8c177",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\");\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "19e906df-d1d2-4193-9310-7c8a64ed2ab5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set MNPI props",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0cb5c69d-6a9d-4020-880e-d55d48bb1c93",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\"); //QA\r",
                              "//postman.setEnvironmentVariable(\"categoryIdMNPI\", \"e5994f98-9d25-ec11-8408-0e84430236e3\"); //UAT\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");// QA\r",
                              "//postman.setEnvironmentVariable(\"typeIdMNPI\", \"1f92195e-40c1-4ca4-baa0-66599b567983\");// UAT\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e192b5d0-6e9d-4eb1-93fe-53bb28ff30e3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ce760037-1861-4066-9168-2f3bfdf31266",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "82bc5486-38d3-43f8-8745-0c19e726e79d",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f47b8444-bfb2-4452-9e11-d50ac924d592",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\",\r\n    \"status\": \"Inactive\",\r\n     \"recordType\": \"MNPI\",\r\n     \"acceptanceStatus\": \"No\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeIdMNPI}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{EmployeesInvolved}}\"\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2311ec1e-8e67-4187-af91-0e8fd4fd202c",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.recordType).to.contain(\"MNPI\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0e15ad43-442b-4dc6-91ce-b9ce8d5d793a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "ad7bdca8-a267-4494-9257-1a1f1c8ceda3",
                  "auth": {
                    "type": "bearer",
                    "bearer": {
                      "token": "{{businessUserToken}}"
                    }
                  },
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "1fcef9d4-aee2-4e78-a678-412994b173a3",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "9be9ba40-8e90-4af3-8223-507d80be80ec",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ]
                }
              ],
              "id": "315d53ac-2111-4dda-9068-bed1dfbeed28"
            },
            {
              "name": "put",
              "item": [
                {
                  "name": "update all steps",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d3128436-ce61-4749-863a-ec24879a9827",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0415bc3d-c99f-43a2-aa3b-d51aa6c7b946",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "68428092-6a82-4e99-b482-cf74bd6ddcc3",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d5fb634a-a156-4b98-a421-06894ae0babe",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a0ebaa45-55e9-48d6-bd19-a6cb5f717174",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "1b2cc019-f216-4611-b26a-e9dbf8724b97",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8c527c85-09ee-4f85-b945-146404b514ed",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "09d4c4d9-e927-436d-93dd-c6f16a8e950a",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", jsonData.companies[0].screeningLists[0].id) \r",
                              "postman.setEnvironmentVariable(\"companyIdScreeningList\", jsonData.companies[0].screeningLists[0].companyId)"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d197066d-eed3-40c3-8d4c-77fb89f96bdc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent, screeningLists)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent, screeningLists)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "996a4d8f-840d-4f6b-9e20-a44c6bfc1766",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "643eb856-9743-44eb-9d7c-38e9853b3502",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6af916db-019b-4139-b446-6a718ac392d6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n     \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraftAlwaysFalse}},\r\n     \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n     \"companies\": [{\r\n          \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n             \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"id\": \"{{contactsUnderTent1Id}}\",\r\n                \"clientId\": {{clientId}},\r\n                \"companyId\": \"{{company1Id}}\",\r\n                \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                \"createdByUserId\": \"{{createdByUserId}}\",\r\n                \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\"\r\n                \r\n            }\r\n            ]\r\n            \r\n           \r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n             \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n             \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n\r\n            \"companyRestrictions\": [{\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n               \r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5a4de3c6-b6c4-4ace-a6de-049817e8dbc1",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.name).to.contain(\"Updated\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "dcae0da7-f6ea-412a-8c44-9991bb7a9d75",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "ba5df7e3-54fd-4943-820a-2bb8198e8e6b"
                },
                {
                  "name": "update step 1",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4c853731-6916-49cf-a12d-3e3c1193ef1c",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4c3048cc-1e23-47bd-beef-c4bfd88bb773",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fefded93-539d-4560-8881-b583dd5c9cbb",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "14bb6d43-2975-4375-9720-c271efa9f8b7",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "daf4badf-d079-40d6-a174-4010ef121445",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f34d3c53-12dd-4579-a4cd-2d823272ca5b",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d5bdf5b7-a8e8-4cc5-8587-39af5177c03a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cd04b98b-2dd0-46cd-94bc-c7c54157b38a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "180c3451-f2ea-4fd5-abb2-a0fbf23c90be",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8cd81b0b-ef4b-4151-9ce6-7fd7f1ba6579",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n     \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"updated description\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": true,\r\n    \"isDraft\": false,\r\n     \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n     \"companies\": [{\r\n          \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n             \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"id\": \"{{contactsUnderTent1Id}}\",\r\n                \"clientId\": {{clientId}},\r\n                \"companyId\": \"{{company1Id}}\",\r\n                \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                \"createdByUserId\": \"{{createdByUserId}}\",\r\n                \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\"\r\n                \r\n            }\r\n            ]}]\r\n    ,\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n             \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n             \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n\r\n            \"companyRestrictions\": [{\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n               \r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f5ecc4d2-c272-454d-b560-31fd1b247aca",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.name).to.contain(\"Updated\")\r",
                              "});\r",
                              "\r",
                              "pm.test(\"The deal status is paused\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.contain(\"Paused\")\r",
                              "});\r",
                              "\r",
                              "pm.test(\"The deal is urgent\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.isUrgent).to.eq(true)\r",
                              "});\r",
                              "\r",
                              "pm.test(\"The deal is not draft\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.isDraft).to.eq(false)\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3fbf1c53-156f-463d-96ae-1f316ae677dc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "cba0bebc-6ff5-4bd3-bf86-dd9aed9ba0d3"
                },
                {
                  "name": "update step 2 - Add new deal member",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "68342086-204c-45d7-8850-86633de8a92a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0c979d39-64b6-42d4-990e-4d82e5a97819",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "9c872952-11fe-47f7-b9a6-a793e4d0309b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "4e97bb57-dad6-458e-b22f-6094889d9b6f",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7fbe643b-dcae-4308-90ef-28d8c889dbb6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "73fb7929-c9dd-48ee-9481-8640b60f80b2",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2d21f781-2e7a-4b53-84f1-fd98cc07aead",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7822d0c0-8d68-421b-be93-f3b758aaac12",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "75383230-3be6-4d7c-bc00-67ba0538b80e",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "355230de-150e-41fd-939c-2eac0865a351",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n     \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": \"{{isDraftAlwaysFalse}}\",\r\n     \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n     \"companies\": [{\r\n          \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n             \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"id\": \"{{contactsUnderTent1Id}}\",\r\n                \"clientId\": {{clientId}},\r\n                \"companyId\": \"{{company1Id}}\",\r\n                \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                \"createdByUserId\": \"{{createdByUserId}}\",\r\n                \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\"\r\n                \r\n            }\r\n            ]}\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n             \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"980d61d4-7833-4161-9646-1e40063440d9\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n            \r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n             \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n\r\n            \"companyRestrictions\": [{\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n               \r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "24006fbb-4043-4dd2-ab83-62610d0a4851",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "\r",
                              "\r",
                              "pm.test(\"New deal member is added\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.dealMembers[2].memberId).to.eq(\"980d61d4-7833-4161-9646-1e40063440d9\")\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "044142b2-3812-40c8-b023-e79005790bab",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "798a6d17-d8e1-4029-b113-b18078d65ff5"
                },
                {
                  "name": "update step 3 - Add new company",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f6dbbf4a-9fb6-43cb-b498-3c2f12b46294",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "b1130b12-1c20-4bd8-abb1-0662f703191c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7cc2d6db-be62-44dc-861e-71b02ed640be",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "963ab5f0-416c-4cfb-a5be-bd8c9756653b",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8b853225-086b-4d01-92f6-2dbf6bd2d650",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n               { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b89d64f6-2bb7-4c98-8aa1-635e742789b4",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7c79b33c-8450-400b-a1d8-b8499e6b7249",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e0953a29-8202-4a16-88c9-788c6488186f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "16515d92-928e-41b6-8f9a-ba326f5d248e",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "cfd22890-9f16-40f1-bfa7-f118eb1ff1a5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n     \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": \"{{isDraftAlwaysFalse}}\",\r\n     \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n     \"companies\": [{\r\n          \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n             \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"id\": \"{{contactsUnderTent1Id}}\",\r\n                \"clientId\": {{clientId}},\r\n                \"companyId\": \"{{company1Id}}\",\r\n                \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                \"createdByUserId\": \"{{createdByUserId}}\",\r\n                \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\"\r\n                \r\n            }\r\n            ]},\r\n            {\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"ALARMFORCE INDS INC\",\r\n            \"externalId\": \"3ec49d9c-5502-eb11-8140-000c29887906\",\r\n            \"cusip\": \"01165L953\",\r\n            \"isin\": \"CA01165L1022\",\r\n            \"typeId\": \"03be7d38-c469-423c-a60a-dc7e66305fd9\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"status\": \"Active\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"ndaRequestedDate\": null,\r\n            \"ndaCompletedDate\": null,\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"dataDestructionRequestedDate\": null,\r\n            \"dataDestructionCompletedDate\": null, \r\n            \"contactsUnderTent\": []}\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n             \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        \r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n             \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n\r\n            \"companyRestrictions\": [{\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n               \r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4d4891e7-d31b-45b8-b75c-44b8d98d0ecb",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The new company is added\", function(){\r",
                              "pm.expect(jsonData.companies[1].name).to.eq(\"ALARMFORCE INDS INC\");\r",
                              "})\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "73a7ca07-3333-46b5-9e35-25f46f3c5a4f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "56d2ed19-29a1-4be6-a054-4b538a71d025"
                },
                {
                  "name": "update step 4 - Add new restriction",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b633b21f-09e8-481a-b315-d8596fd979bc",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "95b5329d-7ccd-4128-8fa2-d056cccdfa39",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b46fa9c4-538f-4529-b2b3-759371a0edac",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "b2ae35b6-c633-4b99-8ca2-15e4525c865d",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "457e6e5f-02e5-44b2-8334-a4f471c993b3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0bc3e8ad-7012-4e4c-adc8-715825c49f6e",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ddfeff98-8012-4135-bffc-13ebd1dab9d8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f56a1b65-2fd0-48b9-9e20-ce86de5706e9",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "70c4a64d-6039-43fa-96cb-7b53ed0c0619",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d631880a-7a29-4c50-a631-cf0276b86b40",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": \"{{isDraftAlwaysFalse}}\",\r\n    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n    \"companies\": [\r\n        {\r\n            \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [\r\n                {\r\n                    \"id\": \"{{contactsUnderTent1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                    \"name\": \"{{contactsUnderTentName}}\",\r\n                    \"title\": \"{{contactsUnderTentTitle}}\",\r\n                    \"email\": \"{{$randomEmail}}\",\r\n                    \"addedDate\": \"{{contactAddedDate}}\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"ALARMFORCE INDS INC\",\r\n            \"externalId\": \"3ec49d9c-5502-eb11-8140-000c29887906\",\r\n            \"cusip\": \"01165L953\",\r\n            \"isin\": \"CA01165L1022\",\r\n            \"typeId\": \"03be7d38-c469-423c-a60a-dc7e66305fd9\",\r\n            \"status\": \"Active\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \r\n            \"ndaRequestedDate\": null,\r\n            \"ndaCompletedDate\": null,\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"dataDestructionRequestedDate\": null,\r\n            \"dataDestructionCompletedDate\": null,\r\n            \"lastModifiedByUserId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n            \"lastModifiedTimestamp\": \"2021-10-13T13:40:43.1716504Z\",\r\n            \"createdByUserId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n            \"createdTimestamp\": \"2021-10-13T13:40:43.1716501Z\",\r\n            \"contactsUnderTent\": []\r\n        }\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n            \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"980d61d4-7833-4161-9646-1e40063440d9\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n            \"companyRestrictions\": [\r\n                {\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"id\": \"{{memberRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"dealMemberId\": \"{{dealMemberInternalId}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"clientId\": 3396,\r\n            \"dealId\": \"5861de60-f71f-4341-19f1-08d983ea8c4b\",\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"startDate\": \"2021-08-29T21:00:00+00:00\",\r\n            \"endDate\": null,\r\n            \"isSyncToMarketAbuse\": false,\r\n            \"employeeRestriction\": \"InternalDealLead, InternalDealAssociates\",\r\n            \"companyRestrictions\": [\r\n                {\r\n                   \r\n                    \"company\": {\r\n                    \"name\": \"ALARMFORCE INDS INC\"\r\n                    }\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "17519ca2-78e7-4135-ae45-56443dfe58c5",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The new restriction is added\", function(){\r",
                              "pm.expect(jsonData.restrictions[1].name).to.eq(\"ControlRoom Restriction\");\r",
                              "})\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a1131917-f011-4130-8d87-c68496372c5c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "280b0bfe-25cb-431f-b0a0-3fca112f7eab"
                },
                {
                  "name": "update step 4 - Add new members to existing restriction",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f2d48aaf-3dd3-47c6-b7f3-84c4e5aa4994",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a5e90b73-4f2c-409c-8ba9-f8b8e4eec54b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "83659365-ca8b-4122-a6c7-b3b1da60a37b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "955de054-7bde-45bb-8f91-7cc9b7f7adda",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9b53818a-e4e4-46ec-977d-c23d1898dafc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n               { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fc51ed25-23e2-49f6-a30a-f1ee46ba21cd",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e1add8b5-e28a-4026-929b-f763553e004e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "dc08f4a3-9b93-44eb-8071-db740c6c4e08",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "683bd202-54fb-4d12-8d31-99c104be95a0",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c3817304-400a-46c5-beff-9b5c76976d96",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": \"{{isDraftAlwaysFalse}}\",\r\n    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n    \"companies\": [\r\n        {\r\n            \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [\r\n                {\r\n                    \"id\": \"{{contactsUnderTent1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                    \"name\": \"{{contactsUnderTentName}}\",\r\n                    \"title\": \"{{contactsUnderTentTitle}}\",\r\n                    \"email\": \"{{$randomEmail}}\",\r\n                    \"addedDate\": \"{{contactAddedDate}}\"\r\n                }\r\n            ]\r\n        }\r\n        \r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n            \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        \r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n            \"companyRestrictions\": [\r\n                {\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n               { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                },\r\n                 { \r\n                    \"userId\": \"{{memberIdRecordVisibility}}\",\r\n                    \"targetMemberType\": \"{{memberTypeRecordVisibility}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "306bc903-622a-4d9e-89a7-2b86aebe8aa7",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"A deal member is restricted\", function(){\r",
                              "pm.expect(jsonData.restrictions[0].memberRestrictions[0]).to.haveOwnPropertyDescriptor('dealMemberId')\r",
                              "})\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1527f2f8-766b-4aed-b2d8-7b45f6f2bdd8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "a841a0e7-0459-4853-8573-1c7d45423451"
                },
                {
                  "name": "update non existing deal",
                  "item": [
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ebfc45b8-e2a9-4240-91e8-b3324d35b0a3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "d6bd6df1-27f2-40b5-8854-0e00d6eb7eac",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f7d8b532-3fa4-4b88-b742-750ed5f89271",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": \"{{isDraftAlwaysFalse}}\",\r\n    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n    \"companies\": [\r\n        {\r\n            \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [\r\n                {\r\n                    \"id\": \"{{contactsUnderTent1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                    \"name\": \"{{contactsUnderTentName}}\",\r\n                    \"title\": \"{{contactsUnderTentTitle}}\",\r\n                    \"email\": \"{{$randomEmail}}\",\r\n                    \"addedDate\": \"{{contactAddedDate}}\"\r\n                }\r\n            ]\r\n        }\r\n        \r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n            \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        \r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n            \"companyRestrictions\": [\r\n                {\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"id\": \"{{memberRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"dealMemberId\": \"{{dealMemberInternalId}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                },\r\n                 {\r\n                    \"dealMember\":\r\n                    {\r\n                        \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n                         \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/(123456)"
                      },
                      "response": []
                    }
                  ],
                  "id": "2bb3e638-9ca3-4133-b2af-2d8706751761"
                },
                {
                  "name": "update MNPI record",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "32316205-cd50-402b-a56a-f0765b5ba649",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "     \r",
                              "\r",
                              "   \r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7788e18a-1fd0-4a93-bac8-33d3439e7128",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set MNPI props",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d0169371-dbd9-44c2-bc52-520510c2d95b",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "//postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\");\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"e5994f98-9d25-ec11-8408-0e84430236e3\");"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9a4bf956-31ee-470c-ba85-775a38b2870a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3fb5d3db-e41a-45ad-9b68-c28e211130a1",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "ac3f098a-35c3-46a6-a462-2ccab8e5ccbd",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5c52ca85-b494-47b8-ac6f-4f7d7bb9dfb9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryIdMNPI}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n     \"recordType\": \"{{recordTypeMNPI}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"49870c48-e77b-4a64-8052-eedae585ac49\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"EmployeesInvolved\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"AllEmployees\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cb3fcd4e-e5a6-4fe1-bdcc-ca0baccbcdc3",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a4f4555b-ff36-4276-853e-28ff9c537f55",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "912a3178-dc9a-4dce-b4fd-19b7a7946bdb",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "75a2855a-b13c-48a8-9269-febb8a10a2fc",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5ce14651-dda4-4bf6-8a4c-336e4fefa085",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n     \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"MNPI\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryIdMNPI}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraftAlwaysFalse}},\r\n     \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n     \"companies\": [{\r\n          \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n             \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"49870c48-e77b-4a64-8052-eedae585ac49\",\r\n            \"contactsUnderTent\": [\r\n            ]\r\n            \r\n           \r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n             \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"EmployeesInvolved\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"AllEmployees\",\r\n             \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n\r\n            \"companyRestrictions\": [{\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                \r\n               \r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7ffb000b-9a19-4790-9176-aac38d2ac802",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.description).to.contain(\"Updated\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9fec9d50-ef99-419e-83cc-11586e0202b7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "ba016ed7-fcc9-43f4-8b86-7f20cfe93c2f"
                }
              ],
              "id": "b4f99efe-a127-4d82-97a0-6cc07460a58c"
            },
            {
              "name": "patch",
              "item": [
                {
                  "name": "update the name of an existing deal",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7cfafa7c-fa57-4c75-98f5-ad64ddea3d09",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "12b7f51e-c3d7-4186-8f4c-37f5debc046b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "52f34ca0-1f1a-4526-b8df-056845a7579b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "7e9d9e8f-2976-4cc5-8722-fd6a2ff4e7d3",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0ee96f02-7278-40ec-8ea3-55a07d5d1644",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "9c8d7798-5769-4de6-8db9-0bb437094d1f",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6dfc2083-37ec-43bf-b69a-2e6485f6e7ef",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4d01cdac-ab11-4c5e-98ad-31dee4471f83",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "038d7290-9273-48f9-8f58-405789ec8b34",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "bfa8af81-2812-4527-b1eb-67cb390477a7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \r\n    \"name\": \"patched\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5531120e-dce2-40b5-938b-4806e379bba5",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.name).to.contain(\"Updated\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "da1a5ece-4dfe-479e-8178-77b1ba016dfd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "d5231e58-391c-4606-9a00-a9a268a476cb"
                },
                {
                  "name": "update non existing deal",
                  "item": [
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "62806d7c-5d88-44e2-9a1c-0a8c92ea0100",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "c541c7aa-9660-47d8-9a24-753e69936fb4",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "27b74789-0103-4d06-932a-422ab49ea4d8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n     \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"updated description\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": true,\r\n    \"isDraft\": false,\r\n     \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n     \"companies\": [{\r\n          \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n             \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"id\": \"{{contactsUnderTent1Id}}\",\r\n                \"clientId\": {{clientId}},\r\n                \"companyId\": \"{{company1Id}}\",\r\n                \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                \"createdByUserId\": \"{{createdByUserId}}\",\r\n                \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\"\r\n                \r\n            }\r\n            ]}]\r\n    ,\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n             \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n             \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n\r\n            \"companyRestrictions\": [{\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n               \r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/(24099e5e-c6e2-4a8f-ea5d-08d9b8b00000)"
                      },
                      "response": []
                    }
                  ],
                  "id": "cb64e1c0-45e2-4db2-a2fc-7d3de70aade6"
                },
                {
                  "name": "update the completion date to be before start date",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ab267dad-dd2c-4f0e-8d66-fe2b68911a9b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "90329f54-031b-441b-9bfa-559209e684ac",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cf90d373-828d-4161-9c06-0558f0255ee3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "479532ca-f7dc-491b-a513-3b706ee129ad",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6a28d63d-7b60-4750-ba93-11eb8f0d0c6e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8a05a3d9-a9fd-4246-b28b-b502daf44997",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "98350e89-7822-4131-be0e-fb2f17f9c303",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "73cabce6-1a69-470c-9902-070f270b29fe",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "f5f57c30-cac7-4769-aabb-8f3e759ea9c9",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a908a951-178c-49e0-8685-e42204764548",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"completionDate\": \"2020-12-07T13:01:04.788Z\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3d3993fc-60e2-4f00-98d8-e18dd54c3cbb",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "\r",
                              "\r",
                              "pm.test(\"New deal member is added\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.dealMembers[2].memberId).to.eq(\"980d61d4-7833-4161-9646-1e40063440d9\")\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c6a92667-d94c-4fa0-b8c0-a782df5d3fdf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "e85e526a-9544-45e3-a11e-5fa154b54cde"
                },
                {
                  "name": "isDraft update",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fec2d53b-0903-4bb6-a80a-e370ab42cebd",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f6b45841-3885-457f-86c7-ff20ba675ebd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "723f50e6-650c-474c-9a8b-83b08c8bd0bc",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "4bbf6809-f4d8-445d-82ad-cc61115a3f58",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d32997e4-e942-49f8-8f03-7b13a4c1e030",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n               { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b56217f8-0c7c-48f5-b456-6d1ae9fc6647",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8ce69f4f-1ea5-4d84-9f0b-067c45b5e7f6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e3e9e6f3-8205-41b1-8939-52453c08cff2",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "0cc0bddb-6ec7-4aba-8369-14c662c6d83f",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ca8124b0-197f-4225-8098-3921955fd30b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n     \"isDraft\": false\r\n    \r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "84155bc0-b39a-43b0-b756-9fb7a9bd2e95",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The new company is added\", function(){\r",
                              "pm.expect(jsonData.companies[1].name).to.eq(\"ALARMFORCE INDS INC\");\r",
                              "})\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "fb53d312-4bdc-4d47-ace3-a00e219aca89",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "a8b0cd3b-cfe4-4efe-a5a2-32731ebe31a1"
                },
                {
                  "name": "update step 4 - Add new restriction",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "744baf4f-6ac1-4ea1-bd24-f9162dd6990d",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "181f6423-cfb9-4c54-867b-1007d68c1b67",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92f83005-5faf-44f0-85b8-64d40b22bf6f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "84bc374b-88c9-4306-a53b-bdcf5f2d760b",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0e41e894-4bd0-4cf4-829f-a817d60e51df",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8a731413-41b6-47ec-b6d2-6d7ce6466d25",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "fa572d7d-2273-4be0-bc4f-85c1cedc0cb1",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "81ad8922-cb0f-4ec7-8e20-2d1fa758552f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "6953f603-6a4e-47b7-b2d8-1c9738e0cfa1",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "892d94d5-825f-4f9e-a169-9f0f3e54889a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": \"{{isDraftAlwaysFalse}}\",\r\n    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n    \"companies\": [\r\n        {\r\n            \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [\r\n                {\r\n                    \"id\": \"{{contactsUnderTent1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                    \"name\": \"{{contactsUnderTentName}}\",\r\n                    \"title\": \"{{contactsUnderTentTitle}}\",\r\n                    \"email\": \"{{$randomEmail}}\",\r\n                    \"addedDate\": \"{{contactAddedDate}}\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"ALARMFORCE INDS INC\",\r\n            \"externalId\": \"3ec49d9c-5502-eb11-8140-000c29887906\",\r\n            \"cusip\": \"01165L953\",\r\n            \"isin\": \"CA01165L1022\",\r\n            \"typeId\": \"03be7d38-c469-423c-a60a-dc7e66305fd9\",\r\n            \"status\": \"Active\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \r\n            \"ndaRequestedDate\": null,\r\n            \"ndaCompletedDate\": null,\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"dataDestructionRequestedDate\": null,\r\n            \"dataDestructionCompletedDate\": null,\r\n            \"lastModifiedByUserId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n            \"lastModifiedTimestamp\": \"2021-10-13T13:40:43.1716504Z\",\r\n            \"createdByUserId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n            \"createdTimestamp\": \"2021-10-13T13:40:43.1716501Z\",\r\n            \"contactsUnderTent\": []\r\n        }\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n            \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"980d61d4-7833-4161-9646-1e40063440d9\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n            \"companyRestrictions\": [\r\n                {\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"id\": \"{{memberRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"dealMemberId\": \"{{dealMemberInternalId}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"clientId\": 3396,\r\n            \"dealId\": \"5861de60-f71f-4341-19f1-08d983ea8c4b\",\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"startDate\": \"2021-08-29T21:00:00+00:00\",\r\n            \"endDate\": null,\r\n            \"isSyncToMarketAbuse\": false,\r\n            \"employeeRestriction\": \"InternalDealLead, InternalDealAssociates\",\r\n            \"companyRestrictions\": [\r\n                {\r\n                   \r\n                    \"company\": {\r\n                    \"name\": \"ALARMFORCE INDS INC\"\r\n                    }\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "9f824475-48a0-4aef-adf2-fb215c21fd90",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The new restriction is added\", function(){\r",
                              "pm.expect(jsonData.restrictions[1].name).to.eq(\"ControlRoom Restriction\");\r",
                              "})\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "40574398-a6e5-4b0d-8fd3-8d19a91969c1",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "f508c5f4-6e27-410a-956b-210e12f46b7d"
                },
                {
                  "name": "update the complianceStatus and acceptance status",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "56321dd3-8265-4546-babf-dc106576ed93",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "698391f8-0ae7-4b4d-88ec-e9d9ed93b738",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "21529212-d09b-4212-9276-f52bfbb5379f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "e17128c6-4674-44ac-ad38-6d671e2a55e8",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2335e35a-c188-4d4d-8d8c-00b94e7665da",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n               { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "9d01aa81-dc07-4c63-95fa-ee470352199c",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "fe1e893a-a2a3-4588-b461-d79ddefa3f82",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "53601bcd-ec8b-45ca-999a-4736fae17de7",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "63a4d003-1712-4fc3-8457-256dee217da3",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a409283b-793d-4525-ad5d-9cbfa19e1dcb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"complianceStatus\": \"Reviewed\",\r\n    \"acceptanceStatus\": \"Yes\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "23b4f303-eac6-46a0-a160-a62c01f936fd",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"A deal member is restricted\", function(){\r",
                              "pm.expect(jsonData.restrictions[0].memberRestrictions[0]).to.haveOwnPropertyDescriptor('dealMemberId')\r",
                              "})\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "aea000d5-c08b-4c95-852f-cad7d8756cdd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "657a1915-82cc-43ca-bb92-0fd40d5b18d4"
                },
                {
                  "name": "update MNPI record",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4421ad4f-6c98-4deb-89d9-3c3d72ba97ee",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "     \r",
                              "\r",
                              "   \r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1972183d-5bea-42c3-a5bd-66d2ab131385",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set MNPI props",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cb4f9fa7-52fa-47f5-8083-03d40e87ed10",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\");\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "36ecc238-7d12-4dd7-a6d7-c5aec51eccbe",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5ab1e9a5-8a88-4b0d-a4ac-e3403409a4dd",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "e9ea09a9-61f8-484c-833b-f049617b5524",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "098b8623-f10d-42ae-97af-3316b11c04a7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\",\r\n    \"status\": \"{{dealStatus}}\",\r\n     \"recordType\": \"{{recordTypeMNPI}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"49870c48-e77b-4a64-8052-eedae585ac49\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"EmployeesInvolved\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"AllEmployees\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "110cde4f-081d-4ca0-9345-1b1655825e85",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f67c891f-dffb-4891-9a4d-fc1f25bb1651",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1a985ecb-0038-484d-9f76-f7c2c7859957",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "7074242b-d756-4939-a58b-861c9229af61",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "009f28ae-b4b9-40c3-9045-d17ec9a2b58e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\"recordType\": \r\n\"Deal\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "74261ee9-1e2c-4c5d-a20c-d88ce71f13ca",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.description).to.contain(\"Updated\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a4c3cbba-62e3-4e25-99c1-72c60e2abeb3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "cd956ffd-8dae-451f-8392-f44a25e55db8"
                }
              ],
              "id": "4283f786-1ca5-4e96-97c2-76166ddce622"
            },
            {
              "name": "delete",
              "item": [
                {
                  "name": "delete an existing deal",
                  "item": [
                    {
                      "name": "expand all",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "49e05ed0-c90e-4dd0-bdc5-45f95574ff70",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7593970a-2a3b-4968-a836-325357459f8c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "823aac08-63e1-4296-9e92-6256a4f53a2d",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "a9275953-c893-4a7d-a579-cc4f98edb0d0",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "bcc5a2f1-0b1e-48c0-9ec9-f4eae71fc11e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": false,\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n               { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "Delete the new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript",
                            "id": "5c0193b5-f29e-4dbe-b028-0d89134e49b7"
                          }
                        }
                      ],
                      "id": "578d0df6-7d01-4159-a298-463a3ad95611",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "129a5941-8e2b-424f-8348-00877de448e7"
                },
                {
                  "name": "delete MNPI record",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4461dace-2b4a-4e81-9f0c-13d74a46bb94",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "     \r",
                              "\r",
                              "   \r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c8d6e281-030a-49f2-aaf5-90d9ef4728a8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set MNPI props",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2e320920-e3f3-4ac0-ba0d-fe7209bc80d8",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "//postman.setEnvironmentVariable(\"categoryIdMNPI\", \"4cfd53dc-8c1f-ec11-8408-0ebfb7f375ff\");//QA\r",
                              "postman.setEnvironmentVariable(\"typeIdMNPI\", \"49870c48-e77b-4a64-8052-eedae585ac49\");\r",
                              "postman.setEnvironmentVariable(\"EmployeesInvolved\", \"EmployeesInvolved\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeMNPI\", \"MNPI\");\r",
                              "postman.setEnvironmentVariable(\"categoryIdMNPI\", \"e5994f98-9d25-ec11-8408-0e84430236e3\");"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8ceb8e03-061d-4cfb-aa26-c6507913bb3f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "dff4c994-cbcc-4547-9594-85d9aef96741",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "6e55b189-bbe4-4c49-a824-738d8f382026",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f46c01af-f265-4106-9e22-b330c60fc732",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryIdMNPI}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n     \"recordType\": \"{{recordTypeMNPI}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"49870c48-e77b-4a64-8052-eedae585ac49\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"EmployeesInvolved\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"AllEmployees\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                { \r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript",
                            "id": "b2d34307-477c-4025-8cf6-0765a7ecce65"
                          }
                        }
                      ],
                      "id": "550d59cf-a3b9-4fb5-82ef-25a4a0ead884",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "027cf89e-5146-49af-bba4-e71b765abbec",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.recordType).to.contain(\"MNPI\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "49c497d3-875e-42d5-821c-53b1c3608a68",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "b387534f-206c-4630-8429-77d629863f45"
                },
                {
                  "name": "delete a non exisiting deal",
                  "item": [
                    {
                      "name": "Delete the new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8e0d30cc-86bf-4fb7-8af1-d5e7222244e5",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "cd5e21ff-f787-4133-a155-5154a6ee7956",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deals/(12345678)"
                      },
                      "response": []
                    }
                  ],
                  "id": "f2a0cee0-26ef-4267-b56a-81f02d9ec424"
                }
              ],
              "id": "c2b279f1-9f80-4413-a1f7-5530ab82d907"
            },
            {
              "name": "source/general requests",
              "item": [
                {
                  "name": "expand all",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1e0ff8c1-2680-427c-bc36-f46e32cda46d",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "//Test 2\r",
                          "pm.test(\"Response property matches environment variable\", function () {\r",
                          "  pm.expect(pm.response.json().value[0].companies[0].dataDestructionStatus).to.eql(pm.environment.get(\"dataDestructionStatus\"));\r",
                          "\r",
                          "});\r",
                          " \r",
                          "//Test 3\r",
                          "pm.test(\"Response property matches environment variable\", function () {\r",
                          "  pm.expect(pm.response.json().value[0].companies[0].ndaStatus).to.eql(pm.environment.get(\"ndaStatus\"));\r",
                          "});\r",
                          "\r",
                          "\r",
                          "function getRandomInt(max) {\r",
                          "  return Math.floor(Math.random() * max);\r",
                          "}\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "var valueSize = Object.keys(jsonData.value).length\r",
                          "var valueId = getRandomInt(valueSize-1);\r",
                          "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                          "var companyId = getRandomInt(companySize);\r",
                          "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                          "var statusId = getRandomInt(statusSize-1);\r",
                          "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                          "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                          "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                          "var restrictionId = getRandomInt(restrictionSize);\r",
                          "var bool = [true, false];\r",
                          "var isUrgent = bool[getRandomInt(2)];\r",
                          "var isDraft = bool[getRandomInt(2)];\r",
                          "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                          "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                          "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                          "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                          "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                          "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                          "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                          "\r",
                          "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                          "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                          "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                          "postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                          "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                          "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                          "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                          "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                          "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                          "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                          "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                          "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                          "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                          "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                          "postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                          "//postman.setEnvironmentVariable(\"businessUserIdQA\", \"e39b693c-6808-432b-806d-45c09d2cbbc0\");"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "add50dea-10d5-4e2f-9122-3466d85f0a43",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "restrictions,dealMembers,companies"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create a new deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f44f6baa-6707-4aa8-af2b-1f78ac2f1372",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"The deal status is active\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.status).to.eq('Active');\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The compliance status is Needs Review\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.complianceStatus).to.eq('NeedsReview');\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "c39fcb58-8492-43ba-95e7-b34b41cbae44",
                        "exec": [
                          "",
                          "",
                          "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                          "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                          "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                          "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                          "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                          "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                          "",
                          "",
                          "",
                          "const uuid = Math.random().toString(36).substring(2, 15) +",
                          "        Math.random().toString(36).substring(2, 15);",
                          "const randomEmail =  uuid + \"@emaill.com\";",
                          "pm.environment.set(\"randomEmail\", randomEmail)",
                          "",
                          "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                          "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                          "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                          "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                          "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                          "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                          "",
                          "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                          "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                          "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                          "",
                          "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                          "//         pm.expect(err).to.not.be.ok;",
                          "//         pm.expect(res).to.have.property('code', 200);",
                          "//         pm.expect(res).to.have.property('status', 'OK');",
                          "//     });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "a4b03cc1-bd39-4864-a87c-6a35c10291f1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{randomCompanyName1}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        },\r\n         {\r\n            \"name\": \"{{randomCompanyName2}}\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName2}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"dealMember\":\r\n                    {\r\n                        \"memberId\": \"{{memberId}}\",\r\n                        \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Create a new deal Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7be48799-4fcb-4a53-a058-a97d9d53ce9f",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"The deal status is active\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.status).to.eq('Active');\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The compliance status is Needs Review\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.complianceStatus).to.eq('NeedsReview');\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "40ae49d7-fa27-4d20-92ab-d22ed8870310",
                        "exec": [
                          "",
                          "",
                          "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                          "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                          "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                          "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                          "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                          "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                          "",
                          "",
                          "",
                          "const uuid = Math.random().toString(36).substring(2, 15) +",
                          "        Math.random().toString(36).substring(2, 15);",
                          "const randomEmail =  uuid + \"@emaill.com\";",
                          "pm.environment.set(\"randomEmail\", randomEmail)",
                          "",
                          "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                          "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                          "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                          "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                          "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                          "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                          "",
                          "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                          "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                          "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                          "",
                          "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                          "//         pm.expect(err).to.not.be.ok;",
                          "//         pm.expect(res).to.have.property('code', 200);",
                          "//         pm.expect(res).to.have.property('status', 'OK');",
                          "//     });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "ab40ff06-927f-4ab4-a719-a99a41bb5a79",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{randomCompanyName1}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        },\r\n         {\r\n            \"name\": \"{{randomCompanyName2}}\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName2}}\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "На Маги заявката за 4422, да си сравня с моята ПОСТ id za qa",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a9ee3f46-8e98-4a1a-9689-9a1df89d101a",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"The deal status is active\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.status).to.eq('Active');\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The compliance status is Needs Review\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.complianceStatus).to.eq('NeedsReview');\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "11c471b1-879e-47d2-afb0-2f4ea8eabe92",
                        "exec": [
                          "",
                          "",
                          "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                          "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                          "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                          "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                          "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                          "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                          "",
                          "",
                          "",
                          "const uuid = Math.random().toString(36).substring(2, 15) +",
                          "        Math.random().toString(36).substring(2, 15);",
                          "const randomEmail =  uuid + \"@emaill.com\";",
                          "pm.environment.set(\"randomEmail\", randomEmail)",
                          "",
                          "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                          "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                          "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                          "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                          "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                          "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                          "",
                          "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                          "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                          "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                          "",
                          "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                          "//         pm.expect(err).to.not.be.ok;",
                          "//         pm.expect(res).to.have.property('code', 200);",
                          "//         pm.expect(res).to.have.property('status', 'OK');",
                          "//     });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "f2bb42a0-28eb-4aad-b178-f3f51615af4b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "\r\n    \"name\": \"MSN Deal with Restriction\",\r\n    \"description\": \"<p>fsdfsdf</p>\",\r\n    \"categoryId\": \"0b8ef1d5-41da-eb11-aae9-0e29a95e9f25\",\r\n    \"status\": \"Active\",\r\n    \"startDate\": \"2021-08-29T21:00:00.000Z\",\r\n    \"completionDate\": null,\r\n    \"isUrgent\": false,\r\n    \"isDraft\": false,\r\n    \"companies\": [\r\n        {\r\n            \"name\": \"MSN Buyer Company\",\r\n            \"status\": \"Active\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"ndaRequestedDate\": null,\r\n            \"ndaCompletedDate\": null,\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"dataDestructionRequestedDate\": null,\r\n            \"dataDestructionCompletedDate\": null,\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": []\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"MSN Restriction\",\r\n            \"startDate\": \"2021-08-29T21:00:00.000Z\",\r\n            \"endDate\": null,\r\n            \"companyRestrictions\": [\r\n                {\r\n                    \"company\": {\r\n                        \"name\": \"MSN Buyer Company\",\r\n                        \"status\": \"Active\",\r\n                        \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\",\r\n                        \"ndaStatus\": \"NotAvailable\",\r\n                        \"ndaRequestedDate\": null,\r\n                        \"ndaCompletedDate\": null,\r\n                        \"dataDestructionStatus\": \"NotAvailable\",\r\n                        \"dataDestructionRequestedDate\": null,\r\n                        \"dataDestructionCompletedDate\": null,\r\n                        \"contactsUnderTent\": [],\r\n                        \"companyAdvisees\": []\r\n                    }\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"dealMember\":\r\n                    {\r\n                        \"memberId\": \"a243a047-2557-41d3-9a44-17ce426809eb\",\r\n                        \"memberType\": \"InternalDealLeadUser\"\r\n                    }\r\n                }\r\n            ],\r\n            \"employeeRestriction\": \"InternalDealLead, InternalDealAssociates\"\r\n        }\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"d9999ced-bb64-43fc-b085-6ee83eb949e4\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"a243a047-2557-41d3-9a44-17ce426809eb\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"0aa31da6-6060-4fec-9a68-7f5b4ba7fdbc\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "List the new deal only",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "276bdade-4120-4b4f-ad61-6ecfb6a491f8",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "// да се проверят пропътритата от дийла\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberRestrictionId\", jsonData.value[0].restrictions[0].memberRestrictions[0].dealMemberId);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "5bc2e195-a47f-454f-94c2-9c16f6f80b8f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals?$top=25&$filter=((id%20eq%20{{dealId}}))&$expand=dealMembers,restrictions($expand=memberRestrictions)",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals"
                      ],
                      "query": [
                        {
                          "key": "$top",
                          "value": "25"
                        },
                        {
                          "key": "$filter",
                          "value": "((id%20eq%20{{dealId}}))"
                        },
                        {
                          "key": "$expand",
                          "value": "dealMembers,restrictions($expand=memberRestrictions)"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update the new deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "10a3ebbc-f7a9-4c40-be78-d8020946978b"
                      }
                    }
                  ],
                  "id": "fdcff398-68b2-48d3-8bc7-dd6330b357dc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal PATCH\",\r\n    \"description\": \"The deal of a lifetime\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"Active\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the new deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "fc232119-34a4-4d41-8136-ae948bf9f666"
                      }
                    }
                  ],
                  "id": "a5364a81-f895-443a-b47a-cf184f96e29d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                },
                {
                  "name": "partly variables",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "273a6d42-ad9c-405e-bdd7-df23c6fadada",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "0ad1302c-9234-49ea-879c-82d0c87e03a9",
                        "exec": [
                          "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "4612a728-04dd-4d98-b8bc-c20f18043c77",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n     \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraftAlwaysFalse}},\r\n     \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n     \"companies\": [{\r\n          \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n             \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"id\": \"{{contactsUnderTent1Id}}\",\r\n                \"clientId\": {{clientId}},\r\n                \"companyId\": \"{{company1Id}}\",\r\n                \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                \"createdByUserId\": \"{{createdByUserId}}\",\r\n                \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\"\r\n                \r\n            }\r\n            ]\r\n            \r\n           \r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n             \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n             \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n\r\n            \"companyRestrictions\": [{\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"id\": \"{{memberRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"dealMemberId\": \"{{dealMemberInternalId}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                        }\r\n               \r\n            ]\r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                },
                {
                  "name": "update",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b3ecd98f-6ad5-4a4a-8ed6-0345827b0ec7",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3cec10e0-4e6d-41c5-8b2f-e1a2f82a526d",
                        "exec": [
                          "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "2dfd7a26-37bf-4b20-9e34-e836c4e44950",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n     \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraftAlwaysFalse}},\r\n     \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n     \"companies\": [{\r\n          \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n             \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"id\": \"{{contactsUnderTent1Id}}\",\r\n                \"clientId\": {{clientId}},\r\n                \"companyId\": \"{{company1Id}}\",\r\n                \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                \"createdByUserId\": \"{{createdByUserId}}\",\r\n                \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\"\r\n                \r\n            }\r\n            ]\r\n            \r\n           \r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n             \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n             \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n\r\n            \"companyRestrictions\": [{\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"id\": \"{{memberRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"dealMemberId\": \"{{dealMemberInternalId}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                        }\r\n               \r\n            ]\r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                },
                {
                  "name": "working PUT",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "741bce55-f830-49ef-b14c-ba94833caa2e",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "10006417-098e-4f87-b7d1-98e92555c867",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"id\": \"14df18b6-5962-47af-b352-08d98e2afb46\",\r\n    \"clientId\": 5395,\r\n    \"recordType\": \"Deal\",\r\n    \"name\": \"382 API deal 222\",\r\n    \"description\": \"2021-10-13T13:54:23.621Z API deal description\",\r\n    \"categoryId\": \"0d8ef1d5-41da-eb11-aae9-0e29a95e9f25\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2021-10-14T13:54:23.621Z\",\r\n    \"completionDate\": \"2021-10-15T13:54:23.621Z\",\r\n    \"isUrgent\": false,\r\n    \"isDraft\": false,\r\n    \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n    \"lastModifiedTimestamp\": \"2021-10-13T13:54:24.1611597Z\",\r\n    \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n    \"createdTimestamp\": \"2021-10-13T13:54:24.1611579Z\",\r\n    \"companies\": [\r\n        {\r\n            \"id\": \"ad2d3eb1-57ac-456b-98de-08d98e29d48e\",\r\n            \"clientId\": 5395,\r\n            \"dealId\": \"14df18b6-5962-47af-b352-08d98e2afb46\",\r\n            \"name\": \"SENTINELONE INC\",\r\n            \"externalId\": \"8183f8ae-27ee-eb11-aab2-0e552e33953f\",\r\n            \"cusip\": \"81730H109\",\r\n            \"isin\": \"US81730H1095\",\r\n            \"typeId\": \"470f046f-8b1b-4eb1-b238-cea664b18a6a\",\r\n            \"status\": \"Active\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"ndaRequestedDate\": \"2021-10-14T13:54:23.621Z\",\r\n            \"ndaCompletedDate\": \"2021-11-04T03:41:03.621Z\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"dataDestructionRequestedDate\": \"2021-10-14T13:54:23.621Z\",\r\n            \"dataDestructionCompletedDate\": \"2021-10-15T13:54:23.621Z\",\r\n            \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"lastModifiedTimestamp\": \"2021-10-13T13:54:24.1611607Z\",\r\n            \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"createdTimestamp\": \"2021-10-13T13:54:24.1611604Z\",\r\n            \"contactsUnderTent\": [\r\n                {\r\n                    \"id\": \"5601b7c2-706a-4d11-b1a2-08d98e2a666d\",\r\n                    \"clientId\": 5395,\r\n                    \"name\": \"50 API contact name\",\r\n                    \"title\": \"933 API contact title\",\r\n                    \"email\": \"Onie.Stehr@yahoo.com\",\r\n                    \"companyId\": \"ad2d3eb1-57ac-456b-98de-08d98e29d48e\",\r\n                    \"addedDate\": \"2021-10-15T13:54:23.621Z\",\r\n                    \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"lastModifiedTimestamp\": \"2021-10-13T13:54:24.1611623Z\",\r\n                    \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"createdTimestamp\": \"2021-10-13T13:54:24.1611618Z\"\r\n                },\r\n                {\r\n                    \"id\": \"087112ae-d884-404e-b1a3-08d98e2a666d\",\r\n                    \"clientId\": 5395,\r\n                    \"name\": \"50 API contact name\",\r\n                    \"title\": \"933 API contact title\",\r\n                    \"email\": \"Horacio_Bins39@hotmail.com\",\r\n                    \"companyId\": \"ad2d3eb1-57ac-456b-98de-08d98e29d48e\",\r\n                    \"addedDate\": \"2021-10-15T13:54:23.621Z\",\r\n                    \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"lastModifiedTimestamp\": \"2021-10-13T13:54:24.1611631Z\",\r\n                    \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"createdTimestamp\": \"2021-10-13T13:54:24.1611629Z\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n\"dealMembers\": [\r\n{\r\n            \"id\": \"3b547fdf-b20c-47f2-3fc1-08d98e2afb47\",\r\n            \"clientId\": 5395,\r\n            \"dealId\": \"14df18b6-5962-47af-b352-08d98e2afb46\",\r\n            \"memberId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"memberType\": \"RecordVisibilityUser\",\r\n            \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"lastModifiedTimestamp\": \"2021-10-13T13:54:24.1611637Z\",\r\n            \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"createdTimestamp\": \"2021-10-13T13:54:24.1611633Z\"\r\n        },\r\n        {\r\n            \"id\": \"141b6550-0f01-421b-3fc2-08d98e2afb47\",\r\n            \"clientId\": 5395,\r\n            \"dealId\": \"14df18b6-5962-47af-b352-08d98e2afb46\",\r\n            \"memberId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"memberType\": \"InternalDealLeadUser\",\r\n            \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"lastModifiedTimestamp\": \"2021-10-13T13:54:24.1611641Z\",\r\n            \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"createdTimestamp\": \"2021-10-13T13:54:24.161164Z\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"id\": \"dcf5d405-ee1a-4e6a-1a6c-08d98e29d493\",\r\n            \"clientId\": 5395,\r\n            \"dealId\": \"14df18b6-5962-47af-b352-08d98e2afb46\",\r\n            \"name\": \"44 API  restriction\",\r\n            \"startDate\": \"2021-10-14T13:54:23.621Z\",\r\n            \"endDate\": \"2021-10-14T13:54:23.621Z\",\r\n            \"isSyncToMarketAbuse\": false,\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"lastModifiedTimestamp\": \"2021-10-13T13:54:24.1611648Z\",\r\n            \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"createdTimestamp\": \"2021-10-13T13:54:24.1611644Z\",\r\n            \"companyRestrictions\": [\r\n                {\r\n                    \"id\": \"fbbfa0cf-ecf1-48f7-60e5-08d98e29d493\",\r\n                    \"clientId\": 5395,\r\n                    \"restrictionId\": \"dcf5d405-ee1a-4e6a-1a6c-08d98e29d493\",\r\n                    \"companyId\": \"ad2d3eb1-57ac-456b-98de-08d98e29d48e\",\r\n                    \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"lastModifiedTimestamp\": \"2021-10-13T13:54:24.1611656Z\",\r\n                    \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"createdTimestamp\": \"2021-10-13T13:54:24.1611652Z\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"id\": \"faa90e09-33e1-4525-8458-08d98e44538f\",\r\n                    \"clientId\": 5395,\r\n                    \"restrictionId\": \"dcf5d405-ee1a-4e6a-1a6c-08d98e29d493\",\r\n                    \"dealMemberId\": \"141b6550-0f01-421b-3fc2-08d98e2afb47\",\r\n                    \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"lastModifiedTimestamp\": \"2021-10-13T13:54:24.1611662Z\",\r\n                    \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"createdTimestamp\": \"2021-10-13T13:54:24.1611659Z\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "b8b1a189-65ea-44f8-990e-f62ef18bece5"
            }
          ],
          "id": "85a94ca2-c34e-457f-861f-7739186eec42"
        },
        {
          "name": "Documents",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "list all documents",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "12818264-2c4f-44a1-9e48-4e0f48360744",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.value[0].documentTypeId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "    var jsonData =pm.response.json();",
                              "pm.test(\"There is a file listed\", function(){",
                              "pm.expect(jsonData.value[0].fileName).to.exist;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "b45e39fa-4a98-462c-93e8-f272b82ba523",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/documents?$filter=EntityId eq {{dealId}}",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq {{dealId}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "46d4040f-e90f-4e62-b80d-0c4c0b1d1831"
                },
                {
                  "name": "list all documents for non existent entity",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b211ba6a-cee4-4ed3-a8a4-c2ce5f8c6420",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.value[0].documentTypeId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);",
                              "",
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "    var jsonData =pm.response.json();",
                              "pm.test(\"There is a file listed\", function(){",
                              "pm.expect(jsonData.value[0].fileName).to.exist;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ec043ae2-711b-4205-b01a-d40094247944",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/documents?$filter=EntityId eq 12328",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 12328"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "f15f09db-534f-45b1-8a96-1f3d099d4906"
                }
              ],
              "id": "4c09fbba-8fca-49d8-abff-9533fff1ad15"
            },
            {
              "name": "getById",
              "item": [
                {
                  "name": "download a specific file",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3425c747-3d40-4030-9f3e-1a6eae38faa3",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.value[0].documentTypeId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "    var jsonData =pm.response.json();",
                              "pm.test(\"There is a file listed\", function(){",
                              "pm.expect(jsonData.value[0].fileName).to.exist;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9de6884c-82e8-43c5-9db5-4d5ff109aab8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/documents?$filter=EntityId eq {{dealId}}",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq {{dealId}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "upload the doc to a deal Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "144559ee-0f31-4586-a7d0-a036e7c0558f",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentId\", jsonData.id);",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9e575c2d-dfb1-42d5-8718-d091b7a5d7b2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "type": "file",
                              "src": "sample.pdf"
                            },
                            {
                              "key": "entityId",
                              "value": "{{entityId}}",
                              "type": "text"
                            },
                            {
                              "key": "documentTypeId",
                              "value": "{{documentTypeId}}",
                              "type": "text"
                            },
                            {
                              "key": "entityType",
                              "value": "Deal",
                              "type": "text"
                            },
                            {
                              "key": "dealId",
                              "value": "6d21774f-468d-4c37-8f55-08d966d1c877",
                              "type": "text",
                              "disabled": true
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/documents?$filter=EntityId eq {{entityId}}",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq {{entityId}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "download",
                      "id": "41d44b3d-908a-49ba-90b6-b00405536d2b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/documents(Id={{documentId}},EntityId={{entityId}})/download"
                      },
                      "response": []
                    }
                  ],
                  "id": "6015704f-8cb8-4009-b548-e4e45dfd82e4"
                },
                {
                  "name": "download a non existing file",
                  "item": [
                    {
                      "name": "download",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0b82bb9c-bed4-4c80-b68a-dfb3d095d0e8",
                            "exec": [
                              "pm.test(\"Status code is 404\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "986c97ff-10e6-4333-ae4a-0fc4d457bc88",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/documents(Id=1234567,EntityId={{entityId}})/download"
                      },
                      "response": []
                    }
                  ],
                  "id": "1c1a65cf-79b9-4227-8916-68aef53c7db7"
                }
              ],
              "id": "21d83f15-0f13-4ec9-8f35-dc0c3027f3f8"
            },
            {
              "name": "create",
              "item": [
                {
                  "name": "upload a pdf file to a deal",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fbfa3080-10bc-4b5d-be05-195e42782e06",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f70f08dd-9bf0-4a1e-9574-07d05e2f1a58",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a deal for the doc to be uploaded",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7e077f34-34af-4b67-a004-7bd79bca3ac2",
                            "exec": [
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.id);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9c8df4c4-d5b8-45c2-9815-6f1822a12cf0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"recordType\": \"Deal\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"Reviewed\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"acceptanceStatus\": \"Yes\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "upload the doc to a deal Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1f597334-1838-40b9-910c-8580b1e04e0c",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentId\", jsonData.id);",
                              "",
                              "    var jsonData =pm.response.json();",
                              "pm.test(\"There is a file listed\", function(){",
                              "pm.expect(jsonData.fileName).to.exist;",
                              "});",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "33dbd758-3512-4e9f-a70f-11ab1a08a059",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "type": "file",
                              "src": "sample.pdf"
                            },
                            {
                              "key": "entityId",
                              "value": "{{dealId}}",
                              "type": "text"
                            },
                            {
                              "key": "documentTypeId",
                              "value": "{{documentTypeId}}",
                              "type": "text"
                            },
                            {
                              "key": "entityType",
                              "value": "MNPI",
                              "type": "text"
                            },
                            {
                              "key": "dealId",
                              "value": "6d21774f-468d-4c37-8f55-08d966d1c877",
                              "type": "text",
                              "disabled": true
                            }
                          ]
                        },
                        "url": "{{ApiBaseUrl}}/v1/documents/"
                      },
                      "response": []
                    },
                    {
                      "name": "download",
                      "id": "8bdcb583-0544-4130-ad58-66111115c3d4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/documents(Id={{documentId}},EntityId={{entityId}})/download"
                      },
                      "response": []
                    }
                  ],
                  "id": "eaa6b2df-2a7f-4e6b-b076-5c89ff497efe"
                },
                {
                  "name": "upload a file to other MNPI",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "02878095-1f6b-4e6c-b534-3561c0ae6271",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "bcb2214c-f29a-4f39-9ba6-78cb1b94b0c6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a deal for the doc to be uploaded",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "694006f5-5e55-4914-8402-b7d4c679547e",
                            "exec": [
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.id);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ebe094ab-d00d-4844-9dca-4668059a5fd3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"Aug 20 API\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"9c71b573-0165-4cb7-9efc-85499fd17ba4\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n    \"companies\": [\r\n        {\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"5c3ed003-8791-4a64-8fa0-08d93d3eeacc\"\r\n        }\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"980d61d4-7833-4161-9646-1e40063440d9\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },{\r\n            \"memberId\": \"e39b693c-6808-432b-806d-45c09d2cbbc0\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"ee3034ba-eccc-44f5-bdb4-93eaf6679944\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        },{\r\n            \"memberId\": \"4052cf56-12e8-42c5-b666-e309fd6ac6b4\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"0f690963-7bc4-4e14-a3a1-09cb193df041\",\r\n            \"memberType\": \"InternalDealAssociateGroup\"\r\n        },{\r\n            \"memberId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n            \"memberType\": \"SpecificInternalUser\"\r\n        },{\r\n            \"memberId\": \"0f690963-7bc4-4e14-a3a1-09cb193df041\",\r\n            \"memberType\": \"AssociatedComplianceTeamGroup\"\r\n        },{\r\n            \"memberId\": \"4052cf56-12e8-42c5-b666-e309fd6ac6b4\",\r\n            \"memberType\": \"InternalDealAssociateUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead, InternalDealAssociates, AssociatedComplianceTeam, AllEmployees\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "upload the doc to other MNPI",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4abd3a95-3bf4-4ed3-b6bf-18466d29e1cb",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentId\", jsonData.id);",
                              "",
                              "    var jsonData =pm.response.json();",
                              "pm.test(\"There is a file listed\", function(){",
                              "pm.expect(jsonData.entityType).to.exist;",
                              "});",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1c165f5b-edaf-499d-8db6-d720a5bce1e4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "type": "file",
                              "src": "sample.pdf"
                            },
                            {
                              "key": "entityId",
                              "value": "{{dealId}}",
                              "type": "text"
                            },
                            {
                              "key": "documentTypeId",
                              "value": "{{documentTypeId}}",
                              "type": "text"
                            },
                            {
                              "key": "entityType",
                              "value": "other MNPI",
                              "type": "text"
                            },
                            {
                              "key": "dealId",
                              "value": "6d21774f-468d-4c37-8f55-08d966d1c877",
                              "type": "text",
                              "disabled": true
                            }
                          ]
                        },
                        "url": "{{ApiBaseUrl}}/v1/documents/"
                      },
                      "response": []
                    },
                    {
                      "name": "download",
                      "id": "3d4e039a-0909-4fa1-81ec-653cae155bad",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/documents(Id={{documentId}},EntityId={{entityId}})/download"
                      },
                      "response": []
                    }
                  ],
                  "id": "9d733980-9405-4793-8558-12c6b0475597"
                },
                {
                  "name": "upload no file",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "75780dd5-5cf7-44af-a645-cffc7e625117",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.value[0].documentTypeId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "    var jsonData =pm.response.json();",
                              "pm.test(\"There is a file listed\", function(){",
                              "pm.expect(jsonData.value[0].fileName).to.exist;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ca5dd64e-e7fe-41a2-869d-227b5834d503",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/documents?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "upload the doc to a deal Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fc32c6ee-66c6-4428-a76b-4856d2b5f7c0",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentId\", jsonData.id);",
                              "",
                              " ",
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "057c522a-ad17-49db-bab0-51dad837689a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "type": "file",
                              "value": null
                            },
                            {
                              "key": "entityId",
                              "value": "{{entityId}}",
                              "type": "text"
                            },
                            {
                              "key": "documentTypeId",
                              "value": "{{documentTypeId}}",
                              "type": "text"
                            },
                            {
                              "key": "entityType",
                              "value": "Deal",
                              "type": "text"
                            },
                            {
                              "key": "dealId",
                              "value": "6d21774f-468d-4c37-8f55-08d966d1c877",
                              "type": "text",
                              "disabled": true
                            }
                          ]
                        },
                        "url": "{{ApiBaseUrl}}/v1/documents/"
                      },
                      "response": []
                    }
                  ],
                  "id": "3373f849-ae01-4835-b883-f7803d9e070c"
                },
                {
                  "name": "upload a file over 100mb",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fb2f48d9-a53a-4941-8a47-12865fcc060c",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentId\", jsonData.id);",
                              "",
                              "pm.test(\"File too big\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5cf61d63-a3ca-4087-b2ef-73eb525ab99a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "type": "file",
                              "src": "529-Article Text-2712-1-10-20130506.pdf"
                            },
                            {
                              "key": "entityId",
                              "value": "{{entityId}}",
                              "type": "text"
                            },
                            {
                              "key": "documentTypeId",
                              "value": "{{documentTypeId}}",
                              "type": "text"
                            },
                            {
                              "key": "entityType",
                              "value": "Deal",
                              "type": "text"
                            }
                          ]
                        },
                        "url": "{{ApiBaseUrl}}/v1/documents/"
                      },
                      "response": []
                    }
                  ],
                  "id": "7d9f44f5-a3ab-4f46-9141-aa5ad91f5a14"
                }
              ],
              "id": "3f4fe776-e5a4-4943-9f51-17be90a57d04"
            },
            {
              "name": "update",
              "item": [
                {
                  "name": "update the file with another document type",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c2f2372c-87cc-4690-8194-ad93960f50ca",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.value[0].documentTypeId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "    var jsonData =pm.response.json();",
                              "pm.test(\"There is a file listed\", function(){",
                              "pm.expect(jsonData.value[0].fileName).to.exist;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "afe5ecdc-64ac-4b46-a8f4-3d37b8f96758",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/documents?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "upload the doc to a deal Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b1d22b4b-da76-448c-8495-35c5e606171f",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentId\", jsonData.id);",
                              "",
                              "    var jsonData =pm.response.json();",
                              "pm.test(\"There is a file listed\", function(){",
                              "pm.expect(jsonData.fileName).to.exist;",
                              "});",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1f7a5165-005a-4a68-8627-04b4cada22e4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "type": "file",
                              "src": "sample.pdf"
                            },
                            {
                              "key": "entityId",
                              "value": "{{entityId}}",
                              "type": "text"
                            },
                            {
                              "key": "documentTypeId",
                              "value": "{{documentTypeId}}",
                              "type": "text"
                            },
                            {
                              "key": "entityType",
                              "value": "MNPI",
                              "type": "text"
                            },
                            {
                              "key": "dealId",
                              "value": "6d21774f-468d-4c37-8f55-08d966d1c877",
                              "type": "text",
                              "disabled": true
                            }
                          ]
                        },
                        "url": "{{ApiBaseUrl}}/v1/documents/"
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "dfe0d30d-c217-4b05-a61d-bffa3eccb226",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "70aaa1e3-a15f-4efc-9e61-012fa4ad77e8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"documentTypeId\": \"{{documentTypeId}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/documents(Id={{documentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "b9b9d232-ea95-4559-883c-70e423430103"
                },
                {
                  "name": "update non exisitng file",
                  "item": [
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "affc576c-70ed-4d44-b05d-03f57ede206b",
                            "exec": [
                              "pm.test(\"Status code is 404\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "94c3509d-ea34-4e0e-bbde-9cc20944696e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"documentTypeId\": \"{{documentTypeId}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/documents(Id=12345,EntityId=3456789)"
                      },
                      "response": []
                    }
                  ],
                  "id": "5cf58997-0acb-4808-b90f-68f9d12739da"
                }
              ],
              "id": "4d8fb275-cebe-47ea-aefc-1fb5d9ee328d"
            },
            {
              "name": "delete",
              "item": [
                {
                  "name": "delete existing file",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "46d441e2-bc03-496d-a72a-2d125b2ed068",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.value[0].documentTypeId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "    var jsonData =pm.response.json();",
                              "pm.test(\"There is a file listed\", function(){",
                              "pm.expect(jsonData.value[0].fileName).to.exist;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9e8490f9-5b64-4a93-8551-4cfde90070ae",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/documents?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "upload the doc to a deal Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "9512aa03-78c2-4094-b530-2ddf9a3b53fa",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"documentId\", jsonData.id);",
                              "",
                              "    var jsonData =pm.response.json();",
                              "pm.test(\"There is a file listed\", function(){",
                              "pm.expect(jsonData.fileName).to.exist;",
                              "});",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "27173f99-d53f-4fc3-837a-12c50f31f9b3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "type": "file",
                              "src": "sample.pdf"
                            },
                            {
                              "key": "entityId",
                              "value": "{{entityId}}",
                              "type": "text"
                            },
                            {
                              "key": "documentTypeId",
                              "value": "{{documentTypeId}}",
                              "type": "text"
                            },
                            {
                              "key": "entityType",
                              "value": "Deal",
                              "type": "text"
                            },
                            {
                              "key": "dealId",
                              "value": "6d21774f-468d-4c37-8f55-08d966d1c877",
                              "type": "text",
                              "disabled": true
                            }
                          ]
                        },
                        "url": "{{ApiBaseUrl}}/v1/documents/"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8d5068e6-4b7a-45a7-9b1a-a4c1759bcb9c",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "465e982f-4515-4d09-b0d9-67269b9b3fcf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/documents(Id={{documentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "d69afdf7-ff0a-4ff5-87ba-fa99e634c1cd"
                },
                {
                  "name": "delete non existing file",
                  "item": [
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8bf72019-ffd3-402d-acf9-137084a93956",
                            "exec": [
                              "pm.test(\"Status code is 404\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8b61438c-3060-48e2-a4b5-bff03a8f2c04",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/documents(Id=34567,EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "33c70329-a3d6-4c60-89fd-428d0115ffb8"
                }
              ],
              "id": "1aa182e7-78cc-4f8f-87b0-4e1c02610bf4"
            }
          ],
          "id": "4c34559a-04e3-4e07-892b-599f939eec86"
        },
        {
          "name": "Comments",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "list all comments for specific deal",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fc91910d-9add-487e-b730-bd1ccda5c568",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"visibility\", jsonData.value[0].visibility);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.value[0].text).to.exist;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6fdadca4-4422-46f5-94c9-a0347b5783f8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/comments?$filter=EntityId eq {{dealId}}",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "comments"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq {{dealId}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "8c65c028-10e1-4c12-aeb6-af93dae52885"
                },
                {
                  "name": "list all comments without specifing deal",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0d55d29a-d36f-4fcb-9109-99229ed9ddd9",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"visibility\", jsonData.value[0].visibility);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1181e4af-4160-468c-8986-158707d8b39f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/comments?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "comments"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "5399c776-f500-4370-89c6-6363b528d192"
                }
              ],
              "id": "4b1db166-7fdf-495b-a17d-756027add877"
            },
            {
              "name": "getById",
              "item": [
                {
                  "name": "get specific comment",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f04b1b81-8fa4-40fb-829d-294a6faf5d5b",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"visibility\", jsonData.value[0].visibility);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "43286aa9-dabb-4b65-a045-ae1217e7b287",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/comments?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "comments"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "dbbad073-733e-42ce-a62b-a4ccd115b5db",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"commentId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ebed958e-4d72-48ba-9d01-42987b438527",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"Private\",\r\n  \"entityId\": \"{{entityId}}\",\r\n  \"text\" : \"im here just to check the comments\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1c612d69-5b4e-4adf-aa37-9a36228ddc0c",
                            "exec": [
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.value[0].text).to.exist;",
                              "});",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6434109c-8b43-47c1-a105-cb708a669aed",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/comments(Id={{commentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "67a89e01-aef5-4cb3-a2d4-9e7bd2cba217"
                },
                {
                  "name": "get non existing comment",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3604756b-a092-463e-9aa8-88e1b4a538c3",
                            "exec": [
                              "",
                              "pm.test(\"Status code is 404\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "fed95da2-19da-4019-87c4-3dab7304cea3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/comments(Id=12345678,EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "0c0a03fb-2b31-47c0-9760-823aa7b7c4a4"
                }
              ],
              "id": "536a04d8-591c-447c-8d41-e31aae340daf"
            },
            {
              "name": "create",
              "item": [
                {
                  "name": "create public comment",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ff2c8dc2-088f-425f-8118-7b834bf29f83",
                            "exec": [
                              "// Test 1",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "var responseJson = JSON.parse(responseBody);",
                              "var a=[];",
                              "var list = (responseJson.value).length;",
                              "for (var i = 0; i < list; i++) ",
                              "                  {",
                              "                   var counter = responseJson.value[i];",
                              "                    if (counter.isin !== null){",
                              "                        a.push(counter)",
                              "                    }",
                              "                    ",
                              "                   }",
                              "",
                              " for(var i =0;  i < a.length; i++){",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)",
                              "if (companyWithIsin && companyWithIsin.name) {",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");",
                              "return;",
                              "}",
                              "     console.log(companyWithIsin)",
                              "         ",
                              "         ",
                              "        ",
                              "         console.log(a[i])",
                              "    }",
                              "  ",
                              "",
                              "",
                              "function getRandomInt(max) {",
                              "  return Math.floor(Math.random() * max);",
                              "}",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "var valueSize = Object.keys(jsonData.value).length",
                              "var valueId = getRandomInt(valueSize-1);",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length",
                              "var companyId = getRandomInt(companySize);",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length",
                              "var statusId = getRandomInt(statusSize-1);",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length",
                              "var restrictionId = getRandomInt(restrictionSize);",
                              "var bool = [true, false];",
                              "var isUrgent = bool[getRandomInt(2)];",
                              "var isDraft = bool[getRandomInt(2)];",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]",
                              "",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);",
                              "postman.setEnvironmentVariable(\"typeId\",",
                              "     jsonData.value[valueId].companies[companyId]",
                              "     ? jsonData.value[valueId].companies[companyId].typeId ",
                              "     : null);",
                              "",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");",
                              "",
                              "",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",",
                              "     jsonData.value[valueId].restrictions[restrictionId] ",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction ",
                              "     : null);",
                              "",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1c8f3470-6c72-4419-a680-5ab839c7a01f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3a8232a4-a0d8-4d02-9e69-604f32bcd94e",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "b3201f1c-aa12-4bac-ab47-fb5d39ec13fa",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9fb28a5c-49ed-43e3-91f0-af2537c239a5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"recordType\": \"Deal\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"dealMember\":\r\n                    {\r\n                        \"memberId\": \"{{memberId}}\",\r\n                        \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "dd6161ac-dfd9-4916-abcc-3d3b33a28e7f",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"commentId\", jsonData.id);",
                              "",
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.text).to.exist;",
                              "});",
                              "",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.visibility).to.eq(\"Public\");",
                              "});",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1d4c29a8-bc32-49f0-9c1e-38e484b5eb3b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"Public\",\r\n  \"entityId\": \"{{dealId}}\",\r\n  \"text\" : \"im here just to check the comments\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1bfb5f48-d543-4fe1-bcbb-9c395f438f4a",
                            "exec": [
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.value[0].text).to.exist;",
                              "});",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4c16af99-ead3-4f24-8842-9f4783744696",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/comments(Id={{commentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "48d05361-1a32-406e-8807-da1df7dc8bb6"
                },
                {
                  "name": "create private comment",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d57c5eee-183e-41e8-8bd2-d48502977e12",
                            "exec": [
                              "// Test 1",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "var responseJson = JSON.parse(responseBody);",
                              "var a=[];",
                              "var list = (responseJson.value).length;",
                              "for (var i = 0; i < list; i++) ",
                              "                  {",
                              "                   var counter = responseJson.value[i];",
                              "                    if (counter.isin !== null){",
                              "                        a.push(counter)",
                              "                    }",
                              "                    ",
                              "                   }",
                              "",
                              " for(var i =0;  i < a.length; i++){",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)",
                              "if (companyWithIsin && companyWithIsin.name) {",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");",
                              "return;",
                              "}",
                              "     console.log(companyWithIsin)",
                              "         ",
                              "         ",
                              "        ",
                              "         console.log(a[i])",
                              "    }",
                              "  ",
                              "",
                              "",
                              "function getRandomInt(max) {",
                              "  return Math.floor(Math.random() * max);",
                              "}",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "var valueSize = Object.keys(jsonData.value).length",
                              "var valueId = getRandomInt(valueSize-1);",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length",
                              "var companyId = getRandomInt(companySize);",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length",
                              "var statusId = getRandomInt(statusSize-1);",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length",
                              "var restrictionId = getRandomInt(restrictionSize);",
                              "var bool = [true, false];",
                              "var isUrgent = bool[getRandomInt(2)];",
                              "var isDraft = bool[getRandomInt(2)];",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]",
                              "",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);",
                              "postman.setEnvironmentVariable(\"typeId\",",
                              "     jsonData.value[valueId].companies[companyId]",
                              "     ? jsonData.value[valueId].companies[companyId].typeId ",
                              "     : null);",
                              "",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");",
                              "",
                              "",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",",
                              "     jsonData.value[valueId].restrictions[restrictionId] ",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction ",
                              "     : null);",
                              "",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "19106440-2730-4d23-860c-43b0f063b978",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "47fbda91-9376-4fe3-9910-1a5ef99ed1c3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "572dd6d4-1fc5-4832-9d81-76cfb3f46301",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "55da1439-d3b3-4bcd-887d-f58aa95d8f5b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"recordType\": \"Deal\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \r\n                        \"userId\": \"{{memberId}}\",\r\n                        \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cde5b75a-ce73-4b5f-8386-9bb5d6b28670",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"commentId\", jsonData.id);",
                              "",
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.text).to.exist;",
                              "});",
                              "",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.visibility).to.eq(\"Public\");",
                              "});",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a02e59aa-9e1a-48f1-8525-b9c070ca5040",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"Private\",\r\n  \"entityId\": \"{{dealId}}\",\r\n  \"text\" : \"im here just to check the comments\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5e511173-1470-4163-8da0-ba6554d38d15",
                            "exec": [
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.value[0].text).to.exist;",
                              "});",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "bbf78555-faf7-4cda-acd4-5ccf162ef1aa",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/comments(Id={{commentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "7f7785bd-68ad-4aa1-a82d-7b8d8a18452e"
                },
                {
                  "name": "send empty comment",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a2c60e7f-b079-44e0-b459-aac47e3371db",
                            "exec": [
                              "",
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e3c19d3a-0afe-4002-9c27-5146a029b018",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"Private\",\r\n  \"entityId\": \"{{dealId}}\",\r\n  \"text\" : \"\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments"
                      },
                      "response": []
                    }
                  ],
                  "id": "c06c5fbb-093d-46a7-8ad4-2a5f45ee6572"
                }
              ],
              "id": "c877be37-4f93-4e34-b09c-9198f462bf1e"
            },
            {
              "name": "update",
              "item": [
                {
                  "name": "change comments text",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "96f53959-4b07-4e1a-a6d5-fc14377ba2c8",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"visibility\", jsonData.value[0].visibility);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c9eb5bc9-eb29-4eb2-b003-a8804541fcbe",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/comments?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "comments"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4f07797f-7fe8-43c0-b62b-1ae5c4f643f6",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"commentId\", jsonData.id);",
                              "",
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.text).to.exist;",
                              "});",
                              "",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.visibility).to.eq(\"Public\");",
                              "});",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "15190284-86df-45fa-a4d8-00b1e2897353",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"Public\",\r\n  \"entityId\": \"{{entityId}}\",\r\n  \"text\" : \"im here just to check the comments\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments"
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "64b14c8d-496b-4994-b49e-45231919d884",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8a782ef7-1311-4e63-8be9-384d5568b8fd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"visibility\": \"Public\",\r\n  \"text\" : \"wowww did you just comment thatt?\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments(Id={{commentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "eb52f3e0-c2ea-4d8b-b5f6-d7363796498a"
                },
                {
                  "name": "make comment private",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c7dcb096-c9eb-4d7f-ab2a-5f7e3c70cd38",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"visibility\", jsonData.value[0].visibility);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4ad2753e-ea87-4ae9-9757-e9ae81794859",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/comments?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "comments"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2613a0ae-09c5-47e5-8471-33a1db0992f0",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"commentId\", jsonData.id);",
                              "",
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.text).to.exist;",
                              "});",
                              "",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.visibility).to.eq(\"Public\");",
                              "});",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3fb0a6cc-eeed-4e73-94df-2b51d55829ae",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"Public\",\r\n  \"entityId\": \"{{entityId}}\",\r\n  \"text\" : \"im here just to check the comments\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments"
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "793124a0-03cf-4c1b-8049-c3fc68c56f03",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f7d92a87-b434-4e0c-883f-d04abfb9e8de",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"visibility\": \"Private\",\r\n  \"text\" : \"wowww did you just comment thatt?\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments(Id={{commentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "96338aca-dcfd-4f5b-b4a9-330db4ae17af",
                            "exec": [
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "pm.test(\"The comment is private\", function(){",
                              "pm.expect(jsonData.value[0].visibility).to.eq(\"Private\");",
                              "});",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "77f5c9c2-af2a-4fd8-b2e5-2aac5ab18c92",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/comments(Id={{commentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "0e7e0351-6a6a-4cd0-8069-a3972ac273f7"
                },
                {
                  "name": "make comment public",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b5cb9191-a854-4cf6-ae9a-2cc627908e79",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"visibility\", jsonData.value[0].visibility);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2ad5086b-4e0a-4272-a15e-4e472817ba28",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/comments?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "comments"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "dec4ab4c-98f0-47ab-807f-de0137bc0c93",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"commentId\", jsonData.id);",
                              "",
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.text).to.exist;",
                              "});",
                              "",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.visibility).to.eq(\"Public\");",
                              "});",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "dde24b48-dfbd-4f30-8498-c8f843cb1728",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"Private\",\r\n  \"entityId\": \"{{entityId}}\",\r\n  \"text\" : \"im here just to check the comments\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments"
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ab42bf5e-855b-4477-830c-71c7591bea4b",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e89dbc30-092f-43d3-a071-1f8efaf5b9ea",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"visibility\": \"Public\",\r\n  \"text\" : \"wowww did you just comment thatt?\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments(Id={{commentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "98fac20f-18dd-40d7-8d6c-5f91ccb18718",
                            "exec": [
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "pm.test(\"The comment is public\", function(){",
                              "pm.expect(jsonData.value[0].visibility).to.eq(\"Public\");",
                              "});",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "21675437-c234-47fa-80ed-ea2b12a8bf93",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/comments(Id={{commentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "f9146730-ca11-4e89-88c7-5b029a6f7a8d"
                },
                {
                  "name": "update the comment without text",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "74d12f63-9f70-4ee0-b2e7-230a008d48b0",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"visibility\", jsonData.value[0].visibility);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5953b10f-edec-4cba-9433-ab7eec74059d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/comments?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "comments"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "13907287-1f3c-4795-a14e-e8638326da24",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"commentId\", jsonData.id);",
                              "",
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.text).to.exist;",
                              "});",
                              "",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.visibility).to.eq(\"Public\");",
                              "});",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "419d5e15-cce6-4ca4-9e9a-61a18e85f2bb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"Private\",\r\n  \"entityId\": \"{{entityId}}\",\r\n  \"text\" : \"im here just to check the comments\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments"
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f3d22637-2e5d-4772-9a21-97c6eca8eed3",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3e36867d-09d8-4401-9218-fcc6cd96d242",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"visibility\": \"Public\",\r\n  \"text\" : \"\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments(Id={{commentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "3bb6ed79-73dd-4d5a-9ab0-003a44685ac3"
                }
              ],
              "id": "ccdf12d8-f68b-4b75-8561-6b1a8b7b08cb"
            },
            {
              "name": "delete",
              "item": [
                {
                  "name": "delete existing comment",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "af62982f-d32c-4383-9694-67cd45b28c20",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"visibility\", jsonData.value[0].visibility);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4c65ada5-8257-4774-86f4-5e204dbf0bbf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/comments?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "comments"
                          ],
                          "query": [
                            {
                              "key": "$filter",
                              "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "606f1be8-b8ab-4a49-83b7-5db2a96f9a57",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"commentId\", jsonData.id);",
                              "",
                              " var jsonData =pm.response.json();",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.text).to.exist;",
                              "});",
                              "",
                              "pm.test(\"There is at least one comment\", function(){",
                              "pm.expect(jsonData.visibility).to.eq(\"Public\");",
                              "});",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "aa77036e-2a3d-4ca8-927c-3b711c22d102",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"Public\",\r\n  \"entityId\": \"{{entityId}}\",\r\n  \"text\" : \"im here just to check the comments\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/comments"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5a5a80b4-32b5-41b6-be60-e95e307cafd6",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8e037c53-9bc2-48b5-bf3c-d7479d18e45a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/comments(Id={{commentId}},EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "b025b5a5-8eca-4880-8802-c3b307838dfc"
                },
                {
                  "name": "delete non existing comment",
                  "item": [
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b3389c11-4648-44c1-a3d3-aa390dc76bcf",
                            "exec": [
                              "pm.test(\"Status code is 404\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "00f674d2-f412-450f-b916-d0ac076e4bb1",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/comments(Id=2345678,EntityId={{entityId}})"
                      },
                      "response": []
                    }
                  ],
                  "id": "070eb33d-c330-47d9-afbd-5c82a0ee7c6a"
                }
              ],
              "id": "98a2d6c6-bb41-4942-a7b1-b45d2d316823"
            }
          ],
          "id": "23d6b687-a81c-4578-9bcf-b116721888ea"
        },
        {
          "name": "Document Types",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "check if the doc types  have ID",
                  "item": [
                    {
                      "name": "List all document types",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2f694563-2703-4a75-b89d-8b6a798c87d5",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "\r",
                              "\r",
                              "pm.test(\"The document type has an ID\", function () {\r",
                              "  pm.expect(pm.response.json().value[0].id).to.exist\r",
                              "});\r",
                              "pm.test(\"The document type has an ID\", function () {\r",
                              "  pm.expect(pm.response.json().value[1].id).to.exist\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "f88a9071-cf9b-401e-b2e2-92a9e4457b1f",
                            "exec": [
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "864eca57-54c5-49f2-a77d-2fa550c0b470",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "39e9d356-d17c-4dd4-88e0-6339028d0423"
                },
                {
                  "name": "check if there are more than one doc type",
                  "item": [
                    {
                      "name": "List all doc types",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "686ebe9d-e2b2-4fcf-a4da-d09a7bcc6661",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"documentName\", jsonData.value[valueId].name);\r",
                              "\r",
                              "pm.test(\"Response property matches environment variable\", function () {\r",
                              "  pm.expect(pm.response.json().value[valueId].name).to.eql(pm.environment.get(\"documentName\"));\r",
                              "});\r",
                              "\r",
                              "pm.test(\"There is more than one doc type\", function () {\r",
                              "  pm.expect(pm.response.json().value[0].id).to.exist\r",
                              "});\r",
                              "pm.test(\"There is more than one doc type\", function () {\r",
                              "  pm.expect(pm.response.json().value[1].id).to.exist\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1bced317-51a9-442b-887b-3821b2ced5e6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "736a0bbf-c887-4757-b195-5a6998de080a"
                }
              ],
              "id": "ca64e923-0876-4b81-9e96-d94c83b12fc2"
            },
            {
              "name": "getById",
              "item": [
                {
                  "name": "list the newly created doc type",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b1a8c59a-338e-4596-9010-9b539a228ec1",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.value[0].id);\r",
                              "\r",
                              "pm.test(\"The is a custom document type\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.isSystem).to.eq(false);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"The deal status is Active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Active');\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "pm.test(\"There is contact under the tent name in the response\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.createdByUserId).to.exist;\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8f15d649-a68b-4e99-a286-e7eba408408d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API Active Document type \",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7dcfbaa7-6f93-4a3a-b885-633deec5e465",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "pm.test(\"The doc type ID from the creation matched the listed one\", function () {\r",
                              "  pm.expect(pm.response.json().id).to.eql(pm.environment.get(\"documentTypeId\"));\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ac89cc4e-92d1-4517-9ffc-b308f7c6db83",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types/{{documentTypeId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "4800e504-e117-4da3-9309-4bd22222b7b7"
                },
                {
                  "name": "list the non existent doc type",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a416d996-5e47-4889-b156-f290a9708097",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 404\", function () {\r",
                              "    pm.response.to.have.status(404);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ad603647-5ca7-487e-a7ba-34b2ccc717d7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types/(12345678)"
                      },
                      "response": []
                    }
                  ],
                  "id": "5dfb4ed7-3da4-4ee3-b75e-51afec6276b9"
                }
              ],
              "id": "5a8fdea8-c35c-42d0-b232-b3657abe8784"
            },
            {
              "name": "create",
              "item": [
                {
                  "name": "create a custom document type",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "67f99f71-b841-4960-a858-7b72e3d295af",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.id);\r",
                              "\r",
                              "pm.test(\"The is a custom document type\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.isSystem).to.eq(false);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"The deal status is Active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Active');\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "pm.test(\"There is contact under the tent name in the response\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.createdByUserId).to.exist;\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "064e061b-8f1a-4b39-89e8-5f8dbb8d6138",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API Active Document type \",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "bf892a56-c075-448c-95e2-9361c3e26155"
                },
                {
                  "name": "create a default document type",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c87ff6ff-f178-4634-b1a5-1b33d446e023",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1d9dae76-878d-421f-8302-1c1ff75b5d39",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API Active Document type \",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": true\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "99defa55-eee8-447e-8ab6-03f21d7d8328"
                },
                {
                  "name": "create active document type",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c0f3bba1-e99b-462a-a70c-5df510b4caa9",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "pm.test(\"The deal status is Active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Active');\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7db86728-049c-4d7f-bb0d-644f96965ca7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API Active Document  \",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "65ec0dde-b8ec-43e7-ad54-07752e541735"
                },
                {
                  "name": "create inactive document type",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d34d2000-267d-4129-9281-7ada21cb188f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "pm.test(\"The deal status is not active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Inactive');\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3371507d-8c2c-4346-806b-21d5ef25b0ab",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API Active Document type \",\r\n    \"status\": \"Inactive\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "40b4b504-7d5c-4b49-aba6-950ecef91723"
                },
                {
                  "name": "create document type without status",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "aa5c419a-340a-4cb9-a0de-bf8a6dc3c88f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Active');\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "348df625-97b7-4ea5-83ec-3db08fc8a1c5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API Active Document type \",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "f97abd29-880c-487e-8be8-7a7566a0946b"
                },
                {
                  "name": "create document type with no name",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8926f6c6-619c-4cbd-b8e2-5e2468d9a6cd",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9bbceac5-f2cf-4357-84b4-5b9baf7423c2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \r\n    \"status\": \"Inactive\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "e8a12e04-24b0-46e2-80b2-961a6b4b6551"
                }
              ],
              "id": "2b9e32c9-4944-4998-ad73-ecd4d3a2fe07"
            },
            {
              "name": "delete",
              "item": [
                {
                  "name": "delete default document type",
                  "item": [
                    {
                      "name": "list the default categories",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3a37f836-4c33-46ef-95c7-6efa959d1f15",
                            "exec": [
                              "var responseJson = JSON.parse(responseBody);\r",
                              "\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isSystem === true){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              "\r",
                              " \r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "        \r",
                              "         postman.setEnvironmentVariable(\"defaultType\", a[i].id);\r",
                              "         console.log(a[i])\r",
                              "    }"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c2a99668-83f0-46c1-a6f9-246874dff17a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "677d8fad-e26e-461b-80f4-7fcfb744ee4d",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4913fd7d-4526-4db7-b325-d98308df833a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types/{{defaultType}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "74327290-ad6d-4d63-9fac-5912eae2a050"
                },
                {
                  "name": "delete non existing document type",
                  "item": [
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7c6c14fe-c5e3-4ca4-a4d0-ae3af064885f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d5eb1912-8ba6-46fb-a831-a07be3a67560",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types/(123456)"
                      },
                      "response": []
                    }
                  ],
                  "id": "3661ecd9-7ea3-47b6-a555-667f533278b5"
                }
              ],
              "id": "84773943-2225-4460-8703-95eeaa5cdb8b"
            },
            {
              "name": "patch",
              "item": [
                {
                  "name": "deactivate a document type",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8cc4c2b9-5fbe-4bd3-b154-6ac4ca514c74",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.id);\r",
                              "\r",
                              "pm.test(\"The deal status is Active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Active');\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "02afff7c-2541-46fd-840c-783370ec589e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API Active Document 1oct \",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript",
                            "id": "4ea5d16c-6aef-480b-9082-1adeb24b6dd2"
                          }
                        }
                      ],
                      "id": "089d24b3-dfac-42b0-999d-16b933dc6cde",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"CompanyType Patched\",\r\n    \"status\": \"Inactive\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types/{{documentTypeId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "64f3ccf9-813f-40c6-aefb-c0ec9fb9e4af",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The status isnt active\", function () {\r",
                              "  pm.expect(pm.response.json().status).to.eql('Inactive');\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "efe3d31d-bc9c-46f0-953e-cf56c8cb2968",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types/{{documentTypeId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "b03f162d-4527-4877-9827-9eea37631370"
                },
                {
                  "name": "activate a document type",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "43e26573-7fab-489f-9295-b0294aa60c93",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.id);\r",
                              "\r",
                              "pm.test(\"The deal status is Active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Active');\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4169a726-8948-4832-a7ac-7c4dccb8bc12",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API Active Document 1oct \",\r\n    \"status\": \"Inactive\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d79fc31f-8ba7-479a-a2c2-1dccf62326a1",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1a1a5d8c-ab9b-4fc6-a050-7cb3d6ff53d6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"CompanyType Patched\",\r\n    \"status\": \"Active\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types/{{documentTypeId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "240e29ce-d2d4-4680-8bb8-aab08ef66080",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The status is active\", function () {\r",
                              "  pm.expect(pm.response.json().status).to.eql('Active');\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2b61963b-fa9f-4a14-abde-a6367815dfbf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types/{{documentTypeId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "0067d7a9-12d9-40ae-85be-4d09e8ce1bf7"
                },
                {
                  "name": "update default document type",
                  "item": [
                    {
                      "name": "List all deal categories Copy 2",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e06356ee-86c3-4bdf-9bc4-59f028ffe7d6",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isSystem === true){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              "\r",
                              " \r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "        \r",
                              "         postman.setEnvironmentVariable(\"defaultDocType\", a[i].id);\r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7e9847d2-1158-435d-9dcc-038b103f3d79",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5de8aa69-abc5-406c-8bc7-68919c6f5221",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 400\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(400);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8771d132-96fc-443f-a04e-0b146cf3a2ad",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"patched\",\r\n    \"status\": \"Active\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types/{{defaultDocType}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "11d8952c-4d4a-4651-a964-ff2de48231e9",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The status is active\", function () {\r",
                              "  pm.expect(pm.response.json().status).to.eql('Active');\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "fded01b3-3581-435f-8074-5e3c7c6d5ab5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types/{{defaultDocType}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "bb4cae9c-7922-41f2-a104-c7849d0abc46"
                },
                {
                  "name": "update non existent document type",
                  "item": [
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f2526055-9dc6-4261-bee6-a8c70da52b09",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d97268d0-bd1d-4afc-aa17-5c84f5cc561f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"CompanyType Patched\",\r\n    \"status\": \"Active\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types/(12345)"
                      },
                      "response": []
                    }
                  ],
                  "id": "419bd742-9d3d-4f3b-9c65-e6a752b388f3"
                },
                {
                  "name": "update document types name only",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5852c713-a8ac-4aa2-8654-af852b15f457",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"documentTypeId\", jsonData.id);\r",
                              "\r",
                              "pm.test(\"The deal status is Active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Active');\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "26d2612e-3f81-4e3e-970d-aaadb24b29b4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API Active Document 1oct \",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types"
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b9e9c0f0-7ab5-4dd3-838e-a8cf090fa6ff",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "063c6fd8-b923-4246-824b-55b4ef5ef419",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"CompanyType Patched\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/document-types/{{documentTypeId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "807afd92-b01b-4faa-9ab6-4c1f0d4f791d",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The status is active\", function () {\r",
                              "  pm.expect(pm.response.json().name).to.eql('CompanyType Patched');\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5eafca6f-8b28-4695-95d8-7e246827b467",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/document-types/{{documentTypeId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "ccd573c4-d04c-479c-9560-addc96c44b72"
                }
              ],
              "id": "68a9f577-17b8-46bd-8f33-990b7225ebe1"
            }
          ],
          "id": "76c5645a-72b1-4215-9131-68c4a2ffffc6"
        },
        {
          "name": "Deal Categories",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "check if the deal category has ID",
                  "item": [
                    {
                      "name": "List all deal categories",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d32295cc-bad8-4a67-bb85-d045aabbb44f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].id);\r",
                              "\r",
                              "pm.test(\"Response property matches environment variable\", function () {\r",
                              "  pm.expect(pm.response.json().value[valueId].id).to.eql(pm.environment.get(\"categoryId\"));\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "e5e0638a-a03e-4b6f-8656-fa17e6afe8ad",
                            "exec": [
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2c01c0b4-9daf-4f37-8a04-715f8e39056c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    }
                  ],
                  "id": "1105f20f-da50-44ae-8c9a-67c8480a64f3"
                },
                {
                  "name": "check if the deal categories have clientIds",
                  "item": [
                    {
                      "name": "List all deal categories",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "87ece825-ae9e-45ab-bf51-da51fc917ce2",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"categoryName\", jsonData.value[valueId].name);\r",
                              "\r",
                              "pm.test(\"Response property matches environment variable\", function () {\r",
                              "  pm.expect(pm.response.json().value[valueId].name).to.eql(pm.environment.get(\"categoryName\"));\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "837ec39a-26b6-47b8-933c-53241e0374fd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    }
                  ],
                  "id": "79390a6d-76f8-400c-99df-97ba403aacc3"
                }
              ],
              "id": "0df51339-94af-4b02-a58c-40d8e04e6fbe"
            },
            {
              "name": "getById",
              "item": [
                {
                  "name": "list the newly created deal category",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "eb69b8e2-e7a6-46e7-8dd7-dc5c1cfb99bf",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3cd75c52-c217-4ca4-a48a-92242789e701",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"name\": \"API deal\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    },
                    {
                      "name": "list the newly created deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2953ae82-9a68-48ca-8db5-d4da29c50655",
                            "exec": [
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "",
                              "pm.test(\"Creation date is today\", function(){",
                              "    var jsonData = pm.response.json();",
                              "",
                              "    var currTime = new Date();",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');",
                              "    var yyyy = currTime.getFullYear();",
                              "    var hh = currTime.getHours() - 3;",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";",
                              "",
                              "    var cretedTimestamp = jsonData.createdTimestamp;",
                              "    ",
                              "    pm.expect(cretedTimestamp).to.include(currTime);",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "78be05a0-edc1-41b9-bbf3-70332548ae5c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "32c4cfaa-7807-4721-96af-1701d1c4ca79"
                },
                {
                  "name": "list non existing deal category Copy",
                  "item": [
                    {
                      "name": "list the newly created deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "390d7c37-700d-48f9-aa98-3a35d54a3f0a",
                            "exec": [
                              "pm.test(\"Status code is 404\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c477defc-9247-41e6-ac48-96f28e3d6086",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/(999999999)"
                      },
                      "response": []
                    }
                  ],
                  "id": "69a91af0-d74f-4001-83ea-19b2341ead81"
                }
              ],
              "id": "8fd8c266-1fae-4b48-b832-c35a22786e1b"
            },
            {
              "name": "create",
              "item": [
                {
                  "name": "create deal category with name only",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "88c5c08d-c32c-43fc-be7e-3a0b9ead0769",
                            "exec": [
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "",
                              "postman.setEnvironmentVariable(\"categoryName\", jsonData.name);",
                              "console.log(jsonData.name)",
                              "",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "36c46f3d-882b-4148-89bd-fa6da8283f4f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"name\": \"API deal\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    },
                    {
                      "name": "list the new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2c92dffd-a7d9-47e2-ad97-c42820519271",
                            "exec": [
                              "",
                              "",
                              "// Test 1",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "// Test 2",
                              "pm.test(\"Response property matches environment variable\", function () {",
                              "  pm.expect(pm.response.json().name).to.eql(pm.environment.get(\"categoryName\"));",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "b3c5961d-2cdf-4ab2-957a-b39a0dba62ab",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "ace3f974-b700-494c-b978-cfd64cb3b526"
                },
                {
                  "name": "create deal category with inactive status",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "73a685eb-dd93-4886-bad3-d861a563d742",
                            "exec": [
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "",
                              "postman.setEnvironmentVariable(\"categoryStatus\", jsonData.status);",
                              "console.log(jsonData.status)",
                              "",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a79591c0-f6da-455e-b097-3fec88c4fd0a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"name\": \"Inactive deal\",\n            \"status\": \"Inactive\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    },
                    {
                      "name": "list the new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "9c4a5e43-52f1-4e21-8b6e-b33cbda841e0",
                            "exec": [
                              "",
                              "pm.test(\"Response property matches environment variable\", function () {",
                              "  pm.expect(pm.response.json().status).to.eql(pm.environment.get(\"categoryStatus\"));",
                              "});",
                              "",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f865aa7a-7591-4547-8e89-f6447db092f8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "6c258e77-f764-4454-86fd-0a17515a6745"
                },
                {
                  "name": "create default deal category",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "823962e9-3768-4304-a7b7-20f5863d1e9b",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a9b751b2-a7a0-4f6b-81a4-a632d6372cac",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"name\": \"API deal\",\n            \"isSystem\": true\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    }
                  ],
                  "id": "1516b03e-c47a-4493-9fbb-1c5d1617f61e"
                },
                {
                  "name": "(N) create deal category with empty name",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4a6b3dbc-836c-408b-bd9a-388be8917ae7",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0de9c5b4-1c0f-44d9-9fc2-65c4c664b3fc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"name\": \"\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    }
                  ],
                  "id": "0b2c4bab-d3b6-48f8-884e-76537d416842"
                },
                {
                  "name": "(N) create deal category with status only",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "074469ab-2a51-44da-85e0-78d0af3d0d99",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c012d176-a15d-42ca-bc48-7563e8e89096",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"status\": \"Active\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    }
                  ],
                  "id": "4e291328-58c5-4e48-a0b8-bb5d82440eea"
                },
                {
                  "name": "(N) business users create deal category",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e842d2af-f067-476c-bfb5-0eab05076c1d",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 403\", function () {",
                              "    pm.response.to.have.status(403);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "59867a48-fca5-4e2a-ab78-3fcbadc4f301",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"status\": \"Active\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    }
                  ],
                  "id": "23280590-7a10-4b79-befb-55a60bde2511",
                  "auth": {
                    "type": "bearer",
                    "bearer": {
                      "token": "{{businessUserToken}}"
                    }
                  },
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "e8169dea-86b7-4eb8-87e2-8f9fc983ac2c",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "498ed629-57af-4bbb-b446-8d8439cb9f1f",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                {
                  "name": "(N) compliance users create deal category Copy",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7d06cc27-323d-4cce-a843-0058419dd1b8",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 403\", function () {",
                              "    pm.response.to.have.status(403);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9695bf79-c6eb-4a52-903f-d3139e9ac019",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"status\": \"Active\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    }
                  ],
                  "id": "f91de9f2-6e64-41d2-a238-c0003468bb72"
                }
              ],
              "id": "be73e31d-fc87-4cd2-8902-1f78a31dcdc4"
            },
            {
              "name": "delete",
              "item": [
                {
                  "name": "delete existing deal category",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "85382e0f-1e68-4d4c-83f4-bdfe43124532",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d4dc3a34-f9a9-4035-8cae-4b0f93859cc8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"name\": \"API deal\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92e90631-88f9-47fa-ba31-4feafe81a4bf",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "816349e9-c31b-4349-b572-232fa532e860",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "check if the category is delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a10a4902-70a6-4abb-96f5-bfdeed319611",
                            "exec": [
                              "pm.test(\"Status code is 404\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "12c994a9-805f-40be-8f70-30e02ecf8bd7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "9ad207c6-bd56-4046-9b5b-df92ca5106cc"
                },
                {
                  "name": "(N)delete default deal category",
                  "item": [
                    {
                      "name": "list default categories",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2b1d13df-5550-4ef2-9c7d-a776e9c4bf2c",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "var responseJson = JSON.parse(responseBody);",
                              "",
                              "var a=[];",
                              "var list = (responseJson.value).length;",
                              "for (var i = 0; i < list; i++) ",
                              "                  {",
                              "                   var counter = responseJson.value[i];",
                              "                    if (counter.isSystem === true){",
                              "                        a.push(counter)",
                              "                    }",
                              "                    ",
                              "                   }",
                              "",
                              "",
                              " ",
                              " for(var i =0;  i < a.length; i++){",
                              "        ",
                              "         postman.setEnvironmentVariable(\"defaultCat\", a[i].id);",
                              "         console.log(a[i])",
                              "    }",
                              "  ",
                              "// var dealCategoryDefault = jsonData.value[0].find(function(dealCategoryDefault) {",
                              "//     return dealCategoryDefault.isSystem === true;",
                              "  ",
                              "// });",
                              "",
                              "//pm.environment.set(\"dealCategoryDefault\", dealCategoryDefault.isSystem);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e873fa53-1d4a-40a9-a8a6-2bc6f5c6e066",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fef987d2-5163-4262-812e-b411969c475d",
                            "exec": [
                              "pm.test(\"Status code is 403\", function () {",
                              "    pm.response.to.have.status(403);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "48305e4b-7186-485f-929a-5a4e6a491b5a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{defaultCat}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "499070b6-e3d4-4303-b1e9-7dc3b1763a8a"
                },
                {
                  "name": "(N) delete  non existing deal category",
                  "item": [
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b666a35b-418d-4d7b-8039-973e16731128",
                            "exec": [
                              "pm.test(\"Status code is 404\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e54af6f8-8883-41b0-b962-6045b35d5f72",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/(999999)"
                      },
                      "response": []
                    }
                  ],
                  "id": "a3285ac8-e8d3-46fa-bbf3-0c8edaae8061"
                }
              ],
              "id": "e38a73b7-9a5c-4453-95b6-567cd0056c63"
            },
            {
              "name": "patch",
              "item": [
                {
                  "name": "update existing deal category",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "49f51885-8068-4cd4-8104-b2f08aeac8ba",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});",
                              "",
                              "",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e39720ac-363f-4fb7-a57c-19a0238c8d45",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"name\": \"api deal category\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    },
                    {
                      "name": "Update existing deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "99f051ce-6579-4bcf-88cd-3df396451332",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});",
                              "",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "88c9d798-1800-4c38-8dad-529bdcff13da",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"API patched\",\n    \"status\": \"Inactive\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "list the new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c55a3b60-aa16-4be9-84c2-09ece480600a",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"categoryName\", jsonData.name);",
                              "console.log(jsonData.name)",
                              "",
                              "pm.test(\"Response property matches environment variable\", function () {",
                              "  pm.expect(pm.response.json().name).to.eql(pm.environment.get(\"categoryName\"));",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e91c101d-56d5-41a8-a1af-ba2468f6b826",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "2ecbc870-482a-46c1-bf30-d600ad544ea8"
                },
                {
                  "name": "deactivate a deal category",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a9a03a47-b490-46ab-accb-26bf30db1999",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e437063c-8c17-4a75-984c-848348407b72",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"name\": \"api deal category\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    },
                    {
                      "name": "update the deal category status only",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d49fe5b3-9920-4eae-be51-3e9b5a21b601",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a5a74241-f58b-4d1c-92f9-70e5d34b6192",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \n    \"status\": \"Inactive\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "list the new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4ca2506c-5fa8-453f-9dcf-3f0601a0cb3f",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e5b0493e-4a50-4022-9a60-4a31adc3d99e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "100ba586-d354-4c09-ae27-cefd7b9dd306"
                },
                {
                  "name": "activate a deal category Copy",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "60aaffed-905e-48fc-a46e-2321acce43b1",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "20b2ae2b-4754-467e-8a65-c8f58b6b01d0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"name\": \"api deal category\",\n            \"status\": \"Inactive\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    },
                    {
                      "name": "update the deal category status only",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1f12d6e7-1419-4e63-b56d-4d8b481de5b9",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a2ab88eb-e47d-482d-a820-b58fcd9079a9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \n    \"status\": \"Active\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "list the new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e0b0f070-4c0e-4b41-b4b5-f1b37a73f21f",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "fb664f23-b942-4b68-8c74-75dc380da007",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "9bc1384c-3959-4261-8416-0090e933bb13"
                },
                {
                  "name": "update the deal category name only",
                  "item": [
                    {
                      "name": "create deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2986d69b-d8f7-4337-ae5e-04983b2cebbd",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"dealCategoryId\", jsonData.id);",
                              "",
                              "pm.test(\"Status code is 201\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "75cb7df3-4c1a-4446-b460-382264840e62",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": " {\n            \n            \"name\": \"api deal category\"\n        }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    },
                    {
                      "name": "update the deal category status only",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6614da49-c9a5-4381-bf14-c6ef2ecb626f",
                            "exec": [
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4b93d9f4-4157-40ee-a22a-2867417f9f2b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \n    \"name\": \"Updated\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "list the new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "01b3447f-4f9d-4b4b-b2a2-1a0d4cb424c1",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "552a287e-8cc5-451b-be74-db3bf81fd5e7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{dealCategoryId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "4bd2d5f1-ee6d-4712-b108-f7176f20127e"
                },
                {
                  "name": "(N) update non existing deal category",
                  "item": [
                    {
                      "name": "Update existing deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d5dddc5c-a1d2-4a78-a230-1ef3b828d835",
                            "exec": [
                              "pm.test(\"Status code is 404\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9bce17f5-91ad-4cb4-af19-a52ec5b9616b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"API patched\",\n    \"status\": \"Inactive\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/(99999999)"
                      },
                      "response": []
                    }
                  ],
                  "id": "a83fe86a-46ac-49eb-8325-206ca3919ce2"
                },
                {
                  "name": "(N) update default deal category",
                  "item": [
                    {
                      "name": "List all deal categories Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f0c24a3a-c03a-4751-a680-c697f4d339f7",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isSystem === true){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              "\r",
                              " \r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "        \r",
                              "         postman.setEnvironmentVariable(\"defaultDealCat\", a[i].id);\r",
                              "         console.log(a[i])\r",
                              "    }"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "25871e30-1b85-40e4-a295-a5bbb3180940",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/deal-categories"
                      },
                      "response": []
                    },
                    {
                      "name": "Update existing deal category",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f5cf838d-503f-4f94-9d3d-9ad2ebce8712",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "87b431bd-36c1-47cb-a8a0-c73107ecf7be",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"patched\",\n    \"status\": \"Inactive\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deal-categories/{{defaultDealCat}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "10c2de3d-bf29-4ac6-965e-6f0d48d4a642"
                }
              ],
              "id": "f5765169-8326-480d-9aa8-94ee53cfad6c"
            },
            {
              "name": "extend the deals for deal categories",
              "id": "019d48c5-36bc-460c-8c6c-d01b14364678",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/deal-categories?$expand=Deals",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "deal-categories"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "Deals"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "4050434d-02de-4eac-ab28-8212050fdd90"
        },
        {
          "name": "CompanyType",
          "item": [
            {
              "name": "getById",
              "item": [
                {
                  "name": "list the newly created company type",
                  "item": [
                    {
                      "name": "Create a custom company type Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "43054448-3e74-4d8f-acde-43b42cfdc8a6",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"companyTypeId\", jsonData.id);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "08bae4a4-2ce2-4c2c-8fc9-57635f355b5e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"ControlRoom CompanyType API \",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    },
                    {
                      "name": "List specific doc type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "52376faa-a206-4c56-8129-bcf6d33bc660",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2bdc51fc-bef8-4a23-8ca5-1ebb42ca9710",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/company-types/{{companyTypeId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "912c03e1-fb5c-49ab-96eb-2662e5f335cf"
                },
                {
                  "name": "list non existing company type",
                  "item": [
                    {
                      "name": "List specific company type Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cf96ead1-e5c3-42ef-a08d-c7b768a31d8f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 404\", function () {\r",
                              "    pm.response.to.have.status(404);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ebfc83f4-0502-423e-bd5c-d2a513cd9b09",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/company-types/(123456789)"
                      },
                      "response": []
                    }
                  ],
                  "id": "fcf33e29-7fcc-417b-8c4f-53d6a705e7d8"
                }
              ],
              "id": "8510566e-e214-4d6b-ab20-b131644fd91b"
            },
            {
              "name": "getAll",
              "item": [
                {
                  "name": "check if the doc type has an ID",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "75cd4128-816f-4991-9481-40ea05086a27",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "var jsonData = JSON.parse(responseBody);",
                              "postman.setEnvironmentVariable(\"docId\", jsonData.value[0].id);",
                              "",
                              "pm.test(\"Response property matches environment variable\", function () {",
                              "  pm.expect(pm.response.json().value[0].id).to.eql(pm.environment.get(\"docId\"));",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e5af85c0-1bf9-4e8e-80d5-e9aaed87f9fc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "b196c1bd-9945-4732-add9-db14e5a94261"
                }
              ],
              "id": "3f9942a2-7e97-4d95-8ec2-04986e8dfd5c"
            },
            {
              "name": "create",
              "item": [
                {
                  "name": "create active company type",
                  "item": [
                    {
                      "name": "Create active company type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8be1c169-3e9c-4bed-a67f-cd09cfe9aedb",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"companyTypeId\", jsonData.id);\r",
                              "\r",
                              "pm.test(\"The status is Active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Active');\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9bc71a40-41b3-41d6-b50d-18c60e5a35b6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "36ed975e-77bb-4ab0-a482-2a0e76cabdf1"
                },
                {
                  "name": "create inactive company type",
                  "item": [
                    {
                      "name": "Create active company type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10c10958-e2e9-44c9-8ef7-da07f679097b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"companyTypeId\", jsonData.id);\r",
                              "\r",
                              "pm.test(\"The status is active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('active');\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "633fc056-1fb8-4910-a97b-fa9da263f8fb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Inactive\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "eb8a7d86-eaaa-4170-9c00-e4c7da7b25fd"
                },
                {
                  "name": "create default company type",
                  "item": [
                    {
                      "name": "Create company type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b0fe5c31-6bb5-4bb2-9d47-3ba630264ae7",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ddd92e59-e397-415d-a6f7-b8414df03822",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": true\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "80c26246-ef67-4788-bcb7-576cd3b49743"
                },
                {
                  "name": "create custom company type",
                  "item": [
                    {
                      "name": "Create a custom company type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8e378ac3-185b-428f-af35-59deb37b229e",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"companyTypeId\", jsonData.id);\r",
                              "\r",
                              "\r",
                              "\r",
                              "pm.test(\"The type is not System\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.isSystem).to.eq('False');\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "07f3ec16-f3a3-43c0-a8ed-106dbf23e7e2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "f0c4756e-372b-4bca-a3e0-e68f6969a45b"
                },
                {
                  "name": "create company type without name",
                  "item": [
                    {
                      "name": "Create a custom company type Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a041d2cc-18d0-42e7-81fb-29e3d8dfc4cb",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "43862bd6-a533-470d-ba1a-72164c1ba59c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n   \r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "e8da9659-2357-43f0-9e9f-fe62bff5c9d9"
                },
                {
                  "name": "BU creates company type",
                  "item": [
                    {
                      "name": "BU create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "610c95ce-2f72-45be-98a2-1da4f480e78a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 403\", function () {\r",
                              "    pm.response.to.have.status(403);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "321c1bc6-8ec1-4180-92ce-9a16808612b2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{businessUserToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n   \r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "6da9bff4-f3cf-4d2b-825f-b8c1363c6a01"
                },
                {
                  "name": "CU creates company type",
                  "item": [
                    {
                      "name": "CU create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1454d045-8337-471a-b7bb-bdd1de39184a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 403\", function () {\r",
                              "    pm.response.to.have.status(403);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "cb1a7a2c-96f8-4410-9e77-b09bae6141e4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{complianceUserToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n   \r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    }
                  ],
                  "id": "653d80fa-c016-4135-a638-61d1702a0f32"
                }
              ],
              "id": "f6538001-563e-42ab-a73d-54f41c410dfb"
            },
            {
              "name": "delete",
              "item": [
                {
                  "name": "delete custom company type",
                  "item": [
                    {
                      "name": "Create active custom company type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1a6d03bf-ca34-4a29-a3c6-60b0ea02ea46",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"companyTypeId\", jsonData.id);\r",
                              "\r",
                              "pm.test(\"The status is active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('active');\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e5f87aa7-5b2d-47f6-ac98-935be465675e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cc884da9-23df-478c-9e26-2aa6dd8f6c54",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c6137460-ffdf-4880-b412-bce0fa888660",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/company-types/{{companyTypeId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "073dc64a-4bf7-456b-bfe6-e147a51e9668"
                },
                {
                  "name": "delete default company type",
                  "item": [
                    {
                      "name": "list the default categories Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b644a649-8db2-4a35-9c10-8e3c8f671d10",
                            "exec": [
                              "var responseJson = JSON.parse(responseBody);\r",
                              "\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isSystem === true){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              "\r",
                              " \r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "        \r",
                              "         postman.setEnvironmentVariable(\"defaultType\", a[i].id);\r",
                              "         console.log(a[i])\r",
                              "    }"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "763087c8-9908-4353-8e63-2ede29b2733a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f04ea69b-51a4-4ba6-93d7-6dff58270591",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 403 or 404\", function () {\r",
                              "    if (pm.response.code == 403) {\r",
                              "        pm.response.to.have.status(403);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "10ae2a27-7ef4-463b-802f-e08fce4f5289",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/company-types/{{defaultType}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "f9dc4acc-f2a1-4c9d-bdb2-c4ec13e58fe2"
                },
                {
                  "name": "delete non existent company type",
                  "item": [
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7d8d8299-cd9a-4da4-abca-45e66974a32b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 403 or 404\", function () {\r",
                              "    if (pm.response.code == 403) {\r",
                              "        pm.response.to.have.status(403);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c1671037-da54-4daf-937f-b58662a763fb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/company-types/(123456789)"
                      },
                      "response": []
                    }
                  ],
                  "id": "47b7576c-4ae2-4f03-aeb9-bad502ebc8d0"
                }
              ],
              "id": "ded43387-bf3e-4b61-9c36-a8ab9dc29e35"
            },
            {
              "name": "patch",
              "item": [
                {
                  "name": "Activate inactive company type",
                  "item": [
                    {
                      "name": "Create a custom company type Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fdf40c5c-15c8-4b88-8c28-efa40f483508",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"companyTypeId\", jsonData.id);\r",
                              "\r",
                              "pm.test(\"The status is Active\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Active');\r",
                              "});\r",
                              "\r",
                              "pm.test(\"The type is not System\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.isSystem).to.eq('False');\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "b9b967d4-7300-4622-8e09-751e3e609067",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Inactive\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    },
                    {
                      "name": "Update custom company type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "18d8e93f-58ff-484d-9821-512c69b62017",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "pm.test(\"The status is inactive\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Inactive');\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4060fc84-f414-4c26-a0ae-e67a01309520",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"Deactivated Patched\",\r\n    \"status\": \"Active\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types/{{companyTypeId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "be64e2c1-76c8-4839-99cb-c9502c761490"
                },
                {
                  "name": "Deactivate active company type",
                  "item": [
                    {
                      "name": "Create a custom company type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "dbd85301-b6b7-4901-9525-2f4bea8a0fad",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d2b13d41-23db-4373-907d-dee6ba7903e4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"ControlRoom CompanyType\",\r\n    \"status\": \"Inactive\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    },
                    {
                      "name": "Update custom company type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cf3eaf3f-fd62-4320-b145-4283bec8ea48",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "pm.test(\"The status is inactive\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.status).to.eq('Inactive');\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "b6498c3f-1cc6-4eaf-ad3c-7fca8255848f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"Deactivated Patched\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types/{{companyTypeId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "17204001-4ceb-44d7-943e-00c570e7a7a6"
                },
                {
                  "name": "Update non existent company types",
                  "item": [
                    {
                      "name": "Update custom company type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8e40ff05-cbef-4e4a-aaff-bef44345b839",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400 or 404\", function () {\r",
                              "    if (pm.response.code == 400) {\r",
                              "        pm.response.to.have.status(400);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "b21e8933-8ae6-41d6-a1c4-5d663779aad0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"Deactivated Patched\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types/(1234567)"
                      },
                      "response": []
                    }
                  ],
                  "id": "be6caf36-796b-42f6-8b54-b1b471eccf6b"
                },
                {
                  "name": "Update default company type",
                  "item": [
                    {
                      "name": "List all default company types",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a78601cf-d903-4323-931d-c912dc5d6ea3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isSystem === true){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              "\r",
                              " \r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "        \r",
                              "         postman.setEnvironmentVariable(\"defaultCompanyType\", a[i].id);\r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c5275f42-22bc-48ae-8ee4-50fe92599469",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/company-types"
                      },
                      "response": []
                    },
                    {
                      "name": "Update custom company type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10aa91c2-e098-4244-94af-db301fad6461",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 400) {\r",
                              "        pm.response.to.have.status(400);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f9ba1146-e7a8-4e72-b6fd-453b31635b5a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"Deactivated Patched\",\r\n    \"status\": \"Active\",\r\n    \"isSystem\": false\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/company-types/{{defaultCompanyType}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "ee313377-1ca8-4328-b3b6-8b359986d634"
                }
              ],
              "id": "a38492a5-ac33-4d0b-8554-696761e4bf56"
            },
            {
              "name": "List all company types",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "5ccaad08-6bae-485e-bf4b-ffaf811fec72"
                  }
                }
              ],
              "id": "9a53006e-dd94-4f67-9188-df5d8a31ef96",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/company-types"
              },
              "response": []
            },
            {
              "name": "extend the companies for company types",
              "id": "177e7390-be97-46fe-aa40-3dee43c66ab9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/company-types?$expand=Companies",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "company-types"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "Companies"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "d9ca097f-e516-492d-9a74-9fa7d79a221c"
        },
        {
          "name": "Security search",
          "item": [
            {
              "name": "get",
              "item": [
                {
                  "name": "search Admin",
                  "item": [
                    {
                      "name": "security search",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "14b637e6-dc06-449b-93de-a1b6b29d4992",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1dcc263f-f329-4e78-8abe-ba43548c4f75",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/security-master/search?term=nest&top=5&isFullSearch=true",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "security-master",
                            "search"
                          ],
                          "query": [
                            {
                              "key": "term",
                              "value": "nest"
                            },
                            {
                              "key": "top",
                              "value": "5"
                            },
                            {
                              "key": "isFullSearch",
                              "value": "true"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "security search supplemental fields",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3651984c-afc4-4452-ba3f-a7d5e0f38da1",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "41c3beb6-0d98-4676-ad8e-702a17ca9ffe",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/security-master/search?term=1&top=2&supplementalFields=symbol, exchange, cusip, isin&searchType=",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "security-master",
                            "search"
                          ],
                          "query": [
                            {
                              "key": "term",
                              "value": "1"
                            },
                            {
                              "key": "top",
                              "value": "2"
                            },
                            {
                              "key": "isFullSearch",
                              "value": "false",
                              "disabled": true
                            },
                            {
                              "key": "supplementalFields",
                              "value": "symbol, exchange, cusip, isin"
                            },
                            {
                              "key": "searchType",
                              "value": ""
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "lookup",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4ff6acbe-e355-450b-bddc-4b16779be2b9",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0d0a60ec-cc72-4a42-80d4-c6fa0d9828f1",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/security-master/lookup?lookUpType=SecMasterSecurityId&lookUpValue=c0e9c89a-5502-eb11-8140-000c29887906",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "security-master",
                            "lookup"
                          ],
                          "query": [
                            {
                              "key": "lookUpType",
                              "value": "SecMasterSecurityId"
                            },
                            {
                              "key": "lookUpValue",
                              "value": "c0e9c89a-5502-eb11-8140-000c29887906"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "99c95b7b-8200-4812-950c-4d422c7bd831"
                },
                {
                  "name": "search Compliance",
                  "item": [
                    {
                      "name": "security search",
                      "id": "1627a681-c1a0-46f9-b9f9-1d0438fa94fc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/security-master/search?term=nest&top=5&isFullSearch=true",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "security-master",
                            "search"
                          ],
                          "query": [
                            {
                              "key": "term",
                              "value": "nest"
                            },
                            {
                              "key": "top",
                              "value": "5"
                            },
                            {
                              "key": "isFullSearch",
                              "value": "true"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "lookup",
                      "id": "4f0b2ee3-0b03-4fd2-96fc-585736bc4ecb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/security-master/search?term=nest&top=5&isFullSearch=true",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "security-master",
                            "search"
                          ],
                          "query": [
                            {
                              "key": "term",
                              "value": "nest"
                            },
                            {
                              "key": "top",
                              "value": "5"
                            },
                            {
                              "key": "isFullSearch",
                              "value": "true"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "5e24c90d-b498-414f-9ee3-2458bff0f09b",
                  "auth": {
                    "type": "bearer",
                    "bearer": {
                      "token": "{{complianceUserToken}}"
                    }
                  },
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "c5427285-378c-47db-a0b9-05d3f02a0d81",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "bad3dbba-e2f8-40a1-94fd-7526340f869c",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                {
                  "name": "search Business",
                  "item": [
                    {
                      "name": "security search",
                      "id": "04604c56-feb8-46ab-a6fc-168198a397db",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/security-master/search?term=nest&top=5&isFullSearch=true",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "security-master",
                            "search"
                          ],
                          "query": [
                            {
                              "key": "term",
                              "value": "nest"
                            },
                            {
                              "key": "top",
                              "value": "5"
                            },
                            {
                              "key": "isFullSearch",
                              "value": "true"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "lookup",
                      "id": "c2ca8b6b-44d9-4d32-b1e1-72a5309c039f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/security-master/search?term=nest&top=5&isFullSearch=true",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "security-master",
                            "search"
                          ],
                          "query": [
                            {
                              "key": "term",
                              "value": "nest"
                            },
                            {
                              "key": "top",
                              "value": "5"
                            },
                            {
                              "key": "isFullSearch",
                              "value": "true"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "bd38b770-ea45-4d39-b970-0ec6f966140b",
                  "auth": {
                    "type": "bearer",
                    "bearer": {
                      "token": "{{businessUserToken}}"
                    }
                  },
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "9a65b1dd-0e38-4829-aa29-e3d9f336e0e2",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "36616099-cb42-414f-8c7b-b493e2dad4ed",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ]
                }
              ],
              "id": "dbe7ec13-c410-463b-af41-d0c87c2b840e"
            }
          ],
          "id": "9835c8b5-e5d4-4144-957b-de8b411654bd"
        },
        {
          "name": "Roles",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "Get all roles info",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Success\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "  postman.setEnvironmentVariable(\"adminUserRoleId\", jsonData.value[0].id);\r",
                          "\r",
                          "\r",
                          "pm.test(\"The 1st role name is Admin\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.value[0].name).to.eq('Admin');\r",
                          "});\r",
                          "\r",
                          " \r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "496fd58f-c109-41fa-b95c-2dce89276377"
                      }
                    }
                  ],
                  "id": "4a948d8d-c33d-4fc8-bab6-e09f42df3d81",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/roles"
                  },
                  "response": []
                }
              ],
              "id": "40b12b04-f001-4b2f-a74b-64dab1e82818"
            }
          ],
          "id": "2c4cb2f4-4286-4c9d-9afe-a389303769fd"
        },
        {
          "name": "Webhook Integration",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "event log",
                  "item": [
                    {
                      "name": "get event log",
                      "id": "8b4216a0-6b4c-4566-8ee9-4fcd8a816a65",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations(36E8AB2D-F44D-EC11-AB22-0EAFC1B4DB39)/event-log?$expand=event",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations(36E8AB2D-F44D-EC11-AB22-0EAFC1B4DB39)",
                            "event-log"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "event"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "get event log",
                      "id": "5405e913-1e44-4c8e-9ac1-b82f573ec4d7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookSubsId}}/event-log?$expand=event",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "{{webhookSubsId}}",
                            "event-log"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "event"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "496efaf1-4d74-47cc-8eb4-c34ac0b32694"
                },
                {
                  "name": "getAll",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5643a8b9-5b1b-4dfc-a542-f70bdd37085e",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "\r",
                              "})\r",
                              "\r",
                              "var jsonData= pm.response.json()\r",
                              "postman.setEnvironmentVariable(\"webhookSubsId\", jsonData.value[0].webhooks[0].id)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f1d4e12b-7ff0-45c6-9f2e-9459563992c6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations?$expand=webhooks,IntegrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks,IntegrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "9e6c2c5a-f7ba-4b57-a7da-7080e820d4ca"
                }
              ],
              "id": "3a9442a6-9682-40c0-9c20-d06166133f7e"
            },
            {
              "name": "getDefinitions",
              "item": [
                {
                  "name": "getAll",
                  "item": [],
                  "id": "aeaa00c3-d302-41b3-8828-077685245205"
                },
                {
                  "name": "getAll",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "39dfb376-0f5d-412f-bb27-2493b1baf3a4",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "\r",
                          "})\r",
                          "\r",
                          "var jsonData= pm.response.json()\r",
                          "postman.setEnvironmentVariable(\"webhookSubsId\", jsonData.value[0].webhooks[0].id)\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "d8593e48-0e8a-458a-8872-f58a7bc9a76c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/webhook-definitions"
                  },
                  "response": []
                }
              ],
              "id": "31e63e2f-a6fc-42f4-9bf0-9a2241dd8d2e"
            },
            {
              "name": "getByID",
              "item": [
                {
                  "name": "get existing",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2da7645c-ad70-4cd5-a2f7-ead6c0e350f1",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4ea5777b-c3fa-42e4-a5de-a99b7521089b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"name\": \"Test WebHook QA\",\r\n    \"webhookUrl\": \"http://test.com\",\r\n    \"status\": \"Active\",\r\n    \"webhooks\": [\r\n        {\r\n           \"webhookDefinitionId\":\"DC822DC7-2E46-EC11-AB22-0EB31EA16981\"\r\n        }\r\n    ],\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"Test integrationRestrictionLists QA\",\r\n            \"notes\": \"QA\"\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "937ea0ca-2a96-4fba-8030-a0e3c8e8b0fc",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e6525c46-094c-4388-8f52-3e91fadd9ae5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "{{webhookId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "55e2a185-7c86-4cbb-89d7-7c6d07640dfa"
                },
                {
                  "name": "audit specific webhook",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a575b3bb-91b8-42ff-824f-a05e3a2a72e6",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "602de5ac-9f8b-4826-a407-ad777183b97e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"name\": \"Test WebHook QA\",\r\n    \"webhookUrl\": \"http://test.com\",\r\n    \"status\": \"Active\",\r\n    \"webhooks\": [\r\n        {\r\n           \"webhookDefinitionId\":\"ea305c02-7954-ec11-ab22-0eee3f322eb9\"\r\n        }\r\n    ],\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"Test integrationRestrictionLists QA\",\r\n            \"notes\": \"QA\"\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    },
                    {
                      "name": "audit",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1151e0fa-a219-4849-b183-cf69ed162c05",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6ed111e4-63fb-4d04-8653-cf9695434c7a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}/audit"
                      },
                      "response": []
                    }
                  ],
                  "id": "b7fcbde4-bac1-4e73-9265-440d5e3e173c"
                },
                {
                  "name": "get non existing",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "23aa9080-5358-4f4e-9056-90b178b67d20",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 404\", function () {\r",
                              "    pm.response.to.have.status(404);\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f4e09c22-25c3-4a8b-a9b9-1ac12b0ed308",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/(123456789)?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "(123456789)"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "10d861e0-1707-4f5a-a3dd-4243095291b0"
                }
              ],
              "id": "2e5b8b65-6291-44b6-8804-3e31e6a5292a"
            },
            {
              "name": "create",
              "item": [
                {
                  "name": "create without integrationRestrictionLists",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e6ea4e7f-c2bb-4d78-b56d-d12f06c0f055",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d2a5e777-16fc-4f38-9b6a-ad44b040898a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"test-edit-integration\",\r\n    \"status\": \"Active\",\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"webhookUrl\": \"https://a.com\",\r\n    \"integrationType\": \"EmployeeCompliance\",\r\n    \"integrationRestrictionLists\": [\r\n        \r\n    ],\r\n    \"webhooks\": [\r\n        {\r\n            \"webhookDefinitionId\": \"EC305C02-7954-EC11-AB22-0EEE3F322EB9\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "61ab5373-fc52-444d-8f77-ec434b53eb81",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"There are no restriction lists\", function(){\r",
                              "pm.expect(jsonData.integrationRestrictionLists[0]).to.contain([]);\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "cee5eeec-64d4-4242-be6b-b1d75c8bc633",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "{{webhookId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "b8c42832-4721-4a69-8083-b52ef0142dc9"
                },
                {
                  "name": "create with integrationRestrictionLists",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "eb712ca2-983a-4e35-9882-3b4ad960a73c",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d520abad-31e6-44cd-9693-a5c03800e777",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"test-edit-integration\",\r\n    \"status\": \"Active\",\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"webhookUrl\": \"https://a.com\",\r\n    \"integrationType\": \"EmployeeCompliance\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"A\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \"webhooks\": [\r\n        {\r\n            \"webhookDefinitionId\": \"EC305C02-7954-EC11-AB22-0EEE3F322EB9\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7d72a3ca-4190-4412-bad5-83b60553d4a5",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"There are no restriction lists\", function(){\r",
                              "pm.expect(jsonData.integrationRestrictionLists[0].name).to.contain(\"Test\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "02c4da7d-1c3c-4aff-97b9-fc69f842b9bc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "{{webhookId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "d0a82e1b-59cf-4b52-8a31-faf8d90b8078"
                },
                {
                  "name": "create  with \"integrationType\": \"External\"",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d99c91a6-b610-4d79-b99f-a417a4b64072",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ba6f9983-81ca-440d-926b-331ecad553f7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"test-edit-integration\",\r\n    \"status\": \"Active\",\r\n    \"responseTimeOutMinutes\": 88,\r\n    \"webhookUrl\": \"https://rosen.com\",\r\n    \"integrationType\": \"External\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"A\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \"webhooks\": [\r\n        {\r\n            \"webhookDefinitionId\": \"EC305C02-7954-EC11-AB22-0EEE3F322EB9\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a19cc53a-475a-4c69-b012-2abbd9004355",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"There are no restriction lists\", function(){\r",
                              "pm.expect(jsonData.integrationRestrictionLists[0].name).to.contain(\"Test\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d98f02db-d534-4504-a23d-4f3d8703f1e2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "{{webhookId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "6c514358-2da9-49fb-9db0-3bbdfa075ad8"
                },
                {
                  "name": "create without definition",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bb613e49-ff99-437c-8c78-88fa8ade6417",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0d77bf8d-697b-457d-914c-3fdae18612f2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"test-edit-integration\",\r\n    \"status\": \"Active\",\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"webhookUrl\": \"https://a.com\",\r\n    \"integrationType\": \"EmployeeCompliance\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"A\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \"webhooks\": [\r\n       \r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    }
                  ],
                  "id": "9eb659c4-5fca-4f2d-91ab-8eb82323f3ef"
                },
                {
                  "name": "create without name",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f4f02146-e42f-4b13-a466-16c726782081",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a3eefa91-762d-40a2-bdf2-b0281937f95e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \r\n    \"status\": \"Active\",\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"webhookUrl\": \"https://a.com\",\r\n    \"integrationType\": \"EmployeeCompliance\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"A\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \"webhooks\": [\r\n        {\r\n            \"webhookDefinitionId\": \"37575620-7F48-EC11-AB22-0EAFC1B4DB39\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    }
                  ],
                  "id": "24603678-94b2-4948-a299-1344151b32f4"
                },
                {
                  "name": "create without url",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "864e67fc-78be-452c-8230-22f057f8cb03",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9fd732e3-0067-44f7-908c-91375c88707e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"test-edit-integration\",\r\n    \"status\": \"Active\",\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"integrationType\": \"EmployeeCompliance\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"A\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \"webhooks\": [\r\n        {\r\n            \"webhookDefinitionId\": \"37575620-7F48-EC11-AB22-0EAFC1B4DB39\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    }
                  ],
                  "id": "30e3f284-5daf-4e74-a270-6b1729362be1"
                },
                {
                  "name": "create without status",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4ee011be-86e6-495d-a18e-55c8d485e915",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5f0f4b27-492e-4bf5-a1c5-5f9729b10956",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"name\": \"Test WebHook QA\",\r\n    \"webhookUrl\": \"http://test.com\",\r\n    \"webhooks\": [\r\n        {\r\n           \"webhookDefinitionId\":\"DC822DC7-2E46-EC11-AB22-0EB31EA16981\"\r\n        }\r\n    ],\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"Test integrationRestrictionLists QA\",\r\n            \"notes\": \"QA\"\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e38c2665-4430-4f2c-b99d-c63c09ee6f2a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"There are no restriction lists\", function(){\r",
                              "pm.expect(jsonData.status).to.contain(\"Active\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2d5e64e4-386e-4488-b134-8c794a9c2af5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "{{webhookId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "89441045-9f7c-4e73-8180-e2a4d7c28389"
                }
              ],
              "id": "0771ece0-b285-4810-8935-8283e1f200be"
            },
            {
              "name": "put",
              "item": [
                {
                  "name": "update the current webhook",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7a48abba-3ade-40c3-94b9-49eafaa87cc7",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "837ac2d4-65df-425f-9c4d-f07cc36268ba",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"8 dec wed\",\r\n    \"status\": \"Active\",\r\n    \"responseTimeOutMinutes\": 9,\r\n    \"webhookUrl\": \"a.com\",\r\n    \"integrationType\": \"External\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"A\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \"webhooks\": [\r\n        {\r\n            \"webhookDefinitionId\": \"EC305C02-7954-EC11-AB22-0EEE3F322EB9\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "https://uat.platform.devacaalpha.com/api/control-room/v1/deals/bd3526e9-b31b-4332-c293-08d9bae0cb75/audit"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "09dfd4a7-e6cc-4f5e-8f15-8b2c63152920",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "postman.setEnvironmentVariable(\"Id\", jsonData.webhooks[0].id)\r",
                              "postman.setEnvironmentVariable(\"integrationRestrictionListID\", jsonData.integrationRestrictionLists[0].id)\r",
                              "postman.setEnvironmentVariable(\"definitionId\", jsonData.webhooks[0].webhookDefinitionId)"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9ab8e74a-085f-4fc1-ab12-fa00ecf76503",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "{{webhookId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "put",
                      "id": "b66e56ab-acc8-4b15-a8ac-506cf107b5e3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"UPDATED integration\",\r\n    \"webhookUrl\": \"https://a.com\",\r\n    \"id\": \"{{webhookId}}\",\r\n    \"responseTimeOutMinutes\": 0,\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"a-test\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \r\n    \"webhooks\": [\r\n        {\r\n            \"id\" : \"{{Id}}\",\r\n            \"webhookDefinitionId\": \"{{definitionId}}\",\r\n            \"webhookSubscriptionId\": \"{{webhookId}}\"\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "2824d272-2b1e-43e7-8c25-eaf37e2e8237"
                },
                {
                  "name": "update the  \"integrationType\" to  External",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cb320043-8d51-42bc-a79f-e8c7dfd5bda7",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1373a85f-0e95-453e-9527-193e424b9ddd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API test WI\",\r\n    \"status\": \"Active\",\r\n    \"responseTimeOutMinutes\": -1,\r\n    \"webhookUrl\": \"https://a.com\",\r\n    \"integrationType\": \"EmployeeCompliance\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"A\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \"webhooks\": [\r\n        {\r\n            \"webhookDefinitionId\": \"37575620-7F48-EC11-AB22-0EAFC1B4DB39\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f1df0bef-4e9c-4b9e-9e57-d2f4f11c27bf",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "postman.setEnvironmentVariable(\"Id\", jsonData.webhooks[0].id)\r",
                              "postman.setEnvironmentVariable(\"integrationRestrictionListID\", jsonData.integrationRestrictionLists[0].id)\r",
                              "postman.setEnvironmentVariable(\"definitionId\", jsonData.webhooks[0].webhookDefinitionId)"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "cf0e520c-5aaa-460a-bec4-9503e90545af",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "{{webhookId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "put",
                      "id": "fc429405-ca3e-4c06-a440-9afd0453fa86",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"UPDATED integration\",\r\n    \"webhookUrl\": \"https://a.com\",\r\n    \"id\": \"{{webhookId}}\",\r\n    \"responseTimeOutMinutes\": 11,\r\n     \"integrationType\": \"External\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"a-test\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \r\n    \"webhooks\": [\r\n        {\r\n            \"id\" : \"{{Id}}\",\r\n            \"webhookDefinitionId\": \"{{definitionId}}\",\r\n            \"webhookSubscriptionId\": \"{{webhookId}}\"\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "7acd0ee9-0ec5-445a-a7a8-6b77bf00e724"
                },
                {
                  "name": "update non existing",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92aea9d8-0c04-404e-bd97-da1ddf411c50",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "db606162-42d4-42d8-97ec-c5609772d41b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"test-edit-integration\",\r\n    \"status\": \"Active\",\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"webhookUrl\": \"https://a.com\",\r\n    \"integrationType\": \"EmployeeCompliance\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"A\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \"webhooks\": [\r\n        {\r\n            \"webhookDefinitionId\": \"37575620-7F48-EC11-AB22-0EAFC1B4DB39\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "17288b17-98d2-40ac-89ae-d81b209bd2a4",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "postman.setEnvironmentVariable(\"Id\", jsonData.webhooks[0].id)\r",
                              "postman.setEnvironmentVariable(\"integrationRestrictionListID\", jsonData.integrationRestrictionLists[0].id)\r",
                              "postman.setEnvironmentVariable(\"definitionId\", jsonData.webhooks[0].webhookDefinitionId)"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "49df24d2-2a05-436a-9e7a-76c0175f3f5e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "{{webhookId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "put",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5a9a7a5d-6ac0-4c1e-abac-54ff69b7aadb",
                            "exec": [
                              "pm.test(\"Status code is 404\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "785a7340-76fd-440e-8650-2a4a4ea77e9b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"UPDATED integration\",\r\n    \"webhookUrl\": \"https://a.com\",\r\n    \"id\": \"{{webhookId}}\",\r\n    \"responseTimeOutMinutes\": 0,\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"a-test\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \r\n    \"webhooks\": [\r\n        {\r\n            \"id\" : \"{{Id}}\",\r\n            \"webhookDefinitionId\": \"{{definitionId}}\",\r\n            \"webhookSubscriptionId\": \"{{webhookId}}\"\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations/(12345678)"
                      },
                      "response": []
                    }
                  ],
                  "id": "71c0f79d-18f2-4c8d-8c0e-caf6defd9152"
                }
              ],
              "id": "60b44b44-c9bf-4854-a38b-bfc4829c9132"
            },
            {
              "name": "delete",
              "item": [
                {
                  "name": "delete existing",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7cb32c35-ec0a-47c0-8200-49089deaa021",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e9fa487e-63da-458b-9334-63fffcc7f4a5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"test-edit-integration\",\r\n    \"status\": \"Active\",\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"webhookUrl\": \"https://a.com\",\r\n    \"integrationType\": \"EmployeeCompliance\",\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"A\",\r\n            \"notes\": \"1\"\r\n        }\r\n    ],\r\n    \"webhooks\": [\r\n        {\r\n            \"webhookDefinitionId\": \"37575620-7F48-EC11-AB22-0EAFC1B4DB39\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a0a6c127-9780-4aa2-8644-a75e0ec36917",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3cf52e4b-9e09-426d-a0cc-bb4fb2a1fe4a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "aed189ba-edc0-408f-b3fa-bec600a769fa"
                },
                {
                  "name": "delete non existing",
                  "item": [
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5d1b64fa-a867-43be-bd62-534e17467d38",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "53e01ab7-0b32-4ba2-81a9-0348df28a720",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations/(12345678)"
                      },
                      "response": []
                    }
                  ],
                  "id": "2d60c4a3-0ca2-48c2-95dd-85e740f3a28c"
                }
              ],
              "id": "83f988d7-c164-41f5-9029-011218c742de"
            }
          ],
          "id": "432b5a17-450f-4416-90b5-7fd4f5d6ce8c"
        },
        {
          "name": "Integration Restriction List",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "getAll",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fa5c2ce7-5ea2-4cc9-adb2-c5800f02f175",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"integrationRestrictionListId\", jsonData.value[0].id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "d5883f4c-99ed-4f37-906b-25045223e036",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/integration-restriction-lists?$expand=employeeLevelRestrictions",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "integration-restriction-lists"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "employeeLevelRestrictions"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "764ad04e-97fe-4ce8-b150-5546db29cce2"
            },
            {
              "name": "getById",
              "item": [
                {
                  "name": "get existing",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e866111f-3852-430b-a733-2da4c750b8e7",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"webhookId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "30984c6e-6b6c-4b44-97f2-4a014ff68239",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"responseTimeOutMinutes\": 60,\r\n    \"name\": \"Test WebHook QA\",\r\n    \"webhookUrl\": \"http://test.com\",\r\n    \"status\": \"Active\",\r\n    \"authenticationDetails\" : { \r\n        \"apiKey\":\"TEST\"\r\n    },\r\n    \"webhooks\": [\r\n        {\r\n           \"webhookDefinitionId\":\"2a074cc9-bf53-ec11-ab22-0eafc1b4db39\"\r\n        }\r\n    ],\r\n    \"integrationRestrictionLists\": [\r\n        {\r\n            \"name\": \"Test integrationRestrictionLists QA\",\r\n            \"notes\": \"QA\"\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/webhook-integrations"
                      },
                      "response": []
                    },
                    {
                      "name": "getById webhook",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6addbb3d-8f7d-4624-aef9-03d06942bbf7",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"integrationRestrictionListId\", jsonData.integrationRestrictionLists[0].id);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a69e7d9d-687e-4c34-b72a-3c2c9d75b795",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/webhook-integrations/{{webhookId}}?$expand=webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "webhook-integrations",
                            "{{webhookId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "webhooks($expand=webhookDefinition($select=name)),integrationRestrictionLists"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "getById restriction list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5d40dbb0-ae6e-41df-a15c-e5ef21315aa3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "467a4e3a-fd4d-4421-be0f-113858c0ac72",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/integration-restriction-lists/{{integrationRestrictionListId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "67a940ea-3776-447f-b7eb-de5da59a4b0f"
                },
                {
                  "name": "get non existing",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2ccabb5a-d1b4-4ff4-9596-d67f0a4f422a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 404\", function () {\r",
                              "    pm.response.to.have.status(404);\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "68c06418-4653-4e4f-aece-07d406e34f00",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/integration-restriction-lists/(123456789)"
                      },
                      "response": []
                    }
                  ],
                  "id": "34d43f68-a51b-4ed3-95c5-5c4aef3216ec"
                }
              ],
              "id": "5cd4af93-e346-450e-91dd-b3353868b722"
            }
          ],
          "id": "91c4abfb-12a4-438b-b117-a0dc3dcba80b"
        },
        {
          "name": "Identity/Role set/User-roles",
          "item": [
            {
              "name": "get",
              "item": [
                {
                  "name": "get logged in user role and id",
                  "item": [
                    {
                      "name": "Get the looged in user role and ID",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"userId\", jsonData.value[0].userId);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript",
                            "id": "939325c2-8930-4ae5-912d-c81f50182391"
                          }
                        }
                      ],
                      "id": "6f611fcd-1846-488f-9a64-9d8e1417c15f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/user-roles"
                      },
                      "response": []
                    }
                  ],
                  "id": "b56bbe2a-05e1-48a6-af30-1d58fc0db3f0"
                }
              ],
              "id": "053e14ef-5d98-4138-9f12-33fbc477ccef"
            },
            {
              "name": "post",
              "item": [
                {
                  "name": "set role admin",
                  "item": [
                    {
                      "name": "Get logged user role and id",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"userId\", jsonData.value[0].userId);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript",
                            "id": "718c4a68-0f8a-4f73-9c9d-9114eb010e7a"
                          }
                        }
                      ],
                      "id": "01314ca3-2267-4bdb-879f-c7dcc55fbb9a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{AuthToken}}"
                          }
                        },
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/user-roles"
                      },
                      "response": []
                    },
                    {
                      "name": "Get the id for Admin role",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Success\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "  postman.setEnvironmentVariable(\"adminUserRoleId\", jsonData.value[0].id);\r",
                              "\r",
                              "\r",
                              "pm.test(\"The 1st role name is Admin\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.value[0].name).to.eq('Admin');\r",
                              "});\r",
                              "\r",
                              " \r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript",
                            "id": "ef3a3c28-7e5e-4446-9b51-153b8427ee10"
                          }
                        }
                      ],
                      "id": "65158e73-0211-4426-a367-700c2fe64468",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/roles"
                      },
                      "response": []
                    },
                    {
                      "name": "Set admin role",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "pm.test(\"The role is Admin\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.value[0].name).to.eq('Admin');\r",
                              "});"
                            ],
                            "type": "text/javascript",
                            "id": "99724ba1-5f4c-45cd-8c71-d53745d9eb4d"
                          }
                        }
                      ],
                      "id": "df5fe1eb-e130-43c3-8813-fae9a1345431",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"roleId\": \"{{adminUserRoleId}}\"\r\n    \r\n \r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/user-roles"
                      },
                      "response": []
                    }
                  ],
                  "id": "7facb641-4c0b-4207-bc6e-1fbb75575e54",
                  "auth": {
                    "type": "bearer",
                    "bearer": {
                      "token": "{{supportUserToken}}"
                    }
                  },
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b120f27f-84a0-4a72-aa41-ef57dac65676",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "881e5d2d-6ddb-4ac7-8297-6ba82aef3bdd",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                {
                  "name": "set role without userId",
                  "item": [
                    {
                      "name": "Negative - set role without userId",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});"
                            ],
                            "type": "text/javascript",
                            "id": "42974002-ab49-4a00-99ca-a7876d2a3547"
                          }
                        }
                      ],
                      "id": "f231c4ff-8d51-45b7-b52b-84625111da88",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"userId\": \"\",\r\n    \"roleId\": \"{{roleId}}\"\r\n    \r\n \r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/user-roles"
                      },
                      "response": []
                    }
                  ],
                  "id": "46d70a24-9ecf-4125-b0da-812a3bc89c4f"
                },
                {
                  "name": "set role without roleId",
                  "item": [
                    {
                      "name": "Negative - set role without roleId",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});"
                            ],
                            "type": "text/javascript",
                            "id": "0d490879-b728-4965-b865-36ac11456047"
                          }
                        }
                      ],
                      "id": "ec0abbf4-0739-4495-88dc-82c897ec88e8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"roleId\": \"\"\r\n    \r\n \r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/user-roles"
                      },
                      "response": []
                    }
                  ],
                  "id": "4c7ed002-923d-4262-9686-3f3664b65fd3"
                }
              ],
              "id": "190ee892-346b-4b14-826f-99d00a2947f3"
            }
          ],
          "id": "c52ac834-3dfc-45d8-aeef-3fbf89560708"
        },
        {
          "name": "DEPRECATED Restriction List",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "expand the employeeLevelRestrictions",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6b4bac38-ec8e-4e21-9c3f-9b854d7a4515",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "40581862-f729-4457-8067-9cd69b520462",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/restriction-list?$expand=employeeLevelRestrictions",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "restriction-list"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "employeeLevelRestrictions"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "7c3f565a-1bcb-473a-8b81-d3eb66975fbe"
                }
              ],
              "id": "4d7d37f0-1cf4-434b-82e9-8d2086d4b29e"
            },
            {
              "name": "getById",
              "item": [
                {
                  "name": "get existing list",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4f172c7f-c16b-4445-b0c0-8759f7fd9d8e",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"restrictionListId\", jsonData.id);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f302c759-7629-4637-9824-86f8b2863044",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"Test Restriction List 5\",\r\n    \"notes\": \"Test Restriction List Notes 5\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/restriction-list"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4caae20c-280d-48bf-93ff-4ac091508fb3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2fc68a96-2139-45ee-858c-1ef195056dec",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/restriction-list/{{restrictionListId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "e866cbdb-a7b5-4221-8bf6-c1bd8f902486"
                },
                {
                  "name": "get non existing list",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cf0e57d0-3039-4bb2-90ba-5720165b73e1",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 404\", function () {\r",
                              "    pm.response.to.have.status(404);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "15bcdc6c-44cf-4b8b-a4af-6c3432796d79",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/restriction-list/(1234567)"
                      },
                      "response": []
                    }
                  ],
                  "id": "dca515bb-2fb0-40f2-90a3-1488d097606a"
                }
              ],
              "id": "6f68ed9a-b3ff-4e47-964a-eefece3b58bc"
            },
            {
              "name": "create",
              "item": [
                {
                  "name": "create list with employeeLevelrestriction",
                  "item": [
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ec54728d-5b08-46c3-a2b6-6f0491740621",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "//postman.setEnvironmentVariable(\"employeeRestriction\", jsonData.value[valueId].restrictions[restrictionId].employeeRestriction);\r",
                              "\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "     jsonData.value[valueId].restrictions[restrictionId] \r",
                              "     ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "     : null);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5dceb8e8-cf85-4221-affa-d020549f7abc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "def41f55-9166-4f13-baf7-a52c8bfc214b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "8bc07e2a-8395-4976-b430-cfa4c812ba69",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d2ef0bf3-6323-4436-8f0a-a5f144e7bde9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraft}},\r\n     \"companies\": [{\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            },{\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"company\": {\r\n                        \"name\": \"{{randomCompanyName1}}\"\r\n                    }\r\n            }],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"dealMember\":\r\n                    {\r\n                        \"memberId\": \"{{memberId}}\",\r\n                        \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2e4699b0-7628-449f-b0a2-1f89351ece2c",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"clientId\", jsonData.clientId)\r",
                              "postman.setEnvironmentVariable(\"recordType\", jsonData.recordType)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedByUserId\", jsonData.lastModifiedByUserId)\r",
                              "postman.setEnvironmentVariable(\"lastModifiedTimestamp\", jsonData.lastModifiedTimestamp)\r",
                              "postman.setEnvironmentVariable(\"createdByUserId\", jsonData.createdByUserId)\r",
                              "postman.setEnvironmentVariable(\"createdTimestamp\", jsonData.createdTimestamp)\r",
                              "postman.setEnvironmentVariable(\"company1Id\", jsonData.companies[0].id) //it is ok if only 1 company\r",
                              "postman.setEnvironmentVariable(\"company2Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"company3Id\", jsonData.companies[1] ? \r",
                              "jsonData.companies[2].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent1Id\", jsonData.companies[0].contactsUnderTent[0] ? jsonData.companies[0].contactsUnderTent[0].id : null)\r",
                              "postman.setEnvironmentVariable(\"contactsUnderTent2Id\", jsonData.companies[0].contactsUnderTent[1] ? jsonData.companies[0].contactsUnderTent[1].id : null)\r",
                              "postman.setEnvironmentVariable(\"dealMemberVisibilityId\", jsonData.dealMembers[0].id)\r",
                              "postman.setEnvironmentVariable(\"dealMemberInternalId\", jsonData.dealMembers[1].id) //might cause issues when more than one visibility user\r",
                              "postman.setEnvironmentVariable(\"restriction1Id\", jsonData.restrictions[0].id) //for the 1st restriction only\r",
                              "postman.setEnvironmentVariable(\"isSyncToMarketAbuse1\", jsonData.restrictions[0].isSyncToMarketAbuse) \r",
                              "postman.setEnvironmentVariable(\"companyRestrictions1Id\", jsonData.restrictions[0].companyRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"memberRestrictions1Id\", jsonData.restrictions[0].memberRestrictions[0].id) \r",
                              "postman.setEnvironmentVariable(\"isDraftAlwaysFalse\", \"false\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "fc647c2c-ae25-4bfc-bc5f-1a077bc91664",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "486459ae-26a5-41cd-aba1-5024113d7c44",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "3d4c1307-ca55-4ebf-b168-f94f35578b71",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3f52b423-446f-482d-89e5-1bdc91d02ea5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "\r\n\r\n{\r\n    \"id\": \"27a902cd-a718-4315-13f2-08d99e9830fa\",\r\n    \"clientId\": 3396,\r\n    \"recordType\": \"Deal\",\r\n    \"name\": \"961 API deal\",\r\n    \"description\": \"2021-11-03T08:07:33.267Z API deal description\",\r\n    \"categoryId\": \"0b8ef1d5-41da-eb11-aae9-0e29a95e9f25\",\r\n    \"status\": \"Paused\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2021-11-04T08:07:33.267Z\",\r\n    \"completionDate\": \"2021-11-05T08:07:33.267Z\",\r\n    \"isUrgent\": false,\r\n    \"isDraft\": false,\r\n    \"lastModifiedByUserId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n    \"lastModifiedTimestamp\": \"2021-11-03T08:14:00.7786257Z\",\r\n    \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n    \"createdTimestamp\": \"2021-11-03T08:07:34.4503331Z\",\r\n    \"companies\": [\r\n        {\r\n            \"id\": \"2100326f-acb5-4461-19bc-08d99e983105\",\r\n            \"dealId\": \"27a902cd-a718-4315-13f2-08d99e9830fa\",\r\n            \"clientId\": 3396,\r\n            \"name\": \"NESN VX\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"03be7d38-c469-423c-a60a-dc7e66305fd9\",\r\n            \"companyAdvisees\": [],\r\n            \"companyRestrictions\": [\r\n                {\r\n                    \"id\": \"f06e082f-84de-4590-5ec7-08d99e98311b\",\r\n                    \"clientId\": 3396,\r\n                    \"restrictionId\": \"5d00de25-f463-4d19-413b-08d99e983116\",\r\n                    \"companyId\": \"2100326f-acb5-4461-19bc-08d99e983105\",\r\n                    \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"lastModifiedTimestamp\": \"2021-11-03T08:07:34.4503331Z\",\r\n                    \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"createdTimestamp\": \"2021-11-03T08:07:34.4503331Z\"\r\n                }\r\n            ],\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"ndaRequestedDate\": \"2021-11-04T08:07:33.267Z\",\r\n            \"ndaCompletedDate\": \"2021-11-24T21:54:13.267Z\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"dataDestructionRequestedDate\": \"2021-11-04T08:07:33.267Z\",\r\n            \"dataDestructionCompletedDate\": \"2021-11-05T08:07:33.267Z\",\r\n            \"cusip\": \"H57312649\",\r\n            \"isin\": \"CH0038863350\",\r\n            \"externalId\": \"031df699-5502-eb11-8140-000c29887906\",\r\n            \"contactsUnderTent\": [\r\n                {\r\n                    \"id\": \"c0054313-fe13-4981-ac97-08d99e985f5a\",\r\n                    \"name\": \"594 API contact name\",\r\n                    \"title\": \"321 API contact title\",\r\n                    \"email\": \"Letitia_Beatty@hotmail.com\",\r\n                    \"addedDate\": \"2021-11-05T08:07:33.267Z\"\r\n                },\r\n                {\r\n                    \"id\": \"cc1e73bb-163c-4fe0-ac98-08d99e985f5a\",\r\n                    \"name\": \"594 API contact name\",\r\n                    \"title\": \"321 API contact title\",\r\n                    \"email\": \"Hortense.Boehm16@yahoo.com\",\r\n                    \"addedDate\": \"2021-11-05T08:07:33.267Z\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"dc85d400-5951-4b82-afb3-03be3ad9ff0d\",\r\n            \"memberType\": \"InternalDealLeadUser\",\r\n            \"id\": \"e6b86e95-78ca-4254-fce3-08d99e983111\"\r\n        },\r\n        {\r\n            \"memberId\": \"dc85d400-5951-4b82-afb3-03be3ad9ff0d\",\r\n            \"memberType\": \"RecordVisibilityUser\",\r\n            \"id\": \"4be82431-bcd8-49c2-fce2-08d99e983111\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"id\": \"5d00de25-f463-4d19-413b-08d99e983116\",\r\n            \"dealId\": \"27a902cd-a718-4315-13f2-08d99e9830fa\",\r\n            \"clientId\": 3396,\r\n            \"memberRestrictions\": [],\r\n            \"isSyncToMarketAbuse\": false,\r\n            \"companyRestrictions\": [\r\n                {\r\n                    \"id\": \"f06e082f-84de-4590-5ec7-08d99e98311b\",\r\n                    \"clientId\": 3396,\r\n                    \"restrictionId\": \"5d00de25-f463-4d19-413b-08d99e983116\",\r\n                    \"companyId\": \"2100326f-acb5-4461-19bc-08d99e983105\",\r\n                    \"lastModifiedByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"lastModifiedTimestamp\": \"2021-11-03T08:07:34.4503331Z\",\r\n                    \"createdByUserId\": \"e4864753-47dd-4f95-893d-75e9d847e23e\",\r\n                    \"createdTimestamp\": \"2021-11-03T08:07:34.4503331Z\",\r\n                    \"company\": {\r\n                        \"name\": \"NESN VX\"\r\n                    }\r\n                }\r\n            ],\r\n            \"employeeLevelRestrictions\": [\r\n                {\r\n                    \"id\": \"e1ec1bcb-273f-457a-be4c-08d99ea1e451\",\r\n                    \"restrictionId\": \"5d00de25-f463-4d19-413b-08d99e983116\",\r\n                    \"screeningListName\": \"Test 10.05.2021\",\r\n                    \"screeningListId\": \"03cdc2ec-1f6d-4f18-9376-4b600888f7a1\"\r\n                },\r\n                 {\r\n                    \"screeningListName\": \"Local Screening List\",\r\n                    \"screeningListType\" : \"ControlRoom\",\r\n                    \"screeningListId\": \"fee3dc0d-96ce-45fd-eb95-08d99e0bd808\"\r\n                }\r\n            ],\r\n            \"endDate\": \"2021-11-04T08:07:33.267Z\",\r\n            \"name\": \"135 API  restriction\",\r\n            \"startDate\": \"2021-11-04T08:07:33.267Z\"\r\n        }\r\n    ]\r\n}\r\n\r\n",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "update Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6a0bc643-9b7c-4954-8aaf-9cb4326bda42",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "92f31024-4671-40eb-91e6-a429fd7ab1a4",
                            "exec": [
                              "pm.environment.set(\"randomUpdatedDealName\", _.random(1, 1000) +\" \" + \"Updated API deal\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a2abc4a1-3604-45b9-99c3-2874bce795ce",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n     \"id\": \"{{dealId}}\",\r\n    \"clientId\": {{clientId}},\r\n    \"recordType\": \"{{recordType}}\",\r\n    \"name\": \"{{randomUpdatedDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": {{isDraftAlwaysFalse}},\r\n     \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n     \"companies\": [{\r\n          \"id\": \"{{company1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n             \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\",\r\n            \"contactsUnderTent\": [{\r\n                \"id\": \"{{contactsUnderTent1Id}}\",\r\n                \"clientId\": {{clientId}},\r\n                \"companyId\": \"{{company1Id}}\",\r\n                \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                \"createdByUserId\": \"{{createdByUserId}}\",\r\n                \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n                \"name\": \"{{contactsUnderTentName}}\",\r\n                \"title\": \"{{contactsUnderTentTitle}}\",\r\n                \"email\": \"{{$randomEmail}}\",\r\n                \"addedDate\":\"{{contactAddedDate}}\"\r\n                \r\n            }\r\n            ]\r\n            \r\n           \r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\",\r\n             \"id\": \"{{dealMemberVisibilityId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\",\r\n            \"id\": \"{{dealMemberInternalId}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n             \"id\": \"{{restriction1Id}}\",\r\n            \"clientId\": {{clientId}},\r\n            \"dealId\": \"{{dealId}}\",\r\n            \"isSyncToMarketAbuse\": {{isSyncToMarketAbuse1}},\r\n            \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n            \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n            \"createdByUserId\": \"{{createdByUserId}}\",\r\n            \"createdTimestamp\": \"{{createdTimestamp}}\",\r\n\r\n            \"companyRestrictions\": [{\r\n                    \"id\": \"{{companyRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"companyId\": \"{{company1Id}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                {\r\n                    \"id\": \"{{memberRestrictions1Id}}\",\r\n                    \"clientId\": {{clientId}},\r\n                    \"restrictionId\": \"{{restriction1Id}}\",\r\n                    \"dealMemberId\": \"{{dealMemberInternalId}}\",\r\n                    \"lastModifiedByUserId\": \"{{lastModifiedByUserId}}\",\r\n                    \"lastModifiedTimestamp\": \"{{lastModifiedTimestamp}}\",\r\n                    \"createdByUserId\": \"{{createdByUserId}}\",\r\n                    \"createdTimestamp\": \"{{createdTimestamp}}\"\r\n                        }\r\n               \r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "541939f4-3dea-479d-b92b-54618da19870",
                            "exec": [
                              "var jsonData = JSON.parse(responseBody);\r",
                              "\r",
                              "pm.test(\"The deal name contains updated\", function(){\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.expect(jsonData.name).to.contain(\"Updated\")\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "945eb802-e307-4603-bd6a-d164a24413eb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals",
                            "{{dealId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions($expand=companyRestrictions,memberRestrictions),dealMembers,companies($expand=contactsUnderTent)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "get all restriction lists with expanded ELR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a915c726-db20-414f-ad4b-698269db037a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ec9ea367-b961-4e59-864a-b8d9c6ce70d3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/restriction-list?$expand=employeeLevelRestrictions",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "restriction-list"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "employeeLevelRestrictions"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "939cbc5a-7a63-4969-9ba4-cd309b91334d"
                },
                {
                  "name": "create a list without employeeLevelRestriction",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "61b9c38b-34c7-40f0-ba4a-e6a3ceaf1cb3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"restrictionListId\", jsonData.id);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "88d4ea73-5bc1-4735-b55f-cfd76d536822",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"New restriction list\",\r\n    \"notes\": \"Test Restriction List \"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/restriction-list"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "eb34ab3d-e24d-4255-9f37-c0dbad451da9",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1bda7547-7541-44ce-9a7e-adbc047bff19",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/restriction-list/{{restrictionListId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "ceccc72f-b7c8-477d-be33-ec8a2835561b"
                },
                {
                  "name": "create a list with empty name",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f6bccd54-5f3e-4574-b0ae-862c8dd11992",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"restrictionListId\", jsonData.id);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "edeb2a6b-b2da-41ba-b02f-eb0e942aacde",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"\",\r\n    \"notes\": \"Test Restriction List \"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/restriction-list"
                      },
                      "response": []
                    }
                  ],
                  "id": "beed3c07-7371-4d54-a49a-47f6f9b185d1"
                },
                {
                  "name": "create a list with empty notes",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fd0551c8-1caa-49bd-a374-779ec0cfbda4",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"restrictionListId\", jsonData.id);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "557854e2-1d9b-4c7c-8757-8e9308f73153",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"List API\",\r\n    \"notes\": \"\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/restriction-list"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "70988932-d033-4bbc-b5cb-eed23269daaa",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4c56653a-3650-477f-b09a-79e50a5eada3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/restriction-list/{{restrictionListId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "ee27ceec-3357-44ca-9973-326ce3eab7b0"
                }
              ],
              "id": "1ceec5bb-5c7e-4588-8ef4-7f4fb4bf86ec"
            },
            {
              "name": "patch",
              "item": [
                {
                  "name": "update non existing list",
                  "item": [
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ddb6c65b-17c5-4888-bae0-d5b390d67e6a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5cf6a0fc-5808-49ab-9400-74fc24dba7c7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"Test Restriction List 5 - Updated\",\r\n    \"notes\": \"Test Restriction List Notes 5 - Updated\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/restriction-list/(12345t)"
                      },
                      "response": []
                    }
                  ],
                  "id": "756fad5d-c8c4-45bc-8604-b82283cfa8e1"
                },
                {
                  "name": "update existing list",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "84ff558a-55e5-46a9-8bca-4ea801f79ecd",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"restrictionListId\", jsonData.id);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a5ce1518-8168-4128-9941-9c592a0e14d4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"New restriction list\",\r\n    \"notes\": \"Test Restriction List \"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/restriction-list"
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "00f0f39b-1403-42e5-944b-8a1b7d4f70bc",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2854749b-522c-45c9-a524-2e37c1bb247d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"Test Restriction List 5 - Updated\",\r\n    \"notes\": \"Test Restriction List Notes 5 - Updated\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/restriction-list/{{restrictionListId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6b182b33-045b-436a-9c62-73cd8a28d1af",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8672545b-c225-4c35-97b7-d2252a249240",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/restriction-list/{{restrictionListId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "ca46d8d3-ec07-4f03-90a2-ae4844b5a53b"
                }
              ],
              "id": "10247140-8a1e-4743-b3e5-cf36bc90bb08"
            },
            {
              "name": "delete",
              "item": [
                {
                  "name": "delete existing list",
                  "item": [
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4aaf6f41-7e52-443c-8578-847df63f864a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"restrictionListId\", jsonData.id);\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "19c00d7a-4410-4f1f-8917-660f74ddc3ec",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"New restriction list\",\r\n    \"notes\": \"Test Restriction List \"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/restriction-list"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fa3a551b-d846-4748-8e2b-44831ea3cd57",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9313290a-e03e-4363-8acd-1e9f01554d90",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/restriction-list/{{restrictionListId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "29111ebb-fafe-4c73-97d5-5bcfbcbd14e4",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 404\", function () {\r",
                              "    pm.response.to.have.status(404);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "33490d73-aec6-40eb-b177-e42313bc9345",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/restriction-list/{{restrictionListId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "2fb63984-2c77-42cd-abef-6b82a6312544"
                },
                {
                  "name": "delete non existing list",
                  "item": [
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e279e056-c233-44a7-b86b-cd813b7f4f7a",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "b4ee9df5-37fc-4081-92e4-ef2ddac3843c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/restriction-list/(123456)"
                      },
                      "response": []
                    }
                  ],
                  "id": "deadf5f2-ddb2-43ac-83ee-6d0fa1510637"
                }
              ],
              "id": "8caa17b0-da80-4a23-bd0f-ad0653441112"
            }
          ],
          "id": "fb002783-68dc-4634-bc6e-1fa7464e44ad"
        },
        {
          "name": "DEPRECATED Deal Members",
          "item": [
            {
              "name": "internal dela lead user case",
              "item": [
                {
                  "name": "Get deal ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.value[0].id);"
                        ],
                        "type": "text/javascript",
                        "id": "aafc7128-10d5-48e5-ac0b-32b74de366c6"
                      }
                    }
                  ],
                  "id": "667b3c56-90a5-4043-9cac-de183fcd9fea",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Assign internal  deal lead user to a deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"This is InternalDealLeadUser\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.memberType).to.eq('InternalDealLeadUser');\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "2814022f-1a0e-4cd7-b369-31727854cd0a"
                      }
                    }
                  ],
                  "id": "63c10b0c-0f23-402a-a5c5-c4282ec5da20",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"{{dealId}}\",\r\n    \"memberId\": \"EE3034BA-ECCC-44F5-BDB4-93EAF6679944\",\r\n    \"memberType\": \"InternalDealLeadUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "List a specific deal member by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "53a7d040-6355-4b5f-8518-853b96989de1"
                      }
                    }
                  ],
                  "id": "ab4ab48d-1f74-4d25-90b7-2792286ad46c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Change the member type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "d5386a73-f59f-423e-98e0-3488b5533cb0"
                      }
                    }
                  ],
                  "id": "84c159f9-024a-4a09-97ca-3a55f0d52ff4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"memberType\": \"RecordVisibilityGroup\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "76be678b-fb16-4c60-9c6c-d8d292f41c7a"
                      }
                    }
                  ],
                  "id": "e250f6d4-0de2-4b64-8385-3de38312e04a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                }
              ],
              "id": "479c0cc4-5f77-4d47-b2c5-5fe9ee7ea54d"
            },
            {
              "name": "internal insider user case",
              "item": [
                {
                  "name": "Get deal ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})"
                        ],
                        "type": "text/javascript",
                        "id": "8efed520-912c-43bd-bf1f-27b916bea40d"
                      }
                    }
                  ],
                  "id": "95cf4d98-aa17-453e-ad29-3d4f2acbe698",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Assign internal  insider  user to a deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"This is InternalDealLeadUser\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.memberType).to.eq('InternalInsiderUser');\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "a3b08b3f-3e41-477a-af6b-7fff984de416"
                      }
                    }
                  ],
                  "id": "88ef7ee3-426c-4fe6-9ad0-3608012b2ea6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"{{dealId}}\",\r\n    \"memberId\": \"EE3034BA-ECCC-44F5-BDB4-93EAF6679944\",\r\n    \"memberType\": \"InternalInsiderUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "List a specific deal member by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "cd03ef2c-01fc-477c-b9db-c1f2442a423c"
                      }
                    }
                  ],
                  "id": "6b8f3c77-1773-4cc6-b275-fe33e85ec3d9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "52e71ab2-aa92-4dd9-8133-0519eff049a7"
                      }
                    }
                  ],
                  "id": "7aa28333-9937-4e28-bf64-d4ae6a10b326",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Change the member type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "269d6778-8665-4dda-b05e-292868c479e8"
                      }
                    }
                  ],
                  "id": "66eccf0c-6513-40fb-ba5d-6a4dfebe8d89",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"memberType\": \"InternalDealLeadUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                }
              ],
              "id": "5ecd88aa-4104-4613-b6a7-cc1b1ba152c4"
            },
            {
              "name": "internal deal associate user case",
              "item": [
                {
                  "name": "Get deal ID Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})"
                        ],
                        "type": "text/javascript",
                        "id": "bd7828a5-dd2c-4ae9-9833-15b7db99781f"
                      }
                    }
                  ],
                  "id": "2cb951b4-78a3-4caa-abe4-2c10258f3708",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Assign internal  deal associate  user to a deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"This is InternalDealLeadUser\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.memberType).to.eq('InternalDealAssociateUser');\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "3765256a-a966-41b3-a3bc-428f837b4d92"
                      }
                    }
                  ],
                  "id": "590e504b-5916-4908-90a9-19533714ce27",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"{{dealId}}\",\r\n    \"memberId\": \"EE3034BA-ECCC-44F5-BDB4-93EAF6679944\",\r\n    \"memberType\": \"InternalDealAssociateUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "List a specific deal member by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "85ebfa89-f777-46dd-aa49-f7744e7b858c"
                      }
                    }
                  ],
                  "id": "03ae1bb1-ba16-49b9-8684-f8fe95a37586",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Change the member type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "3be26a1a-63cd-42d5-983c-3cda720e99b4"
                      }
                    }
                  ],
                  "id": "b84dffe1-98f1-491a-aa24-caf7b65e3da5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"memberType\": \"RecordVisibilityGroup\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "56831d90-da2d-488c-b8d9-68b6f5a9b4f5"
                      }
                    }
                  ],
                  "id": "cea64ad1-c37a-419f-a522-81a48c3ee907",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                }
              ],
              "id": "51538e31-c749-472f-9e41-a94e5d417176"
            },
            {
              "name": "internal insider group case",
              "item": [
                {
                  "name": "Get deal ID Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})"
                        ],
                        "type": "text/javascript",
                        "id": "9464bc7e-60f2-40c7-9e8f-dbb67d25844a"
                      }
                    }
                  ],
                  "id": "f947bb7d-4ab7-4dbc-9d28-07ef0779df49",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Assign internal insider group to a deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"This is InternalDealLeadUser\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.memberType).to.eq('InternalInsiderGroup');\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "f18f46d3-8c83-45ad-a5ec-47e493aa6d0c"
                      }
                    }
                  ],
                  "id": "c5ca8be7-f220-4ff2-9500-de3c606165aa",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"{{dealId}}\",\r\n    \"memberId\": \"fd74774c-8eb2-431c-98fb-5f403520f5ef\",\r\n    \"memberType\": \"InternalInsiderGroup\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "List a specific deal member by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "fe9293a0-3caa-4bc7-9e7f-3b8f88bf1010"
                      }
                    }
                  ],
                  "id": "4082e362-2b95-4e6c-b5cf-70190f6a3eaf",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Change the member type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "a34940c1-93cf-467e-93a2-ee34d759d5d1"
                      }
                    }
                  ],
                  "id": "4e07d735-10f9-4644-a3b8-5432d8d5eab2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"memberType\": \"AssociatedComplianceTeamUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "ee87b9dc-3e81-4160-98f4-dc76c498343b"
                      }
                    }
                  ],
                  "id": "faa45f3a-3f56-4573-a1b8-7922e17c1e1d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                }
              ],
              "id": "74963cde-9b6e-46a7-bfbc-c1a68017c644"
            },
            {
              "name": "associated compliance team user case",
              "item": [
                {
                  "name": "Get deal ID Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})"
                        ],
                        "type": "text/javascript",
                        "id": "b1d25465-31be-4dd3-b23a-52f215cf1d1b"
                      }
                    }
                  ],
                  "id": "c7b76bdf-7acf-4853-9603-96a67161377d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Assign Associated Compliance Team User to a deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"This is InternalDealLeadUser\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.memberType).to.eq('AssociatedComplianceTeamUser');\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "1bd6292d-7e66-46cf-8b93-0a0b8c7025e5"
                      }
                    }
                  ],
                  "id": "524ad991-4e40-405a-a6e6-211f1224951b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"{{dealId}}\",\r\n    \"memberId\": \"EE3034BA-ECCC-44F5-BDB4-93EAF6679944\",\r\n    \"memberType\": \"AssociatedComplianceTeamUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "List a specific deal member by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "4380bd9a-f519-4d33-a4f0-452251d5795e"
                      }
                    }
                  ],
                  "id": "91e82cf0-888a-43c4-ac9b-f9d6b1e51b1b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Change the member type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "1bf80a2c-d218-4675-9a02-f2d87d0a0792"
                      }
                    }
                  ],
                  "id": "f8bcba68-fde7-40ba-9a2b-a0069dab5248",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"memberType\": \"AssociatedComplianceTeamUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "38860bdd-7cd9-4d7d-9af9-fd94637c0257"
                      }
                    }
                  ],
                  "id": "ebb6f109-fe7d-4af6-bb38-df6647827210",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                }
              ],
              "id": "d602a6a7-1554-419a-85d1-2dd66fe2a04d"
            },
            {
              "name": "associated compliance team group case",
              "item": [
                {
                  "name": "Get deal ID Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})"
                        ],
                        "type": "text/javascript",
                        "id": "11c1eafd-0c69-402e-ad67-21b4aff8e870"
                      }
                    }
                  ],
                  "id": "8e4785d8-589e-466c-a61f-2383daa1f9a2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Assign Associated Compliance Team group to a deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"This is InternalDealLeadUser\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.memberType).to.eq('AssociatedComplianceTeamGroup');\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "195faa8f-f137-44a2-af31-b07f88abb282"
                      }
                    }
                  ],
                  "id": "550c27b6-7258-4323-b6e5-e543c6ac7cc1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"{{dealId}}\",\r\n    \"memberId\": \"fd74774c-8eb2-431c-98fb-5f403520f5ef\",\r\n    \"memberType\": \"AssociatedComplianceTeamGroup\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "List a specific deal member by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "6a838758-cb4f-44bf-a6a4-9033d6bf56b9"
                      }
                    }
                  ],
                  "id": "a1732510-6a10-442e-9ddc-b86a8634ca85",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Change the member type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "595a3fcc-8e86-4a7d-a28c-1ec87a20e72c"
                      }
                    }
                  ],
                  "id": "2829f887-df27-487d-9ac1-0ff5205f8a64",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"memberType\": \"AssociatedComplianceTeamUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "ebf51f75-98b4-4146-a589-723cd2dc631e"
                      }
                    }
                  ],
                  "id": "64a577b1-2df7-4db4-9247-c0c514dfee89",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                }
              ],
              "id": "5d7c5ee3-025f-465b-af36-74d322212b71"
            },
            {
              "name": "company advisor group case",
              "item": [
                {
                  "name": "Get deal ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})"
                        ],
                        "type": "text/javascript",
                        "id": "51aa353c-6b9b-4762-81f7-f91b5f25cb7d"
                      }
                    }
                  ],
                  "id": "bcefe29b-acc7-4513-9589-c49bef9a7cb8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Assign company advisor group to a deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"This is InternalDealLeadUser\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.memberType).to.eq('CompanyAdvisorGroup');\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "91d8291b-1c9a-4a5f-8f1c-12c6bf424024"
                      }
                    }
                  ],
                  "id": "03862c59-2ffc-499d-b77d-1659e3f6e8b1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"{{dealId}}\",\r\n    \"memberId\": \"fd74774c-8eb2-431c-98fb-5f403520f5ef\",\r\n    \"memberType\": \"CompanyAdvisorGroup\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "List a specific deal member by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "2332e4b0-3446-4177-bfb0-ba2d7e7197a0"
                      }
                    }
                  ],
                  "id": "d91b8caf-3220-4437-bd9c-e67a992441eb",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Change the member type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "5e3fea1b-47e7-4a3d-a503-749a43d4b86a"
                      }
                    }
                  ],
                  "id": "ab0a3d73-28c6-45e4-b143-2f74f6ec822d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"memberType\": \"AssociatedComplianceTeamUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "72ee417b-17a2-429d-ab84-fa159fcd4685"
                      }
                    }
                  ],
                  "id": "e6babd75-8a82-4cc2-9770-5030cfb6ce2d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                }
              ],
              "id": "ad64c127-d0ae-438a-adf3-ab3f5327a55c"
            },
            {
              "name": "company advisor user case",
              "item": [
                {
                  "name": "Get deal ID Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})"
                        ],
                        "type": "text/javascript",
                        "id": "4a037428-804c-4fb8-b123-82a70a38cc5e"
                      }
                    }
                  ],
                  "id": "046dc3d8-186f-4957-982d-63427815ea8c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Assign company advisor user to a deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"This is InternalDealLeadUser\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.memberType).to.eq('CompanyAdvisorUser');\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "c631346d-50e1-4f13-b566-b73302d67e81"
                      }
                    }
                  ],
                  "id": "4929dc34-ee3e-4409-a88b-0d7f291c10b9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"{{dealId}}\",\r\n    \"memberId\": \"EE3034BA-ECCC-44F5-BDB4-93EAF6679944\",\r\n    \"memberType\": \"CompanyAdvisorUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "List a specific deal member by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "ce42c976-65eb-43b9-a1de-8f03960919e2"
                      }
                    }
                  ],
                  "id": "3c30dc57-af6b-4b36-9d60-7e3338dfe09a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Change the member type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "67ff317c-def1-4d27-86f9-50afbc010418"
                      }
                    }
                  ],
                  "id": "d0f9a4d2-d481-42fd-a35b-8c4f686d01f6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"memberType\": \"AssociatedComplianceTeamUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "5b6f3bda-ec0d-43d9-b5e4-6fb121c7e45f"
                      }
                    }
                  ],
                  "id": "76fe89da-8591-486d-82d5-928d8a6d1da0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                }
              ],
              "id": "d578506f-ada8-4679-ae04-64870197981a"
            },
            {
              "name": "record visibility user case",
              "item": [
                {
                  "name": "Get deal ID Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})"
                        ],
                        "type": "text/javascript",
                        "id": "cae7b53d-e74f-432e-81fc-f37ad1f3279c"
                      }
                    }
                  ],
                  "id": "32cd1f00-ea9c-477e-9af9-87fd8b3e4d94",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Assign Record Visibility User to a deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"This is InternalDealLeadUser\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.memberType).to.eq('RecordVisibilityUser');\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "51818c75-3c26-4d08-9845-913b2610f000"
                      }
                    }
                  ],
                  "id": "bc8c7404-e497-42be-9acf-b8235bb9b941",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"{{dealId}}\",\r\n    \"memberId\": \"EE3034BA-ECCC-44F5-BDB4-93EAF6679944\",\r\n    \"memberType\": \"RecordVisibilityUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "List a specific deal member by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "87006078-d22a-4b40-8b09-95d60bfdafd1"
                      }
                    }
                  ],
                  "id": "78977232-bc6e-4773-b5ac-58e8fe65c331",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Change the member type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "2a35bb98-92dd-4a27-b4a4-a11e12c82df5"
                      }
                    }
                  ],
                  "id": "4ed8ca5e-8580-46b9-839e-179f5d86b2c0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"memberType\": \"AssociatedComplianceTeamUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "c3c3ba0b-83c6-4de8-83b3-66073163b9d2"
                      }
                    }
                  ],
                  "id": "581729a2-813b-4d7d-9117-73bddca9409d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                }
              ],
              "id": "41a71de7-2a22-4369-b229-2537ce2e2a9b"
            },
            {
              "name": "Deal Members Negative",
              "item": [
                {
                  "name": "Assign Record Visibility group to a deal without dealId",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "a60fe5b9-65d7-4ef2-b321-ad1e679b1975"
                      }
                    }
                  ],
                  "id": "d1624b26-f138-400c-8601-a9e5235feeda",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"\",\r\n    \"memberId\": \"fd74774c-8eb2-431c-98fb-5f403520f5ef\",\r\n    \"memberType\": \"RecordVisibilityGroup\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "Assign Record Visibility group to a deal without memberType",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "117d4e41-5f89-464b-879c-d320db5f4640"
                      }
                    }
                  ],
                  "id": "700afb9d-d5d0-4d2d-8c53-64ffa16b9501",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"4fa02957-7cc6-4767-bec5-08d92c2971d8\",\r\n    \"memberId\": \"\",\r\n    \"memberType\": \"RecordVisibilityGroup\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "Assign Record Visibility group to a deal without memberId Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "44ec73b9-6bb2-43e8-bb4d-1cda97258942"
                      }
                    }
                  ],
                  "id": "ced78290-65c0-4fdd-b203-1db1bf691834",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"4fa02957-7cc6-4767-bec5-08d92c2971d8\",\r\n    \"memberId\": \"fd74774c-8eb2-431c-98fb-5f403520f5ef\",\r\n    \"memberType\": \"\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "Assign Record Visibility group to multiple deals",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "f77fdb57-71a8-4c98-84a4-9f3e9bb6730c"
                      }
                    }
                  ],
                  "id": "4245b5e3-887b-418d-935f-1d4649a98c84",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": [\"4fa02957-7cc6-4767-bec5-08d92c2971d8\",\"f7f3b1f5-abd1-4465-f56b-08d92ff411a8\"],\r\n    \"memberId\": \"fd74774c-8eb2-431c-98fb-5f403520f5ef\",\r\n    \"memberType\": \"RecordVisibilityGroup\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "Assign Record Visibility group to a deal with multiple memberIds",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "acdc447f-7ad3-4c46-bbc5-98ae40275f81"
                      }
                    }
                  ],
                  "id": "a8d22e83-f001-4520-8349-b8152e387508",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"4fa02957-7cc6-4767-bec5-08d92c2971d8\",\r\n    \"memberId\": [\"fd74774c-8eb2-431c-98fb-5f403520f5ef\",\"EE3034BA-ECCC-44F5-BDB4-93EAF6679944\"],\r\n    \"memberType\": \"RecordVisibilityGroup\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "Assign Record Visibility group to a deal with multiple memberTypes",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "5e4d806b-be55-4ce9-82c1-74af63b8304c"
                      }
                    }
                  ],
                  "id": "1b2aa8c2-2868-4307-8475-a5e76142e784",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"4fa02957-7cc6-4767-bec5-08d92c2971d8\",\r\n    \"memberId\": \"fd74774c-8eb2-431c-98fb-5f403520f5ef\",\r\n    \"memberType\": [\"RecordVisibilityGroup\", \"CompanyAdvisorUser\"]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                }
              ],
              "id": "6a4f4e68-931d-4a79-94b4-7bc975a96b47"
            },
            {
              "name": "record visibility group case",
              "item": [
                {
                  "name": "Get deal ID Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})"
                        ],
                        "type": "text/javascript",
                        "id": "3eaa730f-adb8-4024-bab9-a1edbfc6c9e3"
                      }
                    }
                  ],
                  "id": "c72f1eaa-15f6-4b95-9c7a-0d60366518e8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "Assign Record Visibility group to a deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealMemberId\", jsonData.id);\r",
                          "\r",
                          "pm.test(\"This is InternalDealLeadUser\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.memberType).to.eq('RecordVisibilityGroup');\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "7ec6f4a8-480f-4929-a9db-4b2d7400442e"
                      }
                    }
                  ],
                  "id": "8de9c013-7d0c-4cb6-8acb-b22425bf2c66",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"dealId\": \"{{dealId}}\",\r\n    \"memberId\": \"fd74774c-8eb2-431c-98fb-5f403520f5ef\",\r\n    \"memberType\": \"RecordVisibilityGroup\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members"
                  },
                  "response": []
                },
                {
                  "name": "List a specific deal member by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "0ac6eabe-8ce5-4986-aca0-c49d196eb4bf"
                      }
                    }
                  ],
                  "id": "c0de204e-a2f5-4a23-bc53-16dadbbc02bf",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Change the member type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "676be3e5-4b4f-42ed-8844-193bf866d028"
                      }
                    }
                  ],
                  "id": "461171cf-f5a1-4cde-9faf-34b715ce8240",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"memberType\": \"AssociatedComplianceTeamUser\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "c77e0af1-e6f6-4eee-8f49-dc2ad69ead14"
                      }
                    }
                  ],
                  "id": "abbfb464-e0da-4927-ae14-e5b02c202982",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deal-members/{{dealMemberId}}"
                  },
                  "response": []
                }
              ],
              "id": "78172496-4d10-44e6-8381-89ae25056359"
            },
            {
              "name": "Create a new deal",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})\r",
                      "\r",
                      "var jsonData = JSON.parse(responseBody);\r",
                      "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                      "\r",
                      "pm.test(\"The deal status is Tentative\", function(){\r",
                      "    var jsonData =pm.response.json();\r",
                      "pm.expect(jsonData.status).to.eq('Tentative');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"The compliance status is Needs Review\", function(){\r",
                      "    var jsonData =pm.response.json();\r",
                      "pm.expect(jsonData.complianceStatus).to.eq('NeedsReview');\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "995d8cfe-77a5-4f7c-82a6-a4f05acea36b"
                  }
                }
              ],
              "id": "59776dfa-66fd-4ec0-8e55-78aa8b966f6f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Deal\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n    \"companies\": [\r\n        {\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLeadUser\"\r\n        }\r\n    ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/deals"
              },
              "response": []
            },
            {
              "name": "Create a new deal",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"id\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"clientId\": {\r",
                      "      \"type\": \"integer\"\r",
                      "    },\r",
                      "    \"name\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"description\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"categoryId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"status\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"complianceStatus\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"startDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"completionDate\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"isUrgent\": {\r",
                      "      \"type\": \"boolean\"\r",
                      "    },\r",
                      "    \"lastModifiedByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"lastModifiedTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdByUserId\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"createdTimestamp\": {\r",
                      "      \"type\": \"string\"\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"id\",\r",
                      "    \"clientId\",\r",
                      "    \"name\",\r",
                      "    \"description\",\r",
                      "    \"categoryId\",\r",
                      "    \"status\",\r",
                      "    \"complianceStatus\",\r",
                      "    \"startDate\",\r",
                      "    \"completionDate\",\r",
                      "    \"isUrgent\",\r",
                      "    \"lastModifiedByUserId\",\r",
                      "    \"lastModifiedTimestamp\",\r",
                      "    \"createdByUserId\",\r",
                      "    \"createdTimestamp\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Creation date is today\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    var currTime = new Date();\r",
                      "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                      "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                      "    var yyyy = currTime.getFullYear();\r",
                      "    var hh = currTime.getHours() - 3;\r",
                      "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                      "\r",
                      "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                      "    \r",
                      "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                      "})\r",
                      "\r",
                      "var jsonData = JSON.parse(responseBody);\r",
                      "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                      "\r",
                      "pm.test(\"The deal status is Tentative\", function(){\r",
                      "    var jsonData =pm.response.json();\r",
                      "pm.expect(jsonData.status).to.eq('Tentative');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"The compliance status is Needs Review\", function(){\r",
                      "    var jsonData =pm.response.json();\r",
                      "pm.expect(jsonData.complianceStatus).to.eq('NeedsReview');\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "aa9e88db-4b88-4073-aa87-9ed18d631240"
                  }
                }
              ],
              "id": "0c084d77-1338-453f-b1e6-f484bdab4512",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom Deal\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n    \"companies\": [\r\n        {\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }\r\n    ],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalInsiders\"\r\n        }\r\n    ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}$expand=DealMembers"
              },
              "response": []
            },
            {
              "name": "List all deal members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "b64519d0-7096-4543-94e9-17aa022e8d1b"
                  }
                }
              ],
              "id": "8b775dd3-46e5-4177-9aa1-7bbd6f0ba61c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/deal-members"
              },
              "response": []
            }
          ],
          "id": "873867c4-e7cf-4f09-9e01-66fc639d4a4d"
        },
        {
          "name": "DEPRECATED Comments",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd849072-9215-498a-b0c0-edd829a7dbbd",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"visibility\", jsonData.value[0].visibility);",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"entityId\", jsonData.value[0].entityId);",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"entityType\", jsonData.value[0].entityType);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "b34a6397-67ec-4bcc-9f1d-f1e7238e327f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/comments?$filter=EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "comments"
                  ],
                  "query": [
                    {
                      "key": "$filter",
                      "value": "EntityId eq 4fa02957-7cc6-4767-bec5-08d92c2971d8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e1d4f942-7c18-4234-a85e-fc12bdd0c852",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"commentId\", jsonData.id);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "100a166e-4f48-4b1e-9cd3-0738f2cd8e04",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"entityType\": \"Deal\",\r\n  \"visibility\": \"{{visibility}}\",\r\n  \"entityId\": \"{{entityId}}\",\r\n  \"text\" : \"im here just to check the comments\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/comments"
              },
              "response": []
            },
            {
              "name": "patch",
              "id": "fdc4df3e-28b8-45ef-ba34-6f9404356b3d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"visibility\": \"Private\",\r\n  \"text\" : \"wowww did you just comment thatt?\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{ApiBaseUrl}}/v1/comments/{{commentId}}"
              },
              "response": []
            },
            {
              "name": "getById",
              "id": "3baf2b2a-4fb6-4cc2-9bf4-8246bfc34d04",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/comments(Id=17d6a19a-6eb8-4560-7ce5-08d97d12ebc3,EntityId=4fa02957-7cc6-4767-bec5-08d92c2971d8)"
              },
              "response": []
            },
            {
              "name": "delete",
              "id": "3d4667a7-6b60-4a99-9069-7443fcd55198",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/comments/{{commentId}}"
              },
              "response": []
            }
          ],
          "id": "f941dadc-3461-4651-8337-72de73f336a6"
        },
        {
          "name": "DEPRECATED ContactsUnderTent",
          "item": [
            {
              "name": "Create multiple contacts under tent",
              "item": [
                {
                  "name": "create 2 ContactUnderTent for 1 company",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "a8b15092-60e8-4c69-be0a-cfc591ca3d93"
                      }
                    }
                  ],
                  "id": "9bd029be-b3db-4ba7-ae00-85fd96cd50cc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 22 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"5a0882ba-67e9-eb11-aae9-0e29a95e9f25\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"name 1 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },{\r\n                \"name\": \"name 2 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"5e0882ba-67e9-eb11-aae9-0e29a95e9f25\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 2\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"5e0882ba-67e9-eb11-aae9-0e29a95e9f25\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"5e0882ba-67e9-eb11-aae9-0e29a95e9f25\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 2\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "List the expanded deal with contacts under tent",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"The deal is not draft\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isDraft).to.eq(false);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal is urgent\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isUrgent).to.eq(true);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal status is Active\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.status).to.eq('Active');\r",
                          "});\r",
                          "\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is contact under the tent name in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].name).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent title in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].title).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent is linked with company\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].companyId).to.exist;\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "04f27b9c-686f-468e-ba25-ed38cb50c21a"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "15e35b0b-034e-4fb6-bf4a-46fdff9eff68"
                      }
                    }
                  ],
                  "id": "4956bab1-a88a-450e-994e-ebb40b4d8d6e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Companies($expand=ContactsUnderTent)",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Companies($expand=ContactsUnderTent)"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "04796e73-0ee4-4318-b356-2c516b65a0aa"
                      }
                    }
                  ],
                  "id": "eacef059-00b1-49f7-aa8a-21575780b83d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "d42ea59b-bb01-4516-ac7b-8f7e70e091cf"
            },
            {
              "name": "Create contact under the tent wihtout added date",
              "item": [
                {
                  "name": "Create",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "b888c9cc-3726-4893-8890-5e725f07f007"
                      }
                    }
                  ],
                  "id": "7694eaa9-db5f-48d9-979c-8220be4e9a6c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 22 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"name 1 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },{\r\n                \"name\": \"name 2 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 2\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 2\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "List the expanded deal with contacts under tent",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"The deal is not draft\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isDraft).to.eq(false);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal is urgent\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isUrgent).to.eq(true);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal status is Active\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.status).to.eq('Active');\r",
                          "});\r",
                          "\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is contact under the tent name in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].name).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent title in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].title).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent is linked with company\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].companyId).to.exist;\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "efa14d29-171a-4dc0-b44c-f4cce475e8b8"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "33cfe41f-8e90-4dad-8b65-08271b412636"
                      }
                    }
                  ],
                  "id": "46354870-2552-42f4-835f-2740b49a5c9a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Companies($expand=ContactsUnderTent)",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Companies($expand=ContactsUnderTent)"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "9278e61a-6bfd-4dbd-84c2-06a364a879ba"
                      }
                    }
                  ],
                  "id": "f32aa0e1-b321-47af-acef-2a0882d2dae5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "1fa68ee7-1b3d-4d2e-884f-88124755f84d"
            },
            {
              "name": "Create 1 contact under the tent for each company",
              "item": [
                {
                  "name": "create 1  ContactUnderTent per  company",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "023c796f-640b-4111-9b49-6e0450577f4e"
                      }
                    }
                  ],
                  "id": "acda130e-fd6f-4d4f-9644-03a944155661",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 229 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company1\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"name 1 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company1\"\r\n                    }\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals?$expand=Companies($expand=ContactsUnderTent)",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Companies($expand=ContactsUnderTent)"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List the expanded deal with contacts under tent",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"The deal is not draft\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isDraft).to.eq(false);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal is urgent\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isUrgent).to.eq(true);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal status is Active\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.status).to.eq('Active');\r",
                          "});\r",
                          "\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is contact under the tent name in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].name).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent title in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].title).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent is linked with company\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].companyId).to.exist;\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "3fa7275a-df5c-437e-90c3-1d5ce421f98c"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "8d401b62-2ecf-4176-84ea-580af142ae39"
                      }
                    }
                  ],
                  "id": "6aebf29f-dc7a-40c9-9b1d-d26bccf2ed38",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Companies($expand=ContactsUnderTent)",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Companies($expand=ContactsUnderTent)"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "4328d5ce-4b45-45b7-bff5-720d4dea4529"
                      }
                    }
                  ],
                  "id": "81fb92c8-a9c6-4f0b-96cf-31a3b30081ee",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "6ae0052d-d800-4de8-9917-31907c055b0b"
            },
            {
              "name": "Create contact under tent without name",
              "item": [
                {
                  "name": "Create",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "866f551c-580d-44fb-af0e-5a244db8ef83"
                      }
                    }
                  ],
                  "id": "7aeca1e4-7f9f-407b-8901-7dd76fd3d843",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 22 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },{\r\n                \"name\": \"name 2 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 2\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 2\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "List the expanded deal with contacts under tent",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"The deal is not draft\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isDraft).to.eq(false);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal is urgent\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isUrgent).to.eq(true);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal status is Active\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.status).to.eq('Active');\r",
                          "});\r",
                          "\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is contact under the tent name in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].name).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent title in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].title).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent is linked with company\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].companyId).to.exist;\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "7b3c31b8-3dc3-44b8-bf9f-f8f1f59162ab"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "21fc08b4-6ab5-4a48-99d5-0db456aba607"
                      }
                    }
                  ],
                  "id": "eda111d0-6fcf-4d1f-9d35-c0c5e76707d8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Companies($expand=ContactsUnderTent)",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Companies($expand=ContactsUnderTent)"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "934b3b0b-34be-476f-b1be-eddc19807145"
                      }
                    }
                  ],
                  "id": "089881a8-1542-4cb3-a53e-8c57212d8832",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "81251202-ce81-455b-99e4-36f185e47fc2"
            },
            {
              "name": "Create contact under tent without title",
              "item": [
                {
                  "name": "Create",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "f9576b7d-78c4-4b8a-868a-3af871662604"
                      }
                    }
                  ],
                  "id": "7730a776-0dc8-43be-a5ac-6a8c1745416d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 22 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"title 1 contactsunderTent\",\r\n                \"title\": \"\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },{\r\n                \"name\": \"name 2 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 2\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 2\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "List the expanded deal with contacts under tent",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"The deal is not draft\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isDraft).to.eq(false);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal is urgent\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isUrgent).to.eq(true);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal status is Active\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.status).to.eq('Active');\r",
                          "});\r",
                          "\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is contact under the tent name in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].name).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent title in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].title).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent is linked with company\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].companyId).to.exist;\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "99fc3138-eb1f-4700-a521-614dc95f927a"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "a50cb683-50c2-424d-ba4a-a18ec0b4c4ba"
                      }
                    }
                  ],
                  "id": "b6f0da61-06aa-462e-bbff-cfac16895e60",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Companies($expand=ContactsUnderTent)",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Companies($expand=ContactsUnderTent)"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "bac872e6-416d-4a8f-9749-daf14b6bf88a"
                      }
                    }
                  ],
                  "id": "ebc9bd10-24d6-4046-9888-92917952a19f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "0aa21d93-b719-442c-a846-92dbc14fb0e6"
            },
            {
              "name": "Create contact under tent without company object",
              "item": [
                {
                  "name": "Create",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "e0d9e506-7e17-4335-8c64-9e6ccb1a174c"
                      }
                    }
                  ],
                  "id": "12a46bcb-623f-42f2-aa29-e156a4bdfa89",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 22 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"title 1 contactsunderTent\",\r\n                \"title\": \"\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\"\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 2\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 2\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "List the expanded deal with contacts under tent",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"The deal is not draft\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isDraft).to.eq(false);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal is urgent\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.isUrgent).to.eq(true);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"The deal status is Active\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.status).to.eq('Active');\r",
                          "});\r",
                          "\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is contact under the tent name in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].name).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent title in the response\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].title).to.exist;\r",
                          "});\r",
                          "\r",
                          "pm.test(\"There is contact under the tent is linked with company\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.companies[0].contactsUnderTent[0].companyId).to.exist;\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "239d8435-d802-4422-9aba-2fb1b5583da2"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "84370000-9eec-4ff7-9e21-31ba3d881170"
                      }
                    }
                  ],
                  "id": "48cfa710-8375-417c-9af3-6d8f105912e3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Companies($expand=ContactsUnderTent)",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Companies($expand=ContactsUnderTent)"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete the deal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "7531b8b1-5a82-4053-aac4-d7c44c56949e"
                      }
                    }
                  ],
                  "id": "aac0bd68-6389-4d6f-bb99-b39a6e849864",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "7d2afe0f-2157-4bd1-b042-1e065cd61d40"
            },
            {
              "name": "patch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "d2187b90-6b30-4a03-a917-aa66b6b50635"
                  }
                }
              ],
              "id": "024cb7d8-e7b2-4ef0-8984-f53c64a44181",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom ContactUnderTent\",\r\n    \"userId\": 7603,\r\n    \"companyId\": \"63D8B0F9-C293-4ED1-294E-08D93C6D0CB3\",\r\n    \"addedDate\": \"2023-01-01T00:00:00+00:00\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/contacts-under-tent/:contactUnderTentId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "contacts-under-tent",
                    ":contactUnderTentId"
                  ],
                  "variable": [
                    {
                      "id": "afa4ec23-c42e-4c4b-8576-325e000c4a2e",
                      "key": "contactUnderTentId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "put",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 204 or 404\", function () {\r",
                      "    if (pm.response.code == 204) {\r",
                      "        pm.response.to.have.status(204);\r",
                      "    }\r",
                      "    else {\r",
                      "        pm.response.to.have.status(404);\r",
                      "    }\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Response body is valid\", function () {\r",
                      "    if (pm.response.code == 404) {\r",
                      "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                      "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "2e99202c-3c02-4c65-b29e-9e0e5a94b35e"
                  }
                }
              ],
              "id": "967a6ab2-0cee-4345-a0b7-f8d88d452dc7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"ControlRoom ContactUnderTent\",\r\n    \"userId\": 7603,\r\n    \"companyId\": \"63D8B0F9-C293-4ED1-294E-08D93C6D0CB3\",\r\n    \"addedDate\": \"2023-01-01T00:00:00+00:00\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/contacts-under-tent/:contactUnderTentId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "contacts-under-tent",
                    ":contactUnderTentId"
                  ],
                  "variable": [
                    {
                      "id": "6cc4b779-0a8e-4970-9bde-9204397b5fe2",
                      "key": "contactUnderTentId",
                      "value": "4FA02957-7CC6-4767-BEC5-08D92C2971D8"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "25a6e7cd-2ce7-47dd-9d41-7cf638542d72"
        },
        {
          "name": "DEPRECATEDDeal Restrictions",
          "item": [
            {
              "name": "Restrict internal deal lead",
              "item": [
                {
                  "name": "create resrictions through the deal endpoint",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "0c84130c-8ab6-4c32-bb21-9987a37381d7"
                      }
                    }
                  ],
                  "id": "e6c10844-bb71-49ff-92e6-ee630f0e325a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 22 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"name 1 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },{\r\n                \"name\": \"name 2 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 2\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": null,\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 2\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "expand the restrictions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealRestrictionId\", jsonData.id);\r",
                          "\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is at least one employee restriction\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].employeeRestriction).to.exist;});\r",
                          "\r",
                          "pm.test(\"There is at least one employee restriction\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].employeeRestriction).to.eq('InternalDealLead');});\r",
                          "\r",
                          "pm.test(\"The restriction has name\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].name).to.exist;});\r",
                          "\r",
                          "pm.test(\"The restriction has start date\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].startDate).to.exist;});"
                        ],
                        "type": "text/javascript",
                        "id": "819a66ca-9caf-4384-956a-bf86a413761d"
                      }
                    }
                  ],
                  "id": "cffd0209-99e0-4e0e-b0b6-71a4924c3cac",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Restrictions",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Restrictions"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "33c00a47-6195-4b85-b3c5-1d6ed4ffb981"
                      }
                    }
                  ],
                  "id": "a930547c-d582-498a-9960-e77581e5abc0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "9a26cc6c-2a5b-4d9a-a184-c5cccdc38216"
            },
            {
              "name": "Restrict InternalDealLead, InternalDealAssociates",
              "item": [
                {
                  "name": "create resrictions through the deal endpoint",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "ae6285c9-aea5-4c1f-8bfc-1b29d828ff3f"
                      }
                    }
                  ],
                  "id": "b121c4f7-3229-4dd2-9394-4b4a55bebfaf",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 22 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"name 1 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },{\r\n                \"name\": \"name 2 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 2\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead, InternalDealAssociates\", \r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealLead, InternalDealAssociates\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 2\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "expand the restrictions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealRestrictionId\", jsonData.id);\r",
                          "\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is at least one employee restriction\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].employeeRestriction).to.eq('InternalDealLead, InternalDealAssociates');});\r",
                          "\r",
                          "pm.test(\"The restriction has name\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].name).to.exist;});\r",
                          "\r",
                          "pm.test(\"The restriction has start date\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].startDate).to.exist;});"
                        ],
                        "type": "text/javascript",
                        "id": "8d1f5e16-415c-4100-b315-41f64bca9178"
                      }
                    }
                  ],
                  "id": "1baae712-8748-44a1-9f03-a1ff496f8361",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Restrictions",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Restrictions"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "a2a3fccc-5e6e-4902-938f-0726cff7026c"
                      }
                    }
                  ],
                  "id": "9e112ead-3f71-4b66-8959-a7866cabd06f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "05c7f427-2f30-47bb-b954-384265952830"
            },
            {
              "name": "Restrict internal deal associates",
              "item": [
                {
                  "name": "create resrictions through the deal endpoint",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "482a1953-6b88-485a-83e5-41bd207c2c22"
                      }
                    }
                  ],
                  "id": "26be534d-90fc-48af-8b4f-b0f7a709a107",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 22 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"name 1 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },{\r\n                \"name\": \"name 2 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 2\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealAssociates\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"InternalDealAssociates\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 2\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "expand the restrictions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealRestrictionId\", jsonData.id);\r",
                          "\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is at least one employee restriction\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].employeeRestriction).to.eq('InternalDealAssociates');});\r",
                          "\r",
                          "pm.test(\"The restriction has name\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].name).to.exist;});\r",
                          "\r",
                          "pm.test(\"The restriction has start date\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].startDate).to.exist;});"
                        ],
                        "type": "text/javascript",
                        "id": "915326a8-88eb-417a-b43d-08e84885b545"
                      }
                    }
                  ],
                  "id": "f3380cbf-85d6-48bd-82c8-c06d89736ae5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Restrictions",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Restrictions"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "e0d7e98c-b225-4d40-b5a2-f91fa09c4c6d"
                      }
                    }
                  ],
                  "id": "74960e35-3923-4644-937f-c37726551ed1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "9974f04a-5216-47a0-99f2-a97dc0c78bac"
            },
            {
              "name": "Restrict AssociatedComplianceTeam",
              "item": [
                {
                  "name": "create resrictions through the deal endpoint",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "77a8890a-53b9-4545-a89e-5dead6cf9527"
                      }
                    }
                  ],
                  "id": "e0411148-96d4-49c7-872c-e54bd8489139",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 22 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"name 1 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },{\r\n                \"name\": \"name 2 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 2\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"AssociatedComplianceTeam\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"AssociatedComplianceTeam\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 2\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "expand the restrictions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealRestrictionId\", jsonData.id);\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is at least one employee restriction\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].employeeRestriction).to.eq('AssociatedComplianceTeam');});\r",
                          "\r",
                          "pm.test(\"The restriction has name\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].name).to.exist;});\r",
                          "\r",
                          "pm.test(\"The restriction has start date\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].startDate).to.exist;});"
                        ],
                        "type": "text/javascript",
                        "id": "92e5da66-6876-452d-bb27-a29e566740df"
                      }
                    }
                  ],
                  "id": "317a1b73-4361-4184-be77-4374bc8bff8a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Restrictions",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Restrictions"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "7969d7b8-612c-4741-960a-c7bb340ad3de"
                      }
                    }
                  ],
                  "id": "bc4d8e96-5e9b-4784-8319-951f27e4b9f0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "121d57bd-dc46-45ac-b4be-e52ef73d3197"
            },
            {
              "name": "Restrict AllEmployees",
              "item": [
                {
                  "name": "create resrictions through the deal endpoint",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "5a2b1a1e-606c-483d-9d9d-c6c7935ab25e"
                      }
                    }
                  ],
                  "id": "9dbb9a69-5425-49c2-a800-45dda671af23",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"ControlRoom Deal 22 July\",\r\n    \"description\": \"ControlRoom Deal description\",\r\n    \"categoryId\": \"caaff113-cc2b-4f00-f56c-08d92ff411a8\",\r\n    \"status\": \"Active\",\r\n    \"complianceStatus\": \"NeedsReview\",\r\n    \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n    \"completionDate\": \"2023-01-12T00:00:00+00:00\",\r\n    \"isUrgent\": true,\r\n     \"companies\": [{\r\n            \"name\": \"ControlRoom Company\",\r\n            \"contactsUnderTent\": [{\r\n                \"name\": \"name 1 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },{\r\n                \"name\": \"name 2 contactsunderTent\",\r\n                \"title\": \"title 1 contactsunderTent\",\r\n                \"addedDate\":\"2023-01-01T00:00:00+00:00\",\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"companyAdvisors\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            }],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 2\",\r\n            \"contactsUnderTent\": [\r\n            ],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Company 3\",\r\n            \"contactsUnderTent\": [],\r\n            \"dataDestructionCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"dataDestructionRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"dataDestructionStatus\": \"NotAvailable\",\r\n            \"ndaCompletedDate\": \"2023-01-12T00:00:00+00:00\",\r\n            \"ndaRequestedDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"ndaStatus\": \"NotAvailable\",\r\n            \"status\": \"Paused\",\r\n            \"typeId\": \"A1EDA3A9-9CE9-426E-B99D-08D93C802F28\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"a68ac5c6-db6c-4087-85da-95c843fef759\",\r\n            \"memberType\": \"RecordVisibilityUser\"\r\n        },\r\n        {\r\n            \"memberId\": \"d5852733-bb5e-4387-ab9a-5cf23b29e507\",\r\n            \"memberType\": \"InternalDealLeadUser\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"ControlRoom Restriction\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"AllEmployees\", \r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company\"\r\n                    }\r\n            },\r\n            {\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 3\"\r\n                    }\r\n            }] \r\n        },\r\n         {\r\n            \"name\": \"ControlRoom Restriction 2\",\r\n            \"endDate\": null,\r\n            \"startDate\": \"2023-01-01T00:00:00+00:00\",\r\n            \"employeeRestriction\": \"AllEmployees\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"ControlRoom Company 2\"\r\n                    }\r\n            }] \r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/deals"
                  },
                  "response": []
                },
                {
                  "name": "expand the restrictions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"dealRestrictionId\", jsonData.id);\r",
                          "\r",
                          "\r",
                          "\r",
                          "pm.test(\"There is at least one employee restriction\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].employeeRestriction).to.eq('AllEmployees');});\r",
                          "\r",
                          "pm.test(\"The restriction has name\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].name).to.exist;});\r",
                          "\r",
                          "pm.test(\"The restriction has start date\", function(){\r",
                          "    var jsonData =pm.response.json();\r",
                          "pm.expect(jsonData.restrictions[0].startDate).to.exist;});"
                        ],
                        "type": "text/javascript",
                        "id": "bfd25a1a-211e-4d60-9ef9-a4821cfd2aa5"
                      }
                    }
                  ],
                  "id": "d4c639d0-1986-4a39-abe8-86b3deaa6535",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/deals/{{dealId}}?$expand=Restrictions",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "deals",
                        "{{dealId}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Restrictions"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 204 or 404\", function () {\r",
                          "    if (pm.response.code == 204) {\r",
                          "        pm.response.to.have.status(204);\r",
                          "    }\r",
                          "    else {\r",
                          "        pm.response.to.have.status(404);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Response body is valid\", function () {\r",
                          "    if (pm.response.code == 404) {\r",
                          "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                          "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                          "    }\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "f11889e8-fb59-4db2-ad0b-13e66be4e198"
                      }
                    }
                  ],
                  "id": "e87d81ff-9e73-4fc4-9d61-7cd9c9063ad3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{ApiBaseUrl}}/v1/deals/{{dealId}}"
                  },
                  "response": []
                }
              ],
              "id": "3b8955ca-a5e0-4725-9868-f9d6e345f690"
            }
          ],
          "id": "88aaedd2-f3d7-49e2-833b-9da96d13088f"
        },
        {
          "name": "Screening Lists",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "getAll",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "85f2c995-c5d8-4779-8160-ed103aecf6e4",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "\r",
                          "var jsonData = JSON.parse(responseBody);\r",
                          "postman.setEnvironmentVariable(\"timeZone\", jsonData.value[0].timeZone);\r",
                          "postman.setEnvironmentVariable(\"listStatus\", jsonData.value[0].status);\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "93fc4429-afa4-4078-bc26-8e4d72ffb13c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/screening-lists?$expand=Records($expand=Deal)",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "screening-lists"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Records($expand=Deal)"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "c4ec90c9-5494-4db6-a2df-90d1fb09aa57"
            },
            {
              "name": "getById",
              "item": [
                {
                  "name": "getExistingId",
                  "item": [
                    {
                      "name": "set vars for deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b02da4bb-f02d-4351-85f6-3cf4279fbffb",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5baa9428-b90c-452e-bc85-ad7393307a8d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c8639f7e-5b78-4032-a858-be182eab10c1",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "f864e457-1d9a-4fc5-873c-2373dd38ee3d",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9ff10444-44d4-4b9f-a2a2-74e30d5ed925",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": false,\r\n     \"companies\": [{\r\n             \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "set vars for the screening list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fb8f1f78-3aa5-48f8-a8fb-5569e75cd08e",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"timeZone\", jsonData.value[0].timeZone);\r",
                              "postman.setEnvironmentVariable(\"listStatus\", jsonData.value[0].status);\r",
                              "postman.setEnvironmentVariable(\"someISIN\", \"some ISIN\")\r",
                              "postman.setEnvironmentVariable(\"someCUSIP\", \"some CUSIP\")"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "141eb8bc-8f35-4184-845d-09058f48c9f7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new list with company",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bbec105f-17c6-413b-aac9-5aa915fc0fa1",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "12306c4c-a415-4820-9552-5996818bcfcc",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomListName\", _.random(1, 1000) +\" \" + \"API screening list\")",
                              "",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomListDescription\", dateNow.toISOString() + \" \" + \"API screening list description\")",
                              "",
                              "",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "fbce9574-33d6-431a-a139-250c6c64eed7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomListName}}\",\r\n    \"description\": \"{{randomListDescription}}\",\r\n    \"timeZone\": \"{{timeZone}}\",\r\n    \"status\": \"{{listStatus}}\",\r\n    \"records\": [\r\n        {\r\n          \r\n          \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"securityName\": \"{{securitySearchCompanyName}}\",\r\n            \"dealId\": \"{{dealId}}\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-lists"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "dd2f3b7c-d9fb-481c-bdc2-8681bed76172",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5ab748b6-0f00-4d63-ac7e-ac7a940a5da0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists/{{screeningListId}}?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists",
                            "{{screeningListId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "d01c661b-8f5a-4fdc-982e-b52c31b8a26a"
                },
                {
                  "name": "getNonExistingId",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8a27fa5c-fb76-48f2-8304-bac5f6d59f3b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 404\", function () {\r",
                              "    pm.response.to.have.status(404);\r",
                              "});\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2ed9b3aa-bc5d-4537-b3d1-65c7fe93f862",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/screening-lists(1234567)"
                      },
                      "response": []
                    }
                  ],
                  "id": "86e0f34f-35be-48a6-a7e1-4e16324c0c53"
                }
              ],
              "id": "c8f9315a-9985-4cb0-892c-fb3c3fc460fe"
            },
            {
              "name": "create",
              "item": [
                {
                  "name": "create a screening list with a company",
                  "item": [
                    {
                      "name": "set vars for deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d87e4eff-37e1-4ba0-bbe2-71f31bc394b8",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9775cdd6-cfad-4c97-bb8c-4bc5ff253357",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3d449601-c731-4bad-ad6f-a8a75593b6ba",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "66bfd2f8-11f5-4ece-bed1-f16c422deb48",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3e009075-ad7a-491e-a26c-e478748919d6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": false,\r\n     \"companies\": [{\r\n             \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "set vars for the screening list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c34b26f3-3d9b-44de-b573-0e7dfeb53bc8",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"timeZone\", jsonData.value[0].timeZone);\r",
                              "postman.setEnvironmentVariable(\"listStatus\", jsonData.value[0].status);\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3c1adc73-88a4-443e-9a1a-01d9174e2905",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1d7bb71f-7f9c-4dd1-8745-fcf90d51ddc7",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "d9c15ccf-6dfa-4f2d-99c9-a1d7a200e88d",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomListName\", _.random(1, 1000) +\" \" + \"API screening list\")",
                              "",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomListDescription\", dateNow.toISOString() + \" \" + \"API screening list description\")",
                              "",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "863c60ba-d5d0-4d4c-889e-b361c180686f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomListName}}\",\r\n    \"description\": \"{{randomListDescription}}\",\r\n    \"timeZone\": \"{{timeZone}}\",\r\n    \"status\": \"{{listStatus}}\",\r\n    \"records\": [\r\n        {\r\n          \r\n          \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"securityName\": \"{{securitySearchCompanyName}}\",\r\n            \"dealId\": \"{{dealId}}\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-lists"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6f86d0c0-c3d8-41bc-a86a-cd42a5f1afc6",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6fdf38ff-eddb-43df-a755-b25883034707",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists/{{screeningListId}}?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists",
                            "{{screeningListId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "4a4bde99-e77e-425c-8d53-fa1767d4ea05"
                },
                {
                  "name": "create a screening list without a company",
                  "item": [
                    {
                      "name": "set vars for the screening list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "02ac5223-8e4d-4dfc-b14e-a1b244e35d0c",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"timeZone\", jsonData.value[0].timeZone);\r",
                              "postman.setEnvironmentVariable(\"listStatus\", jsonData.value[0].status);\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "387c5770-726e-4b71-ada8-eda98926ac1e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f815d188-e95f-4e6a-b86d-acba10fe5fd5",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "1f4aead8-241c-46cd-9c6e-a06394c79ef3",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomListName\", _.random(1, 1000) +\" \" + \"API screening list\")",
                              "",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomListDescription\", dateNow.toISOString() + \" \" + \"API screening list description\")",
                              "",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f9d6c691-6f0b-42d0-a2b3-884206fa80d2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomListName}}\",\r\n    \"description\": \"{{randomListDescription}}\",\r\n    \"timeZone\": \"{{timeZone}}\",\r\n    \"status\": \"{{listStatus}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-lists"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0cdf23c9-9c5c-4ecd-b744-543d9d371fc3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c06754d6-5ca6-48e1-a733-232111523d96",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists/{{screeningListId}}?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists",
                            "{{screeningListId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "a9b5a8f9-090b-4394-b67f-23524fdc40df"
                },
                {
                  "name": "create a screening list without name",
                  "item": [
                    {
                      "name": "set vars for the screening list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bfc1f9fd-0c7a-4a54-9941-5f8940b28c27",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"timeZone\", jsonData.value[0].timeZone);\r",
                              "postman.setEnvironmentVariable(\"listStatus\", jsonData.value[0].status);\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0dc77055-64e5-4e76-994a-86c425b8b773",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10d3d07e-3b14-456c-aa40-9f732a015cb6",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "f6395893-ab3c-4489-8f50-54cb23abfefb",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomListName\", _.random(1, 1000) +\" \" + \"API screening list\")",
                              "",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomListDescription\", dateNow.toISOString() + \" \" + \"API screening list description\")",
                              "",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "87e2184d-5cf7-4364-87c7-e106386cb5dc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"\",\r\n    \"description\": \"{{randomListDescription}}\",\r\n    \"timeZone\": \"{{timeZone}}\",\r\n    \"status\": \"{{listStatus}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-lists"
                      },
                      "response": []
                    }
                  ],
                  "id": "ccd5d4d2-0c11-48ba-8c89-f0a634e2008d"
                },
                {
                  "name": "create a screening list without description",
                  "item": [
                    {
                      "name": "set vars for the screening list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a3f6696b-fe6d-445a-a5f9-37feb8e39a0b",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"timeZone\", jsonData.value[0].timeZone);\r",
                              "postman.setEnvironmentVariable(\"listStatus\", jsonData.value[0].status);\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9e716a49-d42a-4446-a156-0ec7a64f570b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f644bcc4-eef3-4d31-a146-655d6067189f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 400\", function () {\r",
                              "    pm.response.to.have.status(400);\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "fd62526f-52b6-4df8-9733-81a6c584eb56",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomListName\", _.random(1, 1000) +\" \" + \"API screening list\")",
                              "",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomListDescription\", dateNow.toISOString() + \" \" + \"API screening list description\")",
                              "",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "02510acf-6fdd-43e5-b342-2fc0b7423478",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomListName}}\",\r\n    \"description\": \"\",\r\n    \"timeZone\": \"{{timeZone}}\",\r\n    \"status\": \"{{listStatus}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-lists"
                      },
                      "response": []
                    }
                  ],
                  "id": "e5f31e45-57c4-421a-b9de-38318b67a168"
                }
              ],
              "id": "e6c5fb1a-72e9-4b86-91f2-e57948d51aba"
            },
            {
              "name": "patch",
              "item": [
                {
                  "name": "edit screening lists",
                  "item": [
                    {
                      "name": "set vars for deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c541feb7-60e6-4e9c-b3ad-65c586de2bb6",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "22c33dbe-6408-4875-8491-0ca076890e3f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f421b39e-d2ed-4281-8038-b20e52a822fa",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "cfaeda2f-ad20-42de-b4f7-d47800ff3018",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6ac2629b-7696-421a-b831-b95b33e88ee9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": false,\r\n     \"companies\": [{\r\n             \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "set vars for the screening list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})"
                            ],
                            "type": "text/javascript",
                            "id": "5bca20b8-058a-4697-a3b9-5302754dbae5"
                          }
                        }
                      ],
                      "id": "49a36393-5397-41e2-a0c9-e72ff6d7a5c3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "962da947-ded1-4f4c-b50f-76a367e35fc3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "b1a7cc02-13e0-444c-9f18-2bd0ecb22485",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomListName\", _.random(1, 1000) +\" \" + \"API screening list\")",
                              "",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomListDescription\", dateNow.toISOString() + \" \" + \"API screening list description\")",
                              "",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4f7806f9-db51-4ee3-98bb-4f1a6d62657b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomListName}}\",\r\n    \"description\": \"{{randomListDescription}}\",\r\n    \"timeZone\": \"{{timeZone}}\",\r\n    \"status\": \"{{listStatus}}\",\r\n    \"records\": [\r\n        {\r\n          \r\n          \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"securityName\": \"{{securitySearchCompanyName}}\",\r\n            \"dealId\": \"{{dealId}}\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-lists"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e5bfb889-6af1-4e82-a82f-bf793f9b8d36",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6b0c6ebe-275f-46d2-a511-0d3544b10417",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists/{{screeningListId}}?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists",
                            "{{screeningListId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4ebc4970-1fa3-403b-a662-c5e2651966e6",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4fe808fb-8328-4640-8530-cf6b1d668f0e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"API CR ScreeningList PATCH\",\r\n    \"description\": \"API CR ScreeningList PATCH\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-lists/{{screeningListId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "3165eacf-5ee1-4b80-a23e-606c4c9814d3"
                }
              ],
              "id": "9ea29516-51ab-4c65-889d-4da261f7628e"
            },
            {
              "name": "delete",
              "item": [
                {
                  "name": "delete/deactivate a screening list",
                  "item": [
                    {
                      "name": "set vars for deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ab1f271b-bc5f-437e-8d30-38aee287fd03",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "606c45f3-1205-40e3-9969-32b96adfcbce",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cb7b2a7e-f39e-41ec-bdce-49e8d13c7056",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealId\", jsonData.id);\r",
                              "\r",
                              "    var jsonData =pm.response.json();\r",
                              "pm.test(\"The deal status is active\", function(){\r",
                              "pm.expect(jsonData.isDraft).to.eq(true);\r",
                              "});\r",
                              "\r",
                              "\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "eb7839ce-4f14-4df8-94d7-d939da6a51ea",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomDealName\", _.random(1, 1000) +\" \" + \"API deal\")",
                              "pm.environment.set(\"randomCompanyName1\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"randomCompanyName2\", _.random(1, 1000) +\" \" + \"API company\")",
                              "pm.environment.set(\"contactsUnderTentName\", _.random(1, 1000) +\" \" + \"API contact name\")",
                              "pm.environment.set(\"contactsUnderTentTitle\", _.random(1, 1000) +\" \" + \"API contact title\")",
                              "pm.environment.set(\"restrictionName\", _.random(1, 1000) +\" \" + \"API  restriction\")",
                              "",
                              "",
                              "",
                              "const uuid = Math.random().toString(36).substring(2, 15) +",
                              "        Math.random().toString(36).substring(2, 15);",
                              "const randomEmail =  uuid + \"@emaill.com\";",
                              "pm.environment.set(\"randomEmail\", randomEmail)",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomDealDescription\", dateNow.toISOString() + \" \" + \"API deal description\")",
                              "var startDate = (Date.now() + 86400000); pm.environment.set('startDate', new Date(startDate).toISOString())",
                              "var completionDate = (Date.now() + 172800000); pm.environment.set('completionDate', new Date(completionDate).toISOString())",
                              "var contactAddedDate = (Date.now() + 172800000); pm.environment.set('contactAddedDate', new Date(contactAddedDate).toISOString())",
                              "var dataDestructionCompletedDate =  (Date.now() + 172800000); pm.environment.set('dataDestructionCompletedDate', new Date(dataDestructionCompletedDate).toISOString())",
                              "var dataDestructionRequestedDate = (Date.now() + 86400000); pm.environment.set('dataDestructionRequestedDate', new Date(dataDestructionRequestedDate).toISOString())",
                              "",
                              "var ndaCompletedDate = (Date.now() + 1864000000); pm.environment.set('ndaCompletedDate', new Date(ndaCompletedDate).toISOString())",
                              "var ndaRequestedDate = (Date.now() + 86400000); pm.environment.set('ndaRequestedDate', new Date(ndaRequestedDate).toISOString())",
                              "var restrictionEndDate = (Date.now() + 86400000); pm.environment.set('restrictionEndDate', new Date(restrictionEndDate).toISOString())",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "48e0b6a5-28c0-4cca-a631-58b2510ae53b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomDealName}}\",\r\n    \"description\": \"{{randomDealDescription}}\",\r\n    \"categoryId\": \"{{categoryId}}\",\r\n     \"recordType\": \"{{recordTypeDeal}}\",\r\n    \"status\": \"{{dealStatus}}\",\r\n    \"complianceStatus\": \"{{complianceStatus}}\",\r\n    \"startDate\": \"{{startDate}}\",\r\n    \"completionDate\": \"{{completionDate}}\",\r\n    \"isUrgent\": {{isUrgent}},\r\n    \"isDraft\": false,\r\n     \"companies\": [{\r\n             \"name\": \"{{securitySearchCompanyName}}\",\r\n            \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"contactsUnderTent\": [],\r\n            \"companyAdvisees\": [],\r\n            \"dataDestructionCompletedDate\": \"{{dataDestructionCompletedDate}}\",\r\n            \"dataDestructionRequestedDate\": \"{{dataDestructionRequestedDate}}\",\r\n            \"dataDestructionStatus\": \"{{dataDestructionStatus}}\",\r\n            \"ndaCompletedDate\": \"{{ndaCompletedDate}}\",\r\n            \"ndaRequestedDate\": \"{{ndaRequestedDate}}\",\r\n            \"ndaStatus\": \"{{ndaStatus}}\",\r\n            \"status\": \"{{companyStatus}}\",\r\n            \"typeId\": \"{{typeId}}\"\r\n        }],\r\n    \"dealMembers\": [\r\n        {\r\n            \"memberId\": \"{{memberIdRecordVisibility}}\",\r\n            \"memberType\": \"{{memberTypeRecordVisibility}}\"\r\n        },\r\n        {\r\n            \"memberId\": \"{{memberId}}\",\r\n            \"memberType\": \"{{memberTypeInternalDealLead}}\"\r\n        }\r\n    ],\r\n    \"restrictions\": [\r\n        {\r\n            \"name\": \"{{restrictionName}}\",\r\n            \"endDate\": \"{{restrictionEndDate}}\",\r\n            \"startDate\": \"{{startDate}}\",\r\n            \"employeeRestriction\": \"{{employeeRestriction}}\",\r\n            \"companyRestrictions\": [{\r\n                \"company\": {\r\n                        \"name\": \"{{securitySearchCompanyName}}\"\r\n                    }\r\n            }\r\n            ],\r\n            \"memberRestrictions\": [\r\n                 {\r\n                    \"userId\": \"{{memberId}}\",\r\n                    \"targetMemberType\": \"{{memberTypeInternalDealLead}}\"\r\n\r\n                    \r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/deals"
                      },
                      "response": []
                    },
                    {
                      "name": "set vars for the screening list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})"
                            ],
                            "type": "text/javascript",
                            "id": "b96b18d4-e333-404c-8462-6ea4fd1a4540"
                          }
                        }
                      ],
                      "id": "5ba4c42d-3b87-4a60-9d17-5be159da0563",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create a new list",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e48311b9-8100-4a22-a253-b7b592b19c8c",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", jsonData.id);"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "2313c65a-8c8a-4ff3-bdb9-80eef008c7a8",
                            "exec": [
                              "",
                              "",
                              "pm.environment.set(\"randomListName\", _.random(1, 1000) +\" \" + \"API screening list\")",
                              "",
                              "",
                              "var dateNow= new Date();pm.environment.set(\"randomListDescription\", dateNow.toISOString() + \" \" + \"API screening list description\")",
                              "",
                              "",
                              "// pm.sendRequest('https://qa.platform.devacaalpha.com/api/control-room/v1/deals?$expand=restrictions,dealMembers,companies', function (err, res) {",
                              "//         pm.expect(err).to.not.be.ok;",
                              "//         pm.expect(res).to.have.property('code', 200);",
                              "//         pm.expect(res).to.have.property('status', 'OK');",
                              "//     });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "dec0ed73-fbbc-404f-a028-a2b79397baea",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{randomListName}}\",\r\n    \"description\": \"{{randomListDescription}}\",\r\n    \"timeZone\": \"{{timeZone}}\",\r\n    \"status\": \"{{listStatus}}\",\r\n    \"records\": [\r\n        {\r\n          \r\n          \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n            \"cusip\": \"{{cusip}}\",\r\n            \"isin\": \"{{isin}}\",\r\n            \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n            \"securityName\": \"{{securitySearchCompanyName}}\",\r\n            \"dealId\": \"{{dealId}}\"\r\n            \r\n        }\r\n    ]\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-lists"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "dcb831e5-5783-4502-9176-8c95c8efba19",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "87ab421d-4b29-4eae-b68a-1c86f81325d2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/screening-lists/{{screeningListId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c9ef5a34-e34f-40ab-9354-4a9c96a7a8b2",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Status is inactive\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "        pm.expect(jsonData.status).to.eql(\"Inactive\");\r",
                              "    \r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "fa1cc596-ee28-4b5f-8087-4613567d083d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-lists/{{screeningListId}}?$expand=Records($expand=Deal)",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-lists",
                            "{{screeningListId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Records($expand=Deal)"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "d7072465-e532-4120-bd22-a8bad064dcc1"
                }
              ],
              "id": "5f0d7ff0-3923-4606-b5f6-304699a4df4a"
            }
          ],
          "id": "6e793f92-2d37-4dae-bea9-5fabda64d3de"
        },
        {
          "name": "Screening List Records",
          "item": [
            {
              "name": "getAll",
              "item": [
                {
                  "name": "getAll",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8c43ca04-0d60-422b-8916-a5c06a3e5065",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "var jsonData =pm.response.json()\r",
                          "postman.setEnvironmentVariable(\"screeningListId\", value[0].screeningListId)"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "e31d361f-5a1e-41c5-84c6-59221532773e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/screening-list-records?$expand=Deal",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "screening-list-records"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Deal"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "b6dc8a86-dbf3-41fd-a697-4849b5fd00f7"
            },
            {
              "name": "getById",
              "item": [
                {
                  "name": "getById for existing record",
                  "item": [
                    {
                      "name": "set vars for deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d39155fe-11b2-44fc-acde-c9dbd0e6b2a6",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"dealIdScreening\", jsonData.value[0].id);\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "45a4e235-5c97-4b10-9936-dfd32d998ed5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set dealId for the screening list record",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2c5f5971-acc9-4e6b-ab26-3e1806421ef9",
                            "exec": [
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "postman.setEnvironmentVariable(\"dealIdForScreeningList\", jsonData.value[0].id);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9337f1e0-6555-40c1-8c5f-25abce6fa224",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6009ae61-50ec-4b95-b23a-d757f3c809cc",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "var jsonData =pm.response.json()\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", value[0].screeningListId)"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "732654a7-9637-4f22-a3d3-0b7e0f8806f1",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "05ec9cf6-2896-43a3-b3f1-5cb0ba91bea6",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})\r",
                              "\r",
                              "var jsonData = pm.response.json()\r",
                              "postman.setEnvironmentVariable(\"screeningListRecordId\", jsonData.id)"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "376dede8-95c3-455c-9780-e5a4be57ab5d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n   \"screeningListId\": \"{{screeningListId}}\",\r\n    \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n    \"cusip\": \"{{cusip}}\",\r\n    \"isin\": \"{{isin}}\",\r\n    \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n    \"securityName\": \"{{securitySearchCompanyName}}\",\r\n    \"dealId\": \"{{dealIdForScreeningList}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-list-records"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cbbfca55-70f7-4ee3-80e7-b344cf229662",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5826e482-4e37-49d1-a6ed-b591a3026dab",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records/{{screeningListRecordId}}?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records",
                            "{{screeningListRecordId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "518a9b65-7dbe-49b1-9de3-d9f934a851ec"
                },
                {
                  "name": "getById non existing",
                  "item": [
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "54826b89-e3b9-41d2-b237-7bab93b3b047",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 404\", function () {\r",
                              "    pm.response.to.have.status(404);\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d98d264b-45d4-415e-bba6-e155feb30c7c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records(1234567)?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records(1234567)"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "34660633-1a60-4d20-a49c-e1d9c7c55315"
                }
              ],
              "id": "0ccf0a52-ba61-437e-8843-817677b576a4"
            },
            {
              "name": "create",
              "item": [
                {
                  "name": "create a record and assign it to a deal",
                  "item": [
                    {
                      "name": "set vars for deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1733d4bf-a3b7-438a-bad2-e3fd1a04b524",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"dealIdforSL\", jsonData.value[0].id);\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2b15d635-d588-494c-8a2d-7959eafa9484",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set dealId for the screening list record",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "dd6fa51a-dc5f-428e-bc36-bc589c3bb8b7",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"dealIdforSL\", jsonData.value[0].id);\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d6889b35-7b99-4c90-b08b-c74970612247",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b1ccace1-cf47-4986-a47e-d79604b01904",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "var jsonData =pm.response.json()\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", value[0].screeningListId)"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "02b3aa60-c8d9-428d-be93-d80a5504ab1e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "598cc7eb-d5b4-493c-8330-aa9141b85544",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "41c8436d-3840-4c8a-8204-61fbbf164fef",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n   \"screeningListId\": \"{{screeningListId}}\",\r\n    \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n    \"cusip\": \"{{cusip}}\",\r\n    \"isin\": \"{{isin}}\",\r\n    \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n    \"securityName\": \"{{securitySearchCompanyName}}\",\r\n    \"dealId\": \"{{dealIdForScreeningList}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-list-records"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "075c16a4-4b2d-4d37-86af-8a576107c7b3",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0d630a63-2a28-424d-b2f1-2456802c4339",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records/{{screeningListRecordId}}?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records",
                            "{{screeningListRecordId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "d678d6c4-1484-45d4-9196-bd06244dc113"
                },
                {
                  "name": "create a record without assigning it to a deal",
                  "item": [
                    {
                      "name": "set vars for deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b9303eba-aeaa-48af-852c-492a927631e2",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"dealIdforSL\", jsonData.value[0].id);\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a209700a-4d68-42fd-9a41-55a2f81ee5fb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set dealId for the screening list record",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b7904334-81b1-4188-892d-561b15afd434",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"dealIdforSL\", jsonData.value[0].id);\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2dbb0475-11c5-450d-835e-f8605e82aa09",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e1c7787a-39c9-4580-b401-3540d3aa18b5",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "var jsonData =pm.response.json()\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", value[0].screeningListId)\r",
                              "postman.setEnvironmentVariable(\"screeninglistRecordId\", value[0].id)"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4044e7c5-ecb6-4338-b85d-7188e24fb278",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "22d66189-055c-46d7-a23d-4e567cdbf5b4",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2698b2b6-d4df-429a-94c3-26fb71a8bce1",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n   \"screeningListId\": \"{{screeningListId}}\",\r\n    \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n    \"cusip\": \"{{cusip}}\",\r\n    \"isin\": \"{{isin}}\",\r\n    \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n    \"securityName\": \"{{securitySearchCompanyName}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-list-records"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b8765492-2ef1-45dd-a0b1-bc2ca31a72e5",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "387dccec-8f41-4e11-a420-41f787b13244",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records/{{screeningListRecordId}}?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records",
                            "{{screeningListRecordId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "9cc126bf-ffb1-46e1-b030-e1ea2440f112"
                }
              ],
              "id": "e20dfa90-d332-4750-beec-1e236d0a8c94"
            },
            {
              "name": "move to screening list",
              "item": [
                {
                  "name": "getAll",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0f81e713-a98a-43c5-bff8-cfb28691effc",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"value\": {\r",
                          "      \"type\": \"array\",\r",
                          "      \"items\": {}\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"value\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "// Test 2\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var json= pm.response.json()\r",
                          "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "var jsonData =pm.response.json()\r",
                          "postman.setEnvironmentVariable(\"screeningListId\", value[0].screeningListId)\r",
                          "postman.setEnvironmentVariable(\"screeninglistRecordId\", value[0].id)"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "af115ae2-b33b-4b10-a267-516f499412c6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{ApiBaseUrl}}/v1/screening-list-records?$expand=Deal",
                      "host": [
                        "{{ApiBaseUrl}}"
                      ],
                      "path": [
                        "v1",
                        "screening-list-records"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Deal"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "move to screening list",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8dabb9e6-6118-41c7-ab38-8240ed504518",
                        "exec": [
                          "// Test 1\r",
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "// Test 2\r",
                          "var schema = {\r",
                          "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                          "  \"type\": \"object\",\r",
                          "  \"properties\": {\r",
                          "    \"@odata.context\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"id\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"clientId\": {\r",
                          "      \"type\": \"integer\"\r",
                          "    },\r",
                          "    \"name\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"description\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"categoryId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"status\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"complianceStatus\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"startDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"completionDate\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"isUrgent\": {\r",
                          "      \"type\": \"boolean\"\r",
                          "    },\r",
                          "    \"lastModifiedByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"lastModifiedTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdByUserId\": {\r",
                          "      \"type\": \"string\"\r",
                          "    },\r",
                          "    \"createdTimestamp\": {\r",
                          "      \"type\": \"string\"\r",
                          "    }\r",
                          "  },\r",
                          "  \"required\": [\r",
                          "    \"@odata.context\",\r",
                          "    \"id\",\r",
                          "    \"clientId\",\r",
                          "    \"name\",\r",
                          "    \"description\",\r",
                          "    \"categoryId\",\r",
                          "    \"status\",\r",
                          "    \"complianceStatus\",\r",
                          "    \"startDate\",\r",
                          "    \"completionDate\",\r",
                          "    \"isUrgent\",\r",
                          "    \"lastModifiedByUserId\",\r",
                          "    \"lastModifiedTimestamp\",\r",
                          "    \"createdByUserId\",\r",
                          "    \"createdTimestamp\"\r",
                          "  ]\r",
                          "}\r",
                          "\r",
                          "pm.test(\"Schema is valid\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                          "})\r",
                          "\r",
                          "// Test 3\r",
                          "pm.test(\"Creation date is today\", function(){\r",
                          "    var jsonData = pm.response.json();\r",
                          "\r",
                          "    var currTime = new Date();\r",
                          "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                          "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                          "    var yyyy = currTime.getFullYear();\r",
                          "    var hh = currTime.getHours() - 3;\r",
                          "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                          "\r",
                          "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                          "    \r",
                          "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                          "})"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "a84d6613-bb7c-4efa-aaa5-c8630f65fa55",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"screeningListId\": \"{{screeningListId}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{ApiBaseUrl}}/v1/screening-list-records/{{screeningListRecordId}}/move-to-screening-list"
                  },
                  "response": []
                }
              ],
              "id": "f6437dbb-bf98-4955-bb3e-26296a2fe981"
            },
            {
              "name": "patch",
              "item": [
                {
                  "name": "edit a screening list record",
                  "item": [
                    {
                      "name": "set vars for deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "57f85721-bc60-4ca4-9ddb-cf4af4e3d368",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"dealIdforSL\", jsonData.value[0].id);\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c6f58cbb-b3f6-404a-9b1a-8c654e9ff3a9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set dealId for the screening list record",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bbbbff19-3345-41ef-8b5a-301f9d2db64d",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"dealIdforSL\", jsonData.value[0].id);\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5642b984-d1fb-4f57-9fee-b7cba8d388cd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3f6ed3b9-4774-4285-a7bd-b98a35837705",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "var jsonData =pm.response.json()\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", value[0].screeningListId)\r",
                              "postman.setEnvironmentVariable(\"screeninglistRecordId\", value[0].id)"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "754d1cb7-6701-4da1-8ba5-d264cbe0b33d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c422ed33-ada2-4385-8dfa-c5df3134fbe7",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "1b9b6e82-b745-44ed-9385-7026a407573a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n   \"screeningListId\": \"{{screeningListId}}\",\r\n    \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n    \"cusip\": \"{{cusip}}\",\r\n    \"isin\": \"{{isin}}\",\r\n    \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n    \"securityName\": \"{{securitySearchCompanyName}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-list-records"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "019b8a5b-3d7f-424d-8f62-4d3d034351c0",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ed11a52d-cdc2-4a99-9cdf-423565d150c6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records/{{screeningListRecordId}}?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records",
                            "{{screeningListRecordId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "patch",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c60cafa7-9524-4d22-a550-b918f57b21aa",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "cecbc632-c2ec-4578-af97-09898f940b90",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"isin\": \"{{isin}}\",\r\n    \"cusip\": \"{{cusip}}\",\r\n    \"dealId\": \"{{dealIdForScreeningList}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-list-records/{{screeningListRecordId}}"
                      },
                      "response": []
                    }
                  ],
                  "id": "a902bee0-8339-4d5c-9800-473ef53ed136"
                }
              ],
              "id": "17ea8fc1-c4fe-45f2-b527-f985df7a8673"
            },
            {
              "name": "delete",
              "item": [
                {
                  "name": "delete existing record",
                  "item": [
                    {
                      "name": "set vars for deal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5b42d2fd-11a8-4977-8c5b-79e0e20c69c5",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"dealIdforSL\", jsonData.value[0].id);\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "c1636026-c624-453c-a444-740664b14eb0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "set dealId for the screening list record",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "eb365748-c02e-443b-baad-8dd2b6e2ad4d",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var responseJson = JSON.parse(responseBody);\r",
                              "var a=[];\r",
                              "var list = (responseJson.value).length;\r",
                              "for (var i = 0; i < list; i++) \r",
                              "                  {\r",
                              "                   var counter = responseJson.value[i];\r",
                              "                    if (counter.isin !== null){\r",
                              "                        a.push(counter)\r",
                              "                    }\r",
                              "                    \r",
                              "                   }\r",
                              "\r",
                              " for(var i =0;  i < a.length; i++){\r",
                              "     var companyWithIsin = a[i].companies.find(company => company.isin !== null)\r",
                              "if (companyWithIsin && companyWithIsin.name) {\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyName\", companyWithIsin ? companyWithIsin.name : \"\");\r",
                              "postman.setEnvironmentVariable(\"securitySearchCompanyExtarnalId\", companyWithIsin ? companyWithIsin.externalId : \"\");\r",
                              "postman.setEnvironmentVariable(\"cusip\", companyWithIsin ? companyWithIsin.cusip : \"\");\r",
                              "postman.setEnvironmentVariable(\"isin\", companyWithIsin ? companyWithIsin.isin : \"\");\r",
                              "return;\r",
                              "}\r",
                              "     console.log(companyWithIsin)\r",
                              "         \r",
                              "         \r",
                              "        \r",
                              "         console.log(a[i])\r",
                              "    }\r",
                              "  \r",
                              "\r",
                              "\r",
                              "function getRandomInt(max) {\r",
                              "  return Math.floor(Math.random() * max);\r",
                              "}\r",
                              "\r",
                              "var jsonData = JSON.parse(responseBody);\r",
                              "var valueSize = Object.keys(jsonData.value).length\r",
                              "var valueId = getRandomInt(valueSize-1);\r",
                              "var companySize = Object.keys(jsonData.value[valueId].companies).length\r",
                              "var companyId = getRandomInt(companySize);\r",
                              "var statusSize = Object.keys(jsonData.value[valueId].status).length\r",
                              "var statusId = getRandomInt(statusSize-1);\r",
                              "var complianceStatusSize = Object.keys(jsonData.value[valueId].complianceStatus).length\r",
                              "var complianceStatusId = getRandomInt(complianceStatusSize-1);\r",
                              "var restrictionSize = Object.keys(jsonData.value[valueId].restrictions).length\r",
                              "var restrictionId = getRandomInt(restrictionSize);\r",
                              "var bool = [true, false];\r",
                              "var isUrgent = bool[getRandomInt(2)];\r",
                              "var isDraft = bool[getRandomInt(2)];\r",
                              "var dealMembersSize = Object.keys(jsonData.value[valueId].dealMembers).length;\r",
                              "var dealMembersId = getRandomInt(dealMembersSize-1);\r",
                              "var dealMemebersIdStepTwo = getRandomInt(dealMembersSize-1);\r",
                              "var dataStatuses = ['NotAvailable', 'Requested', 'Confirmed']\r",
                              "var dataDestructionStatus = dataStatuses[getRandomInt(0,2)]\r",
                              "var ndaStatuses = ['NotAvailable', 'Negotiating', 'Executed']\r",
                              "var ndaStatus = ndaStatuses[getRandomInt(0,2)]\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"dataDestructionStatus\", jsonData.value[valueId].companies[companyId].dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"dataDestructionStatus\", dataDestructionStatus);\r",
                              "postman.setEnvironmentVariable(\"ndaStatus\", ndaStatus);\r",
                              "//postman.setEnvironmentVariable(\"typeId\", jsonData.value[valueId].companies[companyId].typeId);\r",
                              "postman.setEnvironmentVariable(\"typeId\",\r",
                              "     jsonData.value[valueId].companies[companyId]\r",
                              "     ? jsonData.value[valueId].companies[companyId].typeId \r",
                              "     : null);\r",
                              "\r",
                              "postman.setEnvironmentVariable(\"isUrgent\", jsonData.value[valueId].isUrgent);\r",
                              "postman.setEnvironmentVariable(\"isDraft\", jsonData.value[valueId].isDraft);\r",
                              "postman.setEnvironmentVariable(\"categoryId\", jsonData.value[valueId].categoryId);\r",
                              "postman.setEnvironmentVariable(\"dealStatus\", jsonData.value[valueId].status);\r",
                              "postman.setEnvironmentVariable(\"complianceStatus\", jsonData.value[valueId].complianceStatus);\r",
                              "postman.setEnvironmentVariable(\"companyStatus\", jsonData.value[valueId].companies[companyId].status);\r",
                              "postman.setEnvironmentVariable(\"memberIdRecordVisibility\", jsonData.value[valueId].dealMembers[dealMembersId].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeRecordVisibility\", \"RecordVisibilityUser\");\r",
                              "postman.setEnvironmentVariable(\"memberId\", jsonData.value[valueId].dealMembers[dealMemebersIdStepTwo].memberId);\r",
                              "postman.setEnvironmentVariable(\"memberTypeInternalDealLead\", \"InternalDealLeadUser\");\r",
                              "postman.setEnvironmentVariable(\"employeeRestriction\", \"AllEmployees\");\r",
                              "postman.setEnvironmentVariable(\"recordTypeDeal\", \"Deal\");\r",
                              "postman.setEnvironmentVariable(\"dealIdforSL\", jsonData.value[0].id);\r",
                              "\r",
                              "// postman.setEnvironmentVariable(\"employeeRestriction\",\r",
                              "//      jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null);\r",
                              "// console.log(jsonData.value[valueId].restrictions[restrictionId] \r",
                              "//      ? jsonData.value[valueId].restrictions[restrictionId].employeeRestriction \r",
                              "//      : null)\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "559f1423-82ec-4fd2-a2bb-185a53098f2d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/deals?$expand=restrictions,dealMembers,companies",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "deals"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "restrictions,dealMembers,companies"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "getAll",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "43f69322-b083-405c-b0ae-8dc29ef673c0",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"value\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": {}\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"value\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var json= pm.response.json()\r",
                              "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "var jsonData =pm.response.json()\r",
                              "postman.setEnvironmentVariable(\"screeningListId\", value[0].screeningListId)\r",
                              "postman.setEnvironmentVariable(\"screeninglistRecordId\", value[0].id)"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a3bad0c5-925e-4369-8bdb-d78670e3a8a9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5253d58b-a556-4ec6-b219-b49e3d7fed1f",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 201\", function () {\r",
                              "    pm.response.to.have.status(201);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"@odata.context\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"id\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"clientId\": {\r",
                              "      \"type\": \"integer\"\r",
                              "    },\r",
                              "    \"name\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"description\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"categoryId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"status\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"complianceStatus\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"startDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"completionDate\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"isUrgent\": {\r",
                              "      \"type\": \"boolean\"\r",
                              "    },\r",
                              "    \"lastModifiedByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"lastModifiedTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdByUserId\": {\r",
                              "      \"type\": \"string\"\r",
                              "    },\r",
                              "    \"createdTimestamp\": {\r",
                              "      \"type\": \"string\"\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"@odata.context\",\r",
                              "    \"id\",\r",
                              "    \"clientId\",\r",
                              "    \"name\",\r",
                              "    \"description\",\r",
                              "    \"categoryId\",\r",
                              "    \"status\",\r",
                              "    \"complianceStatus\",\r",
                              "    \"startDate\",\r",
                              "    \"completionDate\",\r",
                              "    \"isUrgent\",\r",
                              "    \"lastModifiedByUserId\",\r",
                              "    \"lastModifiedTimestamp\",\r",
                              "    \"createdByUserId\",\r",
                              "    \"createdTimestamp\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Creation date is today\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "\r",
                              "    var currTime = new Date();\r",
                              "    var dd = String(currTime.getDate()).padStart(2, '0');\r",
                              "    var mm = String(currTime.getMonth() + 1).padStart(2, '0');\r",
                              "    var yyyy = currTime.getFullYear();\r",
                              "    var hh = currTime.getHours() - 3;\r",
                              "    currTime = yyyy + '-' + mm + '-' + dd + 'T' + hh + \":\";\r",
                              "\r",
                              "    var cretedTimestamp = jsonData.createdTimestamp;\r",
                              "    \r",
                              "    pm.expect(cretedTimestamp).to.include(currTime);\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4b603d34-5456-4025-8179-a914e64c566b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n   \"screeningListId\": \"{{screeningListId}}\",\r\n    \"externalId\": \"{{securitySearchCompanyExtarnalId}}\",\r\n    \"cusip\": \"{{cusip}}\",\r\n    \"isin\": \"{{isin}}\",\r\n    \"externalIdentifierType\": \"SecMasterSecurityId\",\r\n    \"securityName\": \"{{securitySearchCompanyName}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{ApiBaseUrl}}/v1/screening-list-records"
                      },
                      "response": []
                    },
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8abaece8-007b-4d0c-8187-f3b58842e67d",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "pm.test(\"Response body is valid\", function () {\r",
                              "    if (pm.response.code == 404) {\r",
                              "        pm.expect(pm.response.text()).to.include(\"Entity of type\");\r",
                              "        pm.expect(pm.response.text()).to.include(\"was not found.\");\r",
                              "    }\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5b1e9cba-71f1-4561-8206-269d39b8c82f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/screening-list-records/{{screeningListRecordId}}"
                      },
                      "response": []
                    },
                    {
                      "name": "getById",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "31d21832-e0a9-4069-b447-e68085da7fbd",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "\r",
                              "// Test 2\r",
                              "var schema = {\r",
                              "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                              "  \"type\": \"object\",\r",
                              "  \"properties\": {\r",
                              "    \"queryable\": {\r",
                              "      \"type\": \"array\",\r",
                              "      \"items\": [\r",
                              "        {\r",
                              "          \"type\": \"object\",\r",
                              "          \"properties\": {\r",
                              "            \"id\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"clientId\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"name\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"description\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"categoryId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"category\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"status\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"complianceStatus\": {\r",
                              "              \"type\": \"integer\"\r",
                              "            },\r",
                              "            \"startDate\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"completionDate\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"isUrgent\": {\r",
                              "              \"type\": \"boolean\"\r",
                              "            },\r",
                              "            \"companies\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"dealMembers\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"lastModifiedBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"lastModifiedTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdByUserId\": {\r",
                              "              \"type\": \"string\"\r",
                              "            },\r",
                              "            \"createdBy\": {\r",
                              "              \"type\": \"null\"\r",
                              "            },\r",
                              "            \"createdTimestamp\": {\r",
                              "              \"type\": \"string\"\r",
                              "            }\r",
                              "          },\r",
                              "          \"required\": [\r",
                              "            \"id\",\r",
                              "            \"clientId\",\r",
                              "            \"name\",\r",
                              "            \"description\",\r",
                              "            \"categoryId\",\r",
                              "            \"category\",\r",
                              "            \"status\",\r",
                              "            \"complianceStatus\",\r",
                              "            \"startDate\",\r",
                              "            \"completionDate\",\r",
                              "            \"isUrgent\",\r",
                              "            \"companies\",\r",
                              "            \"dealMembers\",\r",
                              "            \"lastModifiedByUserId\",\r",
                              "            \"lastModifiedBy\",\r",
                              "            \"lastModifiedTimestamp\",\r",
                              "            \"createdByUserId\",\r",
                              "            \"createdBy\",\r",
                              "            \"createdTimestamp\"\r",
                              "          ]\r",
                              "        }\r",
                              "      ]\r",
                              "    }\r",
                              "  },\r",
                              "  \"required\": [\r",
                              "    \"queryable\"\r",
                              "  ]\r",
                              "}\r",
                              "\r",
                              "pm.test(\"Schema is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                              "})\r",
                              "\r",
                              "// Test 3\r",
                              "pm.test(\"Response is valid\", function(){\r",
                              "    var jsonData = pm.response.json();\r",
                              "    \r",
                              "    if (jsonData.queryable.length > 0) {\r",
                              "        var requestId = pm.request.url.path[3];\r",
                              "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                              "    }\r",
                              "})"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f8e853f8-38ab-4dca-92c7-5fae8ca3808f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{ApiBaseUrl}}/v1/screening-list-records/{{screeningListRecordId}}?$expand=Deal",
                          "host": [
                            "{{ApiBaseUrl}}"
                          ],
                          "path": [
                            "v1",
                            "screening-list-records",
                            "{{screeningListRecordId}}"
                          ],
                          "query": [
                            {
                              "key": "$expand",
                              "value": "Deal"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "413447d8-0ba8-4033-9268-e049accc8e19"
                },
                {
                  "name": "delete non existing record",
                  "item": [
                    {
                      "name": "delete",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "42997750-e1e1-47be-bf37-ab6acbd1ed26",
                            "exec": [
                              "// Test 1\r",
                              "pm.test(\"Status code is 204 or 404\", function () {\r",
                              "    if (pm.response.code == 204) {\r",
                              "        pm.response.to.have.status(204);\r",
                              "    }\r",
                              "    else {\r",
                              "        pm.response.to.have.status(404);\r",
                              "    }\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "bab37b51-2c6d-4c96-b1ff-4345e3c845f7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": "{{ApiBaseUrl}}/v1/screening-list-records(123456789)"
                      },
                      "response": []
                    }
                  ],
                  "id": "bba6e7ac-66f5-49f7-baf6-f138dcf08e84"
                }
              ],
              "id": "7dea407e-9ee4-4df0-a9e1-d0fecd91ecc3"
            }
          ],
          "id": "d78cabc1-c0f1-440e-a24e-3beb1d7d9e58"
        },
        {
          "name": "Webhook Definition",
          "item": [
            {
              "name": "getAll",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "40135a9e-ebb1-42e1-a282-8773de2c2ba2"
                  }
                }
              ],
              "id": "40335422-79e0-43a9-a59f-811bdcd1189d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{ApiBaseUrl}}/v1/webhook-definitions"
              },
              "response": []
            },
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "209d29af-5ab0-422e-8051-1aec82781a5c"
                  }
                }
              ],
              "id": "6749e653-8bd6-4564-ab42-0a7b79313193",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/webhook-definitions/:webhookId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "webhook-definitions",
                    ":webhookId"
                  ],
                  "variable": [
                    {
                      "id": "24bc5ec4-36da-4741-9267-1207f0eaba3e",
                      "key": "webhookId",
                      "value": "eca6d968-e4a0-450d-64d7-08d9aa93ef5a"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "getById Copy",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "4c195583-3999-46f5-9f96-1369ae423b67"
                  }
                }
              ],
              "id": "5ff57fc1-bfb5-47c5-8bc9-cecf395e152c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/webhook-definitions/:webhookId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "webhook-definitions",
                    ":webhookId"
                  ],
                  "variable": [
                    {
                      "id": "ee3dd3ca-774b-43a5-a1f8-9906f30f4328",
                      "key": "webhookId",
                      "value": "eca6d968-e4a0-450d-64d7-08d9aa93ef5a"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "52512eab-d915-4653-9fbd-c567b5f3e37b"
        },
        {
          "name": "Security Master",
          "item": [
            {
              "name": "look up",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "d2d76041-3df4-4d1e-b781-9e0fab91526c"
                  }
                }
              ],
              "id": "310c0e42-8e80-4d42-8bd1-0b5973c252b2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/security-master/lookup?lookUpType=SecMasterSecurityId&lookUpValue=031df699-5502-eb11-8140-000c29887906",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "security-master",
                    "lookup"
                  ],
                  "query": [
                    {
                      "key": "lookUpType",
                      "value": "SecMasterSecurityId"
                    },
                    {
                      "key": "lookUpValue",
                      "value": "031df699-5502-eb11-8140-000c29887906"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "search",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "fc18f8ca-3ef3-4740-87ed-c28fec4fafc8"
                  }
                }
              ],
              "id": "7edf4c38-9706-43a7-bc2c-a24c7f69f2bd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/security-master/search?term=googl&top=5&isFullSearch=false&supplementalFields=cusip",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "security-master",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "term",
                      "value": "googl"
                    },
                    {
                      "key": "top",
                      "value": "5"
                    },
                    {
                      "key": "isFullSearch",
                      "value": "false"
                    },
                    {
                      "key": "supplementalFields",
                      "value": "cusip"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "search QA",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "77682902-c773-4e48-a86d-71978464483a"
                  }
                }
              ],
              "id": "dca0364d-1a59-4e94-be98-e7ef4c7a75fb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://qa.platform.devacaalpha.com/api/control-room/v1/security-master/search?top=5&isFullSearch=false&term=a",
                  "protocol": "https",
                  "host": [
                    "qa",
                    "platform",
                    "devacaalpha",
                    "com"
                  ],
                  "path": [
                    "api",
                    "control-room",
                    "v1",
                    "security-master",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "top",
                      "value": "5"
                    },
                    {
                      "key": "isFullSearch",
                      "value": "false"
                    },
                    {
                      "key": "term",
                      "value": "a"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "search Real",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "4da55126-2565-48bb-a38c-6e74bdf17e3e"
                  }
                }
              ],
              "id": "d59aa7bb-182e-4fce-9acb-86be15f1a242",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "http://ec2-qa-sm.devaws.acats.com:8082/api/1.0/ref/security/search?supplementalFields=*&allowedSearchTypes=FindAsYouType&top=0&SearchTerm=googl&text=googl",
                  "protocol": "http",
                  "host": [
                    "ec2-qa-sm",
                    "devaws",
                    "acats",
                    "com"
                  ],
                  "port": "8082",
                  "path": [
                    "api",
                    "1.0",
                    "ref",
                    "security",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "supplementalFields",
                      "value": "*"
                    },
                    {
                      "key": "allowedSearchTypes",
                      "value": "FindAsYouType"
                    },
                    {
                      "key": "top",
                      "value": "0"
                    },
                    {
                      "key": "SearchTerm",
                      "value": "googl"
                    },
                    {
                      "key": "text",
                      "value": "googl"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "search Real IP",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "a59c0f82-d1bf-4024-894e-b264ad6a1e2f"
                  }
                }
              ],
              "id": "2de7b484-9aca-43a5-9041-152848b31005",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "http://172.29.146.133:8082/api/1.0/ref/security/search?SearchTerm=googl&text=googl",
                  "protocol": "http",
                  "host": [
                    "172",
                    "29",
                    "146",
                    "133"
                  ],
                  "port": "8082",
                  "path": [
                    "api",
                    "1.0",
                    "ref",
                    "security",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "SearchTerm",
                      "value": "googl"
                    },
                    {
                      "key": "text",
                      "value": "googl"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "search Real IP Copy",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "cde84ecd-09ec-4c3e-a69a-f6088ea88f36"
                  }
                }
              ],
              "id": "5cb2c6e3-9aff-45af-ade8-b6e742a9e1f5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "http://172.29.146.133:8082/api/1.0/ref/security/search?SearchTerm=googl&text=googl&supplementalFields=cusip&supplementalFields=isin",
                  "protocol": "http",
                  "host": [
                    "172",
                    "29",
                    "146",
                    "133"
                  ],
                  "port": "8082",
                  "path": [
                    "api",
                    "1.0",
                    "ref",
                    "security",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "SearchTerm",
                      "value": "googl"
                    },
                    {
                      "key": "text",
                      "value": "googl"
                    },
                    {
                      "key": "supplementalFields",
                      "value": "cusip"
                    },
                    {
                      "key": "supplementalFields",
                      "value": "isin"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "search Koce",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"@odata.context\": {\r",
                      "      \"type\": \"string\"\r",
                      "    },\r",
                      "    \"value\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": {}\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"@odata.context\",\r",
                      "    \"value\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "// Test 2\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var json= pm.response.json()\r",
                      "    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "da8dcfc9-1480-4973-bd8f-9011b267780b"
                  }
                }
              ],
              "id": "391754d7-a2d8-4d6a-b91e-2dca4cdc87d1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/security-master/search?term=googl&top=25&isFullSearch=true&supplementalFields=cusip,isin,tickerSymbol,country,sector,exchangeMic",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "security-master",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "term",
                      "value": "googl"
                    },
                    {
                      "key": "top",
                      "value": "25"
                    },
                    {
                      "key": "isFullSearch",
                      "value": "true"
                    },
                    {
                      "key": "supplementalFields",
                      "value": "cusip,isin,tickerSymbol,country,sector,exchangeMic"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "get Kosta",
              "id": "58ab774e-f954-4415-8d13-7c9a6a8dc462",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/issuer-master/details?identifier=003JLG-E&identifierType=FactSetId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "issuer-master",
                    "details"
                  ],
                  "query": [
                    {
                      "key": "identifier",
                      "value": "003JLG-E"
                    },
                    {
                      "key": "identifierType",
                      "value": "FactSetId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "get Kosta Copy",
              "id": "f876cd8c-4cb1-4544-8dea-46f5411d825d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/issuer-master/related-issuers?identifier=003JW8-E&identifierType=FactSetId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "issuer-master",
                    "related-issuers"
                  ],
                  "query": [
                    {
                      "key": "identifier",
                      "value": "003JW8-E"
                    },
                    {
                      "key": "identifierType",
                      "value": "FactSetId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "get Kosta Copy 2",
              "id": "e29286aa-54d9-4be8-8fca-f6a1c582873c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/issuer-master/immediate-children?identifier=003JW8-E&identifierType=FactSetId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "issuer-master",
                    "immediate-children"
                  ],
                  "query": [
                    {
                      "key": "identifier",
                      "value": "003JW8-E"
                    },
                    {
                      "key": "identifierType",
                      "value": "FactSetId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "get Kosta Copy 3",
              "id": "f6ce2cf1-3231-4310-af3e-251a580e0cdc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/issuer-master/parents?identifier=001Q57-E&identifierType=FactSetId",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "issuer-master",
                    "parents"
                  ],
                  "query": [
                    {
                      "key": "identifier",
                      "value": "001Q57-E"
                    },
                    {
                      "key": "identifierType",
                      "value": "FactSetId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "get Kosta Copy 4",
              "id": "b2b9fd7d-7bb4-4ad8-bf75-fa39cb1d8fc2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/issuer-master/search?text=goo&allowedIssuerTypes=Public,Private&top=20&includeDiagnosticInfo=true",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "issuer-master",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "text",
                      "value": "goo"
                    },
                    {
                      "key": "allowedIssuerTypes",
                      "value": "Public,Private"
                    },
                    {
                      "key": "top",
                      "value": "20"
                    },
                    {
                      "key": "includeDiagnosticInfo",
                      "value": "true"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "64192ea4-6187-4e15-92ed-39a7382832bd"
        },
        {
          "name": "Conflict Check",
          "item": [
            {
              "name": "getById",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test 1\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Test 2\r",
                      "var schema = {\r",
                      "  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
                      "  \"type\": \"object\",\r",
                      "  \"properties\": {\r",
                      "    \"queryable\": {\r",
                      "      \"type\": \"array\",\r",
                      "      \"items\": [\r",
                      "        {\r",
                      "          \"type\": \"object\",\r",
                      "          \"properties\": {\r",
                      "            \"id\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"clientId\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"name\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"description\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"categoryId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"category\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"status\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"complianceStatus\": {\r",
                      "              \"type\": \"integer\"\r",
                      "            },\r",
                      "            \"startDate\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"completionDate\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"isUrgent\": {\r",
                      "              \"type\": \"boolean\"\r",
                      "            },\r",
                      "            \"companies\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"dealMembers\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"lastModifiedBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"lastModifiedTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdByUserId\": {\r",
                      "              \"type\": \"string\"\r",
                      "            },\r",
                      "            \"createdBy\": {\r",
                      "              \"type\": \"null\"\r",
                      "            },\r",
                      "            \"createdTimestamp\": {\r",
                      "              \"type\": \"string\"\r",
                      "            }\r",
                      "          },\r",
                      "          \"required\": [\r",
                      "            \"id\",\r",
                      "            \"clientId\",\r",
                      "            \"name\",\r",
                      "            \"description\",\r",
                      "            \"categoryId\",\r",
                      "            \"category\",\r",
                      "            \"status\",\r",
                      "            \"complianceStatus\",\r",
                      "            \"startDate\",\r",
                      "            \"completionDate\",\r",
                      "            \"isUrgent\",\r",
                      "            \"companies\",\r",
                      "            \"dealMembers\",\r",
                      "            \"lastModifiedByUserId\",\r",
                      "            \"lastModifiedBy\",\r",
                      "            \"lastModifiedTimestamp\",\r",
                      "            \"createdByUserId\",\r",
                      "            \"createdBy\",\r",
                      "            \"createdTimestamp\"\r",
                      "          ]\r",
                      "        }\r",
                      "      ]\r",
                      "    }\r",
                      "  },\r",
                      "  \"required\": [\r",
                      "    \"queryable\"\r",
                      "  ]\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Schema is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
                      "})\r",
                      "\r",
                      "// Test 3\r",
                      "pm.test(\"Response is valid\", function(){\r",
                      "    var jsonData = pm.response.json();\r",
                      "    \r",
                      "    if (jsonData.queryable.length > 0) {\r",
                      "        var requestId = pm.request.url.path[3];\r",
                      "        pm.expect(jsonData.queryable[0].id).to.eql(requestId);\r",
                      "    }\r",
                      "})"
                    ],
                    "type": "text/javascript",
                    "id": "ff45d463-c60b-461e-b494-39739d8b5acb"
                  }
                }
              ],
              "id": "1dcd523a-438d-480b-9762-27a0f7b57785",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{ApiBaseUrl}}/v1/conflict-check-requests/:Id?$expand=integrationConflictCheckRequests, companies, employees",
                  "host": [
                    "{{ApiBaseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "conflict-check-requests",
                    ":Id"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "integrationConflictCheckRequests, companies, employees"
                    }
                  ],
                  "variable": [
                    {
                      "id": "cca5ed4c-b6e0-4188-9b79-0e0dafad0ca6",
                      "key": "Id",
                      "value": "37F038F9-6EBC-4E53-0023-08D9D69A4F28"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "c6d1b5b6-0203-48cf-89a7-d02a6c721172"
        }
      ],
      "id": "602e6e17-03dd-4ee7-bd21-3045310ccf1e"
    },
    {
      "name": "$metadata",
      "id": "7c704109-31eb-4936-82b0-c7dfb851fe5b",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": "{{ApiBaseUrl}}/v1/$metadata"
      },
      "response": []
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": {
      "token": "{{AuthToken}}"
    }
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "9d5da85c-0373-4cfa-9445-f231100d201f"
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "f27bf4bc-039d-4165-8597-1b2115e1964f"
      }
    }
  ]
}